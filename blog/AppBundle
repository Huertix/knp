<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Bundles, No Bundles and AppBundle in 10 Steps | KnpUniversity</title>

                <link href="../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

        <link rel="stylesheet" href="../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


                    <script src="../bundles/fosjsrouting/js/router.js"></script>

        <script src="../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../js/routing?callback=fos.Router.setData"></script>
            
    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="PHP and Symfony Tutorial Screencasts - with free videos, scripts, and code downloads!">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Bundles, No Bundles and AppBundle in 10 Steps">
<meta property="og:description" content="The new AppBundle in Symfony is controversial, but I&#039;m not sure
it should be. In this post, I&#039;ll show you why it exists, why
bundles are just directories, and how close we are to having
*no* bundles at all">
<meta property="og:url" content="http://knpuniversity.com/blog/AppBundle">
    <meta property="og:image" content="http://knpuniversity.com/uploads/blog/AppBundle.png">

<meta name="twitter:card" content="summary">


            </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin ">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="AppBundle#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../tracks.1">Tracks</a></li>
          <li><a href="../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../pricing.1">Pricing</a></li>
        <li><a href="../training">Training</a></li>
                <li class="visible-xs"><a href="../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../logout">Sign Out</a></li>

            <li><a href="../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    






<div class="container">
    <div class="row">
        <div class="col-xs-12">
            <div class="blog-article">

    <a href="https://github.com/knpuniversity/blog/edit/master/AppBundle.md" class="btn btn-sm pull-right btn-blog js-analytics-blog-edit" target="_blank">Edit this post</a>
    <h1>Bundles, No Bundles and AppBundle in 10 Steps</h1>
    <div class="row">
    <div class="col-xs-12">
        <div class="blog-article-info">
            <p class="blog-article-info-author">
                By
                                
                <a href="https://github.com/weaverryan">weaverryan</a>
                                    and 1 other
                                in
                <a href="../blog?category=symfony">Symfony</a> on Dec 10th 2014
                <a href="AppBundle#comments" class="blog-article-info-comment"><i class="fa fa-comment"></i> comments</a>
            </p>
        </div>
    </div>
</div>
<div class="row">
        <div class="col-xs-12">
        <div class="text-center">
            <a href="AppBundle"><img class="blog-article-img" src="../imagine/blog_image/uploads/blog/AppBundle.png" alt="Bundles, No Bundles and AppBundle in 10 Steps"></a>
        </div>
    </div>
</div>

    <div class="blog-article-container">

        <div class="markdown-content">
            <h1 id="bundles-no-bundles-and-appbundle-in-10-steps">Bundles, No Bundles and AppBundle in 10 Steps <a class="headerlink" href="AppBundle#bundles-no-bundles-and-appbundle-in-10-steps" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>Ah, the AppBundle: my <strong>favorite</strong> part of the Symfony best practices.</p>
<blockquote><p>RYAN, What are you an idiot!? That's a terrible idea!</p>
</blockquote>
<p>Ok, not everyone agrees - it's cool :). But here's what's interesting: if you
<em>don't</em> like the AppBundle, I bet I actually <em>agree</em> with your reasons.</p>
<blockquote><p>What!?</p>
</blockquote>
<p>Let's figure this out in 10 Steps.</p>
<h2 id="1-keep-calm-because-i-don-t-care">1) Keep Calm: Because I don't Care <a class="headerlink" href="AppBundle#1-keep-calm-because-i-don-t-care" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>I mean this with &lt;3. We're using Symfony! This means you can do whatever
you want. Nothing has changed in Symfony to prevent this, and nothing will.
That's an awesome start.</p>
<h2 id="2-sorry-your-bundles-aren-t-bundles-they-re-directories">2) Sorry, Your Bundles aren't Bundles: They're Directories <a class="headerlink" href="AppBundle#2-sorry-your-bundles-aren-t-bundles-they-re-directories" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p><img class="pull-right" style="width: 300px;" src="../uploads/blog/appbundle/coupled-bundles.png" alt="Coupled Bundles" /></p>
<p>A traditional Symfony project is made up of bundles that are coupled together.
Ok, maybe you have some standalone bundles, but somewhere, there's a group
that are really coupled. And that's great! We're building an app here, not
an open-source library. These coupled bundles <em>are</em> your app.</p>
<p>But in this case, they <strong>aren't</strong> really bundles: <strong>they're just directories</strong>.
There's no technical advantage to having 1 or 10: we're just trying to organize
things to our subjective liking.</p>
<p>A true bundle is a standalone, reusable entity. These are just directories.</p>
<p><br />
<br /></p>
<h2 id="3-appbundle-just-a-different-directory-structure">3) AppBundle: Just a Different Directory Structure <a class="headerlink" href="AppBundle#3-appbundle-just-a-different-directory-structure" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p><img class="pull-right" style="width: 150px;" src="../uploads/blog/appbundle/app-bundle.png" alt="App Bundle" /></p>
<p>Now, if we decide to move everything into one bundle, it's nothing more than
a different directory structure. You can even keep the same amount of organization
by putting sub-directories in <code>Controller</code> or anywhere else.</p>
<p>You might like this, or you might not. The point is: it's subjective, there's
no technical benefit of having multiple bundles.</p>
<p><br />
<br />
<br /></p>
<h2 id="4-appbundle-and-appkernel-are-best-friends">4) AppBundle and AppKernel are Best Friends! <a class="headerlink" href="AppBundle#4-appbundle-and-appkernel-are-best-friends" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Your application <em>is</em> AppKernel, and it lives in <code>app/</code>. It builds our
1 container, 1 compiled list of routes, 1 collection of translations, 1 group
of mapped entities and everything else. Even if you have these things spread
out across bundles, it's all loaded right here.</p>
<p>So why not move more things into <code>app/</code>? Remember, we're not planning on
re-using this stuff somewhere else.</p>
<h3 id="a-move-service-configuration-to-app">a) Move service configuration to app/ <a class="headerlink" href="AppBundle#a-move-service-configuration-to-app" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p><img class="pull-right" style="width: 300px;" src="../uploads/blog/appbundle/move-config.png" alt="Move Config" /></p>
<p>Since each kernel has only <em>one</em> container, it's logical to move service
config out of the bundle and into <code>app/</code>.</p>
<blockquote><p>But if I move my service configuration out of my bundle it's coupled
to my app</p>
</blockquote>
<p>That's right! But it probably already <em>was</em> coupled. And if you <em>do</em> need
to re-use something, great! Put it in a <em>true</em>, standalone bundle. Here,
I'm talking about moving pieces out of bundles that are <em>truly</em> a part of
your app.</p>
<p><br /></p>
<div class="admonition tip"><p class="admonition-title"><span class="fa fa-lightbulb-o"></span> Tip</p><p>Like with everything, if you have <em>a lot</em> of services, feel free to create
an <code>app/config/services</code> directory with multiple files.</p>
</div><h3 id="b-moving-templates-to-app">b) Moving templates to app/ <a class="headerlink" href="AppBundle#b-moving-templates-to-app" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p><img class="pull-right" style="width: 300px;" src="../uploads/blog/appbundle/move-templates.png" alt="Move Templates" /></p>
<p>Next, let's move the templates into <code>app/</code>. I know many people <em>hate</em> this,
because it puts the templates in a different directory than the controllers.
That's subjective, but fair - and <a href="AppBundle#app-bundle-templates-decoupled">I talk about that later</a>.</p>
<p>This is a subjective change, but it has one hidden improvement: you no longer
need to use the weird three-part colon syntax. As a Symfony expert, <em>you</em>
know this syntax. But I give a lot of trainings, and these Symfony-isms give
beginners a lot of trouble.</p>
<p>Instead, you just render the filename. The only rule you need to know is
that templates live in <code>app/Resources/views</code>. This reduces complexity,
and that's huge.</p>
<p><br />
<br /></p>
<h2 id="5-no-bundles">5) No Bundles!? <a class="headerlink" href="AppBundle#5-no-bundles" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p><img class="pull-right" style="width: 300px;" src="../uploads/blog/appbundle/no-bundle.png" alt="No Bundle" /></p>
<p>You can keep doing this until AppBundle holds <em>only</em> PHP classes.</p>
<p>But wait, why do we need a bundle at all then? You don't! A bundle is just
a directory! And we can rename directories! We could rename this to <code>Ryan</code>
and even delete the bundle file.</p>
<div class="admonition tip"><p class="admonition-title"><span class="fa fa-lightbulb-o"></span> Tip</p><p>You can start thinking of AppKernel as your one "bundle". It can do
anything a bundle can, including complex stuff like registering compiler
passes.</p>
</div><p>So why isn't <em>this</em> the Symfony best practice instead of AppBundle? A few
reasons:</p>
<ul>
<li><p>Without a bundle, you lose a few shortcuts, like the <code>_controller</code> shortcut
and the automatic bundle aliasing for entities (e.g. <code>AcmeDemoBundle:Post</code>).
All of these are optional, but it's more work without them.</p>
</li>
<li><p>It would be a <em>big</em> philosophical leap, and change needs to be done carefully.
Having only <em>one</em> bundle was a big enough change.</p>
</li>
</ul>
<p>But philosophically, I <em>do</em> hope you'll think of your <code>AppBundle</code> as just
a directory for PHP classes. And for Symfony 3.0, maybe we'll get there!</p>
<p><a name="app-bundle-templates-decoupled"></a></p>
<h2 id="6-i-hate-having-my-templates-in-app-controllers-in-src">6) I hate having my Templates in app/, Controllers in src/ <a class="headerlink" href="AppBundle#6-i-hate-having-my-templates-in-app-controllers-in-src" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p><img class="pull-right" style="width: 300px;" src="../uploads/blog/appbundle/all-in-app.png" alt="All in App" /></p>
<p>The biggest complaint I've heard about the AppBundle is this: I don't like
that my controllers would live in <code>src/</code>, but the templates they render
would live in <code>app/</code>.</p>
<p>That's subjective, but totally fair (it hasn't bothered me).</p>
<p>To solve this, we could move our <code>Ryan</code> directory (or <code>AppBundle</code>, before
my rename) into <code>app/</code>.</p>
<p>This works with no code changes except for a new autoload entry:</p>
<pre><code class="language-json">{
    "autoload": {
        "psr-4": { "Ryan\\": "app/src" }
    }
}</code></pre>
<p>I'm not recommending that everyone runs and does this, but logically, everything
is coupled to <code>app/</code>, so it makes perfect sense. I hope it at least gets
you thinking!</p>
<div class="admonition tip"><p class="admonition-title"><span class="fa fa-lightbulb-o"></span> Tip</p><p>Still want the templates closer to the controllers? No problem, keep
them in <code>AppBundle</code> :).</p>
</div><h2 id="7-but-i-want-to-create-a-decoupled-library">7) But I want to create a Decoupled Library! <a class="headerlink" href="AppBundle#7-but-i-want-to-create-a-decoupled-library" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p><img class="pull-right" style="width: 150px;" src="../uploads/blog/appbundle/decoupled-library.png" alt="Decoupled Library" /></p>
<p>Sweet! Just create a directory in <code>src/</code> and put your decoupled library
right there. It's ready to be re-used!</p>
<h2 id="8-but-i-want-to-re-use-a-bundle-between-projects-or-kernels">8) But I want to re-use a Bundle between projects or kernels! <a class="headerlink" href="AppBundle#8-but-i-want-to-re-use-a-bundle-between-projects-or-kernels" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p><img class="pull-right" style="width: 150px;" src="../uploads/blog/appbundle/decoupled-bundle.png" alt="Decoupled Bundle" /></p>
<p>Nice! Just create the bundle in <code>src/</code> (or <code>vendor/</code>, etc) and treat
it like <em>true</em>, decoupled bundle.</p>
<h2 id="9-i-don-t-know-i-em-still-em-want-multiple-bundles">9) I don't know, I <em>still</em> want multiple Bundles <a class="headerlink" href="AppBundle#9-i-don-t-know-i-em-still-em-want-multiple-bundles" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Still feel like you need more bundles? No worries - create as many as you
want. But don't be afraid to choose <em>one</em> bundle that you <em>really</em> couple
to your <code>app/</code> directory - it might just make your life simpler.</p>
<h2 id="10-what-if-i-have-multiple-kernels">10) What if I have multiple Kernels? <a class="headerlink" href="AppBundle#10-what-if-i-have-multiple-kernels" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Multiple kernels? Sounds like a neat project :). You should have one super-coupled
bundle per kernel. For example, <code>WebKernel</code> &amp; <code>WebBundle</code>, <code>ApiKernel</code>
and <code>ApiBundle</code>. If you need to share things between kernels, put this
into proper, de-coupled bundles that are booted by each kernel.</p>
<h2 id="do-we-agree-now">Do We Agree Now? <a class="headerlink" href="AppBundle#do-we-agree-now" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>One main argument against the AppBundle is that you should make your code
modular. I agree! But having 1 directory or 10 doesn't make a difference.
But these things do:</p>
<ul>
<li><p>creating service classes, with minimal dependencies (+ skinny controllers);</p>
</li>
<li><p>(if applicable) identifying parts of your code that you <em>truly</em> need to
re-use between projects/kernels and writing them as proper bundles or libraries;</p>
</li>
<li><p>potentially creating multiple, focused apps (e.g. backend API, frontend
app, separate app for handling jobs, etc).</p>
</li>
</ul>
<p>So even if you don't like the AppBundle, I hope you'll see that it has nothing
to do with writing more or less modular code. That's still up to you :).</p>
<p>&lt;3 Ryan</p>

        </div>

        <div class="blog-article-sharing-buttons cf">
            <h2>Enjoyed the post? Share it!</h2>

            
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/blog/AppBundle" addthis:title="Bundles, No Bundles and AppBundle in 10 Steps">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
        </div>
    </div>

    <!-- Blog buttons panel start -->
    <div class="blog-article-share-block">

        <!-- Next/Previous blog posts -->
        <div class="row">
            <div class="col-xs-12">
                                    <a href="expanding-code-blocks" class="blog-article-previous">
                        <span class="pull-left"><i class="fa fa-arrow-left"></i> Previous post</span>
                    </a>
                
                                    <a href="all-access-subscription" class="blog-article-next">
                        <span class="pull-right">Next post <i class="fa fa-arrow-right"></i></span>
                    </a>
                            </div>
        </div>

        <!-- Comments panel start -->
        <div class="sidebar">
            <aside id="comments">
                <h3>Leave a comment!</h3>
                    <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2571915986" id="dsq-comment-2571915986">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/dragansefo/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/19996/4062/avatar92.jpg?1458505320">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2571915986">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-03-16</span>
	                            <span class="dsq-commenter-name">Dragan Sefo</span>
	                        </div>

	                        <div id="dsq-comment-message-2571915986" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2571915986" class="dsq-comment-text">
	                                <p>Thank you so much for your reply. I ended up following the current best practices, your knpu oauth bundle, and your tutorial on composer packages. You guys are awesome at KnpU. Keep up the excellent work!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2568774600" id="dsq-comment-2568774600">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2568774600">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-03-14</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2568774600" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2568774600" class="dsq-comment-text">
	                                <p>Hi Dragan!</p><p>Ok, great questions! We don't (in the documentation) cover *how* to make decoupled, re-usable bundles very much, mostly because it affects a very small number of people. There is an article about the best practices, which isn't a "tutorial", but might help: <a href="http://symfony.com/doc/current/cookbook/bundles/best_practices.html" rel="nofollow noopener">http://symfony.com/doc/current...</a>. For your specific questions:</p><p>A) "treat it like a true, decoupled bundle" *basically* means that everything should live *inside* that bundle/directory. If you follow this completely, you'll naturally end up doing all the right things. Practically speaking, this means: put your templates in the bundle, put a routing file in your bundle and force your app to simply import it, add a DependencyInjection/**Extension class that automatically imports any service configuration (e.g. services.yml/xml) that your bundle has. Generally speaking, I add decoupled bundles in src/ first for simplicity, then move them to their own separate repository later. But you can do that in whatever order.</p><p>B) You *can* use the bundle generate if you want (it asks you if this is a reusable bundle, and makes different decisions). If you're not too comfortable with what a bundle needs/doesn't need, do this. But generally, your bundle doesn't *need* anything, besides the bundle class and - for a re-usable bundle - the DependencyInjection/**Extension setup, which I believe the generator will give you :)</p><p>C) Yes to using the vendor namespace! We use KnpU for our bundles (shorter than KnpUniversity) - using your GitHub name or some other handle (if this isn't for a specific company) is very common :).</p><p>D) And yes, following existing examples is the best way - and pretty much any open source bundle is a good example. Our KnpUOAuth2ClientBundle is a *small* example, which might be helpful: <a href="https://github.com/knpuniversity/oauth2-client-bundle" rel="nofollow noopener">https://github.com/knpuniversi...</a>. It shows off the most important "special" thing about re-usable bundles: the DependencyInjection/**Extension setup that loads a services.xml file: <a href="https://github.com/knpuniversity/oauth2-client-bundle/blob/master/DependencyInjection/KnpUOAuth2ClientExtension.php#L46" rel="nofollow noopener">https://github.com/knpuniversi...</a>. It also has a "functional" test - in case you want to test your standalone bundle: <a href="https://github.com/knpuniversity/oauth2-client-bundle/blob/master/Tests/FunctionalTest.php" rel="nofollow noopener">https://github.com/knpuniversi...</a></p><p>I hope that helps - good luck!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2562802241" id="dsq-comment-2562802241">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/dragansefo/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/19996/4062/avatar92.jpg?1458505320">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2562802241">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-03-10</span>
	                            <span class="dsq-commenter-name">Dragan Sefo</span>
	                        </div>

	                        <div id="dsq-comment-message-2562802241" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2562802241" class="dsq-comment-text">
	                                <p>Hi Ryan. Great post. I'm wondering about the difference between point 7, and 8. I've always used one bundle for my applications, although I've worked on numerous apps where bundles were simply directories. Now I actually have a need for decoupled bundles and I like the idea of creating a bundle in the src/. I'm confused about "treat it like true, decoupled bundle". In addition, should I use the Symfony generator to create bundles or define the structure manually in accordance with the decoupled bundles best practices? What about the VendorBundleNameBundle.php?does it need anything special? Lastly, are there any tutorials or examples that you can recommend? Thanks.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2074986349" id="dsq-comment-2074986349">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2074986349">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-06-12</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2074986349" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2074986349" class="dsq-comment-text">
	                                <p>That's a fine way to do it indeed - especially once you know what you're doing (but if beginners follow high-quality bundles like Sylius stuff, they may over-engineer things). You can also use sub-directories inside Entity in the one bundle if you like that better. Your call :).</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2074157499" id="dsq-comment-2074157499">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_XvTOyGsPIs/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/12512/3183/avatar92.jpg?1455500375">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2074157499">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-06-11</span>
	                            <span class="dsq-commenter-name">Daniel</span>
	                        </div>

	                        <div id="dsq-comment-message-2074157499" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2074157499" class="dsq-comment-text">
	                                <p>Well, if your app has a lot of entity it would be a nightmare to have only one bundle, I am following what the guys at Sylius do with their Resource and Core Bundles.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2002832154" id="dsq-comment-2002832154">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bicpi/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/2101/8341/avatar92.jpg?1456084904">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2002832154">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-04</span>
	                            <span class="dsq-commenter-name">Philipp Rieber</span>
	                        </div>

	                        <div id="dsq-comment-message-2002832154" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2002832154" class="dsq-comment-text">
	                                <p>Option (3) sounds interesting. Some questions remain about how to deploy separately to different environments (depending on traffic and 3rd party software) but this should be solvable. And if possible, I'll also consider option (4) next time.</p><p>Thanks Ryan for promoting this discussion!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2002598256" id="dsq-comment-2002598256">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2002598256">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-04</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2002598256" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2002598256" class="dsq-comment-text">
	                                <p>Indeed - not so simple :). For others, here's the relevant conversation on Twitter: <a href="https://twitter.com/weaverryan/status/595241361265135616" rel="nofollow noopener">https://twitter.com/weaverryan...</a> - with Jon's tweet being particularly helpful (and summarizing what many people said): <a href="https://twitter.com/jwage/status/595241749318074368" rel="nofollow noopener">https://twitter.com/jwage/stat...</a>.</p><p>In summary, option (3) seems to be what people favor, though some people recommend going all the way to (4) if you can manage it.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2002479299" id="dsq-comment-2002479299">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bicpi/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/2101/8341/avatar92.jpg?1456084904">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2002479299">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-04</span>
	                            <span class="dsq-commenter-name">Philipp Rieber</span>
	                        </div>

	                        <div id="dsq-comment-message-2002479299" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2002479299" class="dsq-comment-text">
	                                <p>Hi Ryan, thanks for your suggestions and hey, it does not seem to be that easy ;-)<br>From the dev perspective, I would love to have a single project, but a) I need to do independant releases of all applications to different enviroments b) I only want to deploy what's actually needed, so the deployed CLI code should only be for the CLI.<br>I see there is some discussion going on on Twitter, thanks!<br>But I've also seen a project having the model stuff in a separate repo manged via Composer and yes, that's a big mess. Changes need to be done in 2 repos at the same time, other devs need to be informed, versioning becomes a pain etc.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2002439569" id="dsq-comment-2002439569">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2002439569">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-04</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2002439569" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2002439569" class="dsq-comment-text">
	                                <p>Hi Philipp!</p><p>I don't know if there's a best practice, but it's a *great* question and use-case. Heck, I would like to hear what other people think. I would say:</p><p>A) Separating between multiple repositories and sharing via Composer is probably not realistic for most people - it's just too difficult to manage. I do know one HUGE company that actually releases bundles/libraries internally like this, but they have an entire team that just works on those "internal open source" libraries.</p><p>B) For *how* to architect this, I see 3 options (and maybe you see some more):</p><p>1) One big project (and one kernel) - that has CLI stuff, backend stuff and frontend stuff. It's the most monolithic, but probably the easiest.</p><p>2) One big project, but multiple kernels. It's easy to manage like (1), but has some slightly less overhead because of the multiple kernels.</p><p>3) One big project (like 2), but separated even more into totally different directories. For example - backend/, which holds configuration, source code, web directory (e.g. backend/web) for everything in the "backend" app - then console/, which holds everything for your console app. For shared things, you could put them into a shared src/ directory. So, the root structure might be backend/, console/, frontend/ and src/. This is kind of a mixture of (2) and totally different projects.</p><p>4) Totally separate projects (microservices like you said). This is probably the best-practice, but the hardest to manage. I use this a bit with KnpU, but I'll admit I have problems sharing code between them (lack of time to properly isolate things into a Composer package).</p><p>I'd love to know your (or others') ideas on this :).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2002289112" id="dsq-comment-2002289112">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bicpi/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/2101/8341/avatar92.jpg?1456084904">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2002289112">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-04</span>
	                            <span class="dsq-commenter-name">Philipp Rieber</span>
	                        </div>

	                        <div id="dsq-comment-message-2002289112" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2002289112" class="dsq-comment-text">
	                                <p>Hi Ryan,<br>great post, thanks!</p><p>Regarding code structure I often face the issue of how to share code between different applications of the same project. For example, imagine a project with a backend web application, a frontend web application, a command line application etc. All of them should be separate applications/repos so they can be deployed independently and e.g. the CLI does not have the overhead of the web application just to perform a CLI command. So it should be some kind of microservices architecture. But of course all of the applications need depend on the same model. If the frontend can generate some kind of sales lead with limited user data, the backend admin can verify, update and enrich this lead. Finally the CLI can also act on the leads somehow in the workflow. In Doctrine this would be represented by a "Lead" entity and it should be shared between all applications. What is the recommended way to do this? Creating a "CommonBundle" or "CommonLib" and share it via Composer? But then development becomes hard when synced changes to model and app need to be done or when there are a lot of developers on the same project. Is there any best practice for this scenario?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1843435709" id="dsq-comment-1843435709">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/depriyankarao/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/14366/4398/avatar92.jpg?1423569464">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1843435709">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-02-09</span>
	                            <span class="dsq-commenter-name">DePriyanka Rao</span>
	                        </div>

	                        <div id="dsq-comment-message-1843435709" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1843435709" class="dsq-comment-text">
	                                <p>Sweet post! I'm currently working for this Software company. The use of Bundles is now so common that we literally have people who can't work with raw codes. I recently wrote this article after they worked on a project in which they used Symfony2 FOSUserBundle.</p><p>Check it out: <a href="http://webmuch.com/override-fosuserbundle/" rel="nofollow noopener">http://webmuch.com/override-fo...</a></p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1822821286" id="dsq-comment-1822821286">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1822821286">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-29</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1822821286" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1822821286" class="dsq-comment-text">
	                                <p>Hi Stefan!</p><p>Of course the answer is, it doesn't matter! Ok, but more usefully, I have created a structure like "assets/sass" before (at the root) and logically, "app/assets/sass" makes even more sense to me (though it's a little bit deeper to make your frontend developer dig, if you have one). For me, the "app/" directory is my "application", not src - so I'm putting more and more stuff there, and less and less in src/ (except PHP classes of course).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1819298709" id="dsq-comment-1819298709">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="AppBundle">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1819298709">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-27</span>
	                            <span class="dsq-commenter-name">Stefan</span>
	                        </div>

	                        <div id="dsq-comment-message-1819298709" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1819298709" class="dsq-comment-text">
	                                <p>Hi Ryan, thanks for this post.<br>I have a question for the right place of assets. In the Best Practices it says they should be in the web folder but not the sources like sass files. Where should I put files like these? Under app/Resources/public or in the src folder.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1748954039" id="dsq-comment-1748954039">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1748954039">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-18</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1748954039" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1748954039" class="dsq-comment-text">
	                                <p>Hey Adam!</p><p>I agree with some of your points here for sure. And yet, I still think that if we put everything into bundles, we end up with a more-easily-organized, but more complex project. I want things to be organized *and* have the "wins" of the AppBundle idea. I think there are a number of problems - like how to organize a single bundle / no bundle in a way that's just as nice as multiple bundles - to solve cleanly and publicize. Basically, I want us to "have our cake and eat it too". And afterall, the way we use bundles means that they really are basically just directories. We need to find the final directory structure that avoids the situation you're talking about. I think we need to be asking those questions right now (meandmymonkey has some good points on this) and getting a nice, final solution for 3.0. Right now, I will agree that we don't have a perfect solution (so the preference is subjective). I want to find the structure that's a win for everyone.</p><p>Thanks!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1746657820" id="dsq-comment-1746657820">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/adamprager/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1746657820">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-17</span>
	                            <span class="dsq-commenter-name">Adam Prager</span>
	                        </div>

	                        <div id="dsq-comment-message-1746657820" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1746657820" class="dsq-comment-text">
	                                <p>Thanks for this post, at least now I get the motivation behind the one bundle approach, however I still disagree.</p><p>meandmymonkey kind of made my point for me, so I would only like to give you an example. About a year ago I inherited a project, which used the one bundle approach. It was a huge mess, no CS, no organization standards, etc. ThePreviousDevelopersEndedUpWithEntityNamesLikes this...</p><p>The OneBundle approach is okay, if you know what you are doing, and you are crystal clear on the reasons why are you doing it, but it should not be in a best practice guide, it's too controversial among experienced symfony devs, and a way too dangerous road to walk for new symfony developers.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1745904107" id="dsq-comment-1745904107">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/arthundiak/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1745904107">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-16</span>
	                            <span class="dsq-commenter-name">Art Hundiak</span>
	                        </div>

	                        <div id="dsq-comment-message-1745904107" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1745904107" class="dsq-comment-text">
	                                <p>I tend not to use invoke mostly because I still have 5.3 servers and because I like to use meaningful names even if I only have one action method in a class.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1744231304" id="dsq-comment-1744231304">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/zenstruck/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/473/181/avatar92.jpg?1472135120">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1744231304">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-16</span>
	                            <span class="dsq-commenter-name">Kevin Bond</span>
	                        </div>

	                        <div id="dsq-comment-message-1744231304" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1744231304" class="dsq-comment-text">
	                                <p>I didn't think it sounded bad :)</p><p>Are you using __invoke()?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1744121812" id="dsq-comment-1744121812">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/arthundiak/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1744121812">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-15</span>
	                            <span class="dsq-commenter-name">Art Hundiak</span>
	                        </div>

	                        <div id="dsq-comment-message-1744121812" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1744121812" class="dsq-comment-text">
	                                <p>Yep.  Not as bad as it may sound since many different routes end up using the exact same controller action.  All done with services.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1743371609" id="dsq-comment-1743371609">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/zenstruck/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/473/181/avatar92.jpg?1472135120">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1743371609">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-15</span>
	                            <span class="dsq-commenter-name">Kevin Bond</span>
	                        </div>

	                        <div id="dsq-comment-message-1743371609" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1743371609" class="dsq-comment-text">
	                                <p>"action controller code" - I'm curious how you have this. Is each action in a class by itself?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1743291941" id="dsq-comment-1743291941">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/arthundiak/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1743291941">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-15</span>
	                            <span class="dsq-commenter-name">Art Hundiak</span>
	                        </div>

	                        <div id="dsq-comment-message-1743291941" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1743291941" class="dsq-comment-text">
	                                <p>I went one step further.  I wanted my controller code and templates to be in the same directory so I would not have to switch back and forth.  So I have a master Action directory with sub-directories for each individual action.  The sub-directories contain the action controller code, the templates as well as any other helper classes that belong to an individual action such as form types.  Works for me.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1742403913" id="dsq-comment-1742403913">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/aequasi/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/5138/4182/avatar92.jpg?1433192238">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1742403913">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-15</span>
	                            <span class="dsq-commenter-name">aequasi</span>
	                        </div>

	                        <div id="dsq-comment-message-1742403913" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1742403913" class="dsq-comment-text">
	                                <p>Ryan on Rails!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1741885787" id="dsq-comment-1741885787">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1741885787">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-14</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1741885787" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1741885787" class="dsq-comment-text">
	                                <p>Namespacing to DependencyInjection still makes sense to me - I don't think that really changes :).</p><p>About addClassesToCompile, actually no! So that's a good catch we'll need to think about in the future. Philosophically, the method that's called to create the final dumped cache file is setClassCache on your kernel - so it really is related to the kernel. But, there's no decent hook right now to add anything directly - there's a compiler pass that collects all of them from the extensions and writes this.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1741795884" id="dsq-comment-1741795884">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/kjarli/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/8973/7995/avatar92.jpg?1482229412">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1741795884">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-14</span>
	                            <span class="dsq-commenter-name">Iltar van der Berg</span>
	                        </div>

	                        <div id="dsq-comment-message-1741795884" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1741795884" class="dsq-comment-text">
	                                <p>That makes sense, your Kernel is similar to a Bundle in many ways. Would the Bundle namespacing "DependencyInjection" still be recommended? I can imagine that your kernel could register a lot of small passes to optimize the application.</p><p>Another question; Is it still possible to use "addClassesToCompile" from the special extension? <a href="https://github.com/symfony/symfony-docs/issues/4492" rel="nofollow noopener">https://github.com/symfony/sym...</a></p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1741788612" id="dsq-comment-1741788612">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1741788612">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-14</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1741788612" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1741788612" class="dsq-comment-text">
	                                <p>Hey Iltar!</p><p>I'm so glad you asked about this :). The AppKernel has a build() method, which should work identically to the build method in your *Bundle class. So, you can register it right there :). The more you think about it, the more you realize that "app/" can do just about everything (only exception I know of right now is overriding bundle resource with parent/child relationship, which should still be done in small bundles for that purpose).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1741677865" id="dsq-comment-1741677865">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/kjarli/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/8973/7995/avatar92.jpg?1482229412">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1741677865">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-14</span>
	                            <span class="dsq-commenter-name">Iltar van der Berg</span>
	                        </div>

	                        <div id="dsq-comment-message-1741677865" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1741677865" class="dsq-comment-text">
	                                <p>The only thing I'm really missing is the compiler passes. You could for example make a pass that collects some tags for some specific reason. In your example however, you have removed the DependencyInjection folder. Where would you put those passes now?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1736992054" id="dsq-comment-1736992054">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/iambrosi/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/2857/9225/avatar92.jpg?1418315638">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1736992054">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-11</span>
	                            <span class="dsq-commenter-name">Ismael Ambrosi</span>
	                        </div>

	                        <div id="dsq-comment-message-1736992054" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1736992054" class="dsq-comment-text">
	                                <p>Awesome post Ryan! as always. It is a great reminder to all of us that Symfony doesn't force you use certain structure at all and how you can do awesome stuff with it.</p><p>I can understand people who disagrees with some of these best practices. Some can be right, but it IMHO those disagreements are mostly related to how we are used to doing things in Symfony, especially those who've been using it for a long time.</p><p>Sometimes I think how simple would have been to do stuff I did months/years ago just by following some of these practices. <br>You, <a data-dsq-mention="javiereguiluz:disqus" href="https://disqus.com/by/javiereguiluz/" rel="nofollow noopener">Javier Eguiluz</a> and the rest of the team have done an awesome work with making things simpler, and not only for newcomers.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1736897186" id="dsq-comment-1736897186">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/zenstruck/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/473/181/avatar92.jpg?1472135120">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1736897186">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-11</span>
	                            <span class="dsq-commenter-name">Kevin Bond</span>
	                        </div>

	                        <div id="dsq-comment-message-1736897186" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1736897186" class="dsq-comment-text">
	                                <p>I would be in favor of moving the contents of `app/Resources` to just `app/`. For bundle overrides, I even think something like `app/bundles/TwigBundle/views/...` would be better. I can never remember if it is `app/Resources/TwigBundle/views` or `app/Resources/views/TwigBundle` or `app/Resources/TwigBundle/Resources/views`.</p><p>I feel the app folder is like the "metadata" for my app and I don't feel views fall into that category.</p><p>I thought multi-kernel projects were rare but after talking to some people in NY it is not as rare I thought... But, I wouldn't say it is common and it requires some advanced knowledge. What I don't know is if views are shared between kernels. If even one view is shared, it makes sense to move the views to the project root.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1736867998" id="dsq-comment-1736867998">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1736867998">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-11</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1736867998" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1736867998" class="dsq-comment-text">
	                                <p>@Andreas This is a *wonderful* list - I hadn't put this many ideas into my head yet this clearly. Now you've got me thinking! :D</p><p>Thank you!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1736866010" id="dsq-comment-1736866010">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1736866010">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-11</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1736866010" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1736866010" class="dsq-comment-text">
	                                <p>Hey Kevin!</p><p>You know, the location of the views folder is one of those silly, subjective things, but I also think it's a bit buried! One thing (in 3.0) that we could do it - at least - remove the app/Resources directory to simply app/, so we have app/views, app/translations, etc. Of course, you can already do this, but you get what I mean - recommending this approach is bigger. Moving it all the way to the top level is in many ways even more interesting. But I'm worried that we'll run into resistance due to multi-kernel projects. Then again, since those users are more advanced, you *could* start with a directory structure with everything in "app/" at the root, and *then* tell multiple-kernel people (it would be an easy doc) to create sub-directories for kernels and move those few things into it (views, config, the kernel class, etc).</p><p>Thoughts on that?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1736811832" id="dsq-comment-1736811832">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/zenstruck/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/473/181/avatar92.jpg?1472135120">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1736811832">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-11</span>
	                            <span class="dsq-commenter-name">Kevin Bond</span>
	                        </div>

	                        <div id="dsq-comment-message-1736811832" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1736811832" class="dsq-comment-text">
	                                <p>Excellent post Ryan! As you know, I have been toying with going completely "bundle-less" lately. Admittedly, my motivation behind that is mostly "to see if I could do it". I agree that one "AppBundle" is the best solution (especially for new-comers) and am glad it is an official best practice.</p><p>One thing I have been doing lately is having my views in a "views" folder in the root of my project (instead of "app/Resources/views"). I feel views are first class citizens in my app. I find this also makes doing searches easier: to find something in code, I search "src/", in config/service definitions/translations/"meta", "app/", and in templates, "views/".</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1736696887" id="dsq-comment-1736696887">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/inputrequired42/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11660/805/avatar92.jpg?1418312552">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1736696887">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-11</span>
	                            <span class="dsq-commenter-name">meandmymonkey</span>
	                        </div>

	                        <div id="dsq-comment-message-1736696887" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1736696887" class="dsq-comment-text">
	                                <p>I don't care much about directory structure, as long as things belonging to a single context are not mixed with other contexts. <code>/app/src</code> and <code>/app/resources</code> would be fine, or <code>/src</code> and <code>/resources</code>, whatever...</p><p>For me it's mostly about various shortcuts and conventions, some examples:</p><p>- Make the ControllerResolver/ControllerNameParser capable of handling a format like "MyController:index" for "application level controllers"</p><p>- Streamline template reference syntax to work cleanly with and without bundles (using Puli?)</p><p>- Fixing Doctrine shortcuts, possibly using a reserved prefix, or better: no prefix if they don't belong to a bundle (from the top of my head, I don't know if this is easily possible)</p><p>- Fix the TemplateGuesser to be able to work with the @Template annotation outside of bundles (I know you discourage the annotation, but still ;))</p><p>- Create an equivalent to a DI Extension class for the application as a point to manipulate services. While you could do that in the kernel, this would IMO be more clean and simple. Should also be entirely optional, since not required for all use cases.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1736637707" id="dsq-comment-1736637707">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1736637707">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-11</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1736637707" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1736637707" class="dsq-comment-text">
	                                <p>Hey Andreas!</p><p>You also make a really solid point, and one that I also agree with. Haha, funny how that can happen :). In fact, I *do* think that your point is the biggest potential risk of the new structure. But - as I think we both point out - the benefits/goal of this conversation is aimed at lowering the learning curve (and I think those "minor" benefits are not so minor for them), and so far, I've seen - in my totally subjective experience - the advantages to the AppBundle out-weigh the disadvantages. If that's true, it may be because by the time you are creating or digging into 3rd party bundles, you've comfortable enough to pick up on the small changes easily. Regardless, I'll have my "ear to the pavement" on this (and I hope everyone else will), and we can shape things going forward.</p><p>And yes about 3.0! That's our chance to make this be as natural as we really want it to be. But we should nail that down. Do you have some specific things that would make "app" feel more native in 3.0? Is it that the controllers and resources should be "closer"? Is it the missing bundle shortcuts (e.g. _controller, entity auto-aliasing, etc) if you only had an app/? Let me know - I've been thinking about this lately, and you have to answer me before you nice holiday :).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1736529424" id="dsq-comment-1736529424">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/inputrequired42/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11660/805/avatar92.jpg?1418312552">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1736529424">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-11</span>
	                            <span class="dsq-commenter-name">meandmymonkey</span>
	                        </div>

	                        <div id="dsq-comment-message-1736529424" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1736529424" class="dsq-comment-text">
	                                <p>As you know, I beg to differ :) While you are perfectly right in every single one of your arguments concerning why you don't really need (a) traditional bundle(s) for a stand alone application, IMHO you are neglecting to point out any real <strong>benefits</strong> of getting rid of an application bundle.</p><p>Yes, an application is probably not reusable and does not need to be a bundle. But the only benefits mentioned for your approach are very, very minor (like shorter template names). For those small benefits, you are sacrificing one of the major strengths of Symfony: everything is structured the same, be it your code, 3rd party bundles, or the framework itself. And even those little syntactic advantages have drawbacks, see Doctrine shortcuts etc.</p><p>With the new approach, now we need to explain why the application code/resources "work" differently from bundles. We need to explain another directory structure. The smooth and simple to understand continuity between your own code, the framework, and supporting bundles is disrupted. This continuity is a major benefit for new developers to understand the framework itself its bundle infrastructure.</p><p>If Symfony 3.0 supports a monolithic app structure natively with all the bells and whistles, I'm all for it. But for Symfony 2.x, all of this feels quite forced and does not integrate very well. IMHO it actually creates an overhead and confusion.</p><p><strong>tl;dr</strong></p><p>I get your points, they are all valid on their own, but the only benefits I can see for developers are cosmetic, all the while sacrificing clarity and cleanliness.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1736514594" id="dsq-comment-1736514594">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/javiereguiluz/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/6022/5410/avatar92.jpg?1481470290">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1736514594">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-11</span>
	                            <span class="dsq-commenter-name">Javier Eguiluz</span>
	                        </div>

	                        <div id="dsq-comment-message-1736514594" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1736514594" class="dsq-comment-text">
	                                <p>Ryan, thanks for this great post! It goes straight to the point and provides solutions for every supposed problem created by AppBundle.</p><p>The conclusion is great: you can do this ... or the opposite ... or any other thing ... because this is Symfony and here the framework adapts to your needs and no the other way around!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'blog_AppBundle';var disqus_url = 'http://knpuniversity.com/blog/AppBundle';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

            </aside>
        </div>
    </div>
</div>

<!-- ESI TIME: 2016-12-22 16:09:20 -->

        </div>
    </div>
</div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../about">About</a></li>
                            <li><a class="knp-color-black" href="../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script>
        jQuery(document).ready(function() {
            /**
             * Special tracking for the blog edit button
             */
            $('.js-analytics-blog-edit').on('click', function() {
                Core.triggerAnalyticsEvent(
                    'Contribute',
                    'Edit',
                    'Blog'
                );
            });
        });
    </script>


    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>

</body>
</html>
