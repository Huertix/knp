<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Parameters > Journey to the Center of Symfony: The Dependency Injection Container | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 20634
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: The\x20Container\x20Dumper <i class="fa fa-play"></i>',
            'url': '/screencast/symfony-journey-di/dumper#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="Let&#039;s not just *use* Symfony, let&#039;s conquer it! In this series, we&#039;re
going to rip open the code that builds and boots Symfony&#039;s Container
to see how it really works. Yes, this is geeky, and yes it&#039;s sweet!

Besides the occassional [dinosaur](http://upload.wikimedia.org/wikipedia/commons/a/a0/Amazing_Stories_June_1926.jpg),
expect to do the following on our adventure:

* Build a container from scratch
* Master the **ContainerBuilder** and **Definition** objects: the backbones to the container
* See how Definitions are built with YAML
* Dump the container to PHP code and use it
* See how Symfony *builds* the container (woh)
* Learn how DependencyInjection Extension classes work (i.e. the guys who process all that `config.yml` stuff)
* Discover existing compiler passes and create your own
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Parameters">
<meta property="og:description" content="Let&amp;#039;s not just *use* Symfony, let&amp;#039;s conquer it! In this series, we&amp;#039;re
going to rip open the code that builds and boots Symfony&amp;#039;s Container
to see how it really works. Yes, this is geeky, and yes it&amp;#039;s sweet!

Besides the occassional [dinosaur](http://upload">
<meta property="og:url" content="http://knpuniversity.com/screencast/symfony-journey-di/parameters">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/symfony-journey-di:2069840da60f17835afd095e72296700f2d9b670/sf2-journey-container.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="parameters#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        5.
                            Parameters
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">Journey to the Center of Symfony: The Dependency Injection Container</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="container-in-the-wild" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Creating a Container in the Wild
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:44</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="definition" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        Definitions: Teach the Container
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:14</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="definition-unlocked" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        Definition Unlocked
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:05</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="yaml" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Yaml for Service Definitions
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:01</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="parameters" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Parameters
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:29</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="dumper" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        The Container Dumper
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:04</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony-builds-the-container" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        How Symfony Builds the Container
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:42</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="dependency-injection-extensions" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Dependency Injection Extensions
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:08</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="compiler-passes" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Compiler Passes
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:34</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/symfony-journey-di" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Parameters</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>Journey to the Center of Symfony: The Dependency Injection Container Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $10.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="dumper#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="parameters#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="parameters#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (8)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script markdown-content">
                                                                                        <a href="https://github.com/knpuniversity/symfony-journey/edit/master/knpu/container/parameters.md" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    <p>Let's finish this up by converting both handlers to Yaml. Do the "stdout"
logger first - it's easier. Under the <code>services</code> key, add a new entry
for <code>logger.std_out_logger</code> and give it the class name:</p>
<p><div class="code-block-wrapper" data-code-block-guid="fe519b765a">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-15" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            15 lines <span class="meta-divider"></span> <span title="dino_container/config/services.yml">dino_container/config/services.yml</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="1"></td>
            <td class="blob-code"><span class="hljs-attr">services:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="2"></td>
            <td class="blob-code"><span class="hljs-attr">    logger:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="3-10" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 3 - 10
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="11"></td>
            <td class="blob-code">    logger.std_out_handler:</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="12"></td>
            <td class="blob-code"><span class="hljs-attr">        class:</span> Monolog\Handler\StreamHandler</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="13-15" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 13 - 15
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Peak back - this has one argument. So add the <code>arguments</code> key and give it
the <code>php://stdout</code>. Those quotes are optional, and if you want, you can put
the arguments up onto one line, inside square brackets:</p>
<p><div class="code-block-wrapper" data-code-block-guid="08c5ef7b32">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-15" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            15 lines <span class="meta-divider"></span> <span title="dino_container/config/services.yml">dino_container/config/services.yml</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="1"></td>
            <td class="blob-code"><span class="hljs-attr">services:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="2-10" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 2 - 10
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="11"></td>
            <td class="blob-code">    logger.std_out_handler:</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="12"></td>
            <td class="blob-code"><span class="hljs-attr">        class:</span> Monolog\Handler\StreamHandler</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="13"></td>
            <td class="blob-code"><span class="hljs-attr">        arguments:</span> [<span class="hljs-string">'php://stdout'</span>]</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="14-15" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 14 - 15
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>And as long as this still prints to the screen, life is good:</p>
<pre><code class="language-bash"><div class="line">php dino_container/roar.php</div></code></pre>
<p>Perfect!</p>
<h2 id="adding-a-parameter-in-php">Adding a Parameter in PHP <a class="headerlink" href="parameters#adding-a-parameter-in-php" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Now let's move the <em>other</em> handler. But this one is a little trickier: its
argument has a PHP expression - <code>__DIR__</code>. That's trouble.</p>
<p>But hey, ignore it for now! Copy the service name and put it into <code>services.yml</code>.
The order of services does <em>not</em> matter. Pass it the class and give it a
single argument. This will <em>not</em> work, but I'll copy the <code>__DIR__.'/dino.log</code>
in as the argument:</p>
<p>That's the basic idea, but since that <code>__DIR__</code> stuff is PHP code, this won't
work. But the solution is really nice.</p>
<p>The container holds <em>more</em> than services. It <em>also</em> has a simple key-value
configuration system called parameters. In PHP, to add a parameter, just say
<code>$container-&gt;setParameter()</code> and invent a name. How about <code>root_dir</code>? And
we'll set its value to <code>__DIR__</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="ec40b1cf71">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-23" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            23 lines <span class="meta-divider"></span> <span title="dino_container/roar.php">dino_container/roar.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-10" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 10
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="11"></td>
            <td class="blob-code">$container = <span class="hljs-keyword">new</span> ContainerBuilder();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="12"></td>
            <td class="blob-code">$container-&gt;setParameter(<span class="hljs-string">'root_dir'</span>, <span class="hljs-keyword">__DIR__</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="13-23" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 13 - 23
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>That doesn't <em>do</em> anything, but now we can use that <code>root_dir</code> parameter
<em>anywhere</em> else when we're building the container.</p>
<p>To use a parameter in Yaml, say <code>%root_dir%</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="46d6cb4a15">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-19" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            19 lines <span class="meta-divider"></span> <span title="dino_container/config/services.yml">dino_container/config/services.yml</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="1"></td>
            <td class="blob-code"><span class="hljs-attr">services:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="2-10" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 2 - 10
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="11"></td>
            <td class="blob-code">    logger.stream_handler:</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="12"></td>
            <td class="blob-code"><span class="hljs-attr">        class:</span> Monolog\Handler\StreamHandler</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="13"></td>
            <td class="blob-code"><span class="hljs-attr">        arguments:</span> [<span class="hljs-string">'%root_dir%/dino.log'</span>]</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="14-19" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 14 - 19
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>With everything in Yaml, we can clean up! We don't need any <code>Definition</code>
code at all in <code>roar.php</code> - just create the container, set the parameter
and load the yaml file:</p>
<p><div class="code-block-wrapper" data-code-block-guid="6d5b774a93">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-23" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            23 lines <span class="meta-divider"></span> <span title="dino_container/roar.php">dino_container/roar.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-10" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 10
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="11"></td>
            <td class="blob-code">$container = <span class="hljs-keyword">new</span> ContainerBuilder();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="12"></td>
            <td class="blob-code">$container-&gt;setParameter(<span class="hljs-string">'root_dir'</span>, <span class="hljs-keyword">__DIR__</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="13"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="14"></td>
            <td class="blob-code">$loader = <span class="hljs-keyword">new</span> YamlFileLoader($container, <span class="hljs-keyword">new</span> FileLocator(<span class="hljs-keyword">__DIR__</span>.<span class="hljs-string">'/config'</span>));</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="15"></td>
            <td class="blob-code">$loader-&gt;load(<span class="hljs-string">'services.yml'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="16"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="17"></td>
            <td class="blob-code">runApp($container);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="18-23" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 18 - 23
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Ok, moment of truth!</p>
<pre><code class="language-bash"><div class="line">php dino_container/roar.php</div><div class="line">tail dino_container/dino.log</div></code></pre>
<p>It still prints! And it's still adding to our log file. And now all that service
Definition code is sitting in <code>services.yml</code>.</p>
<h2 id="parameters-in-yaml">Parameters in Yaml <a class="headerlink" href="parameters#parameters-in-yaml" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Of course, you can also add parameters in Yaml. Add a <code>parameters</code> root key
somewhere - order doesn't matter - and invent one called <code>logger_start_message</code>.
Copy the string from the <code>debug</code> call and paste it. Now that we have a second
parameter, we can grab the key and use it inside two percents:</p>
<p><div class="code-block-wrapper" data-code-block-guid="37ca9e6682">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-22" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            22 lines <span class="meta-divider"></span> <span title="dino_container/config/services.yml">dino_container/config/services.yml</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="1"></td>
            <td class="blob-code"><span class="hljs-attr">parameters:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="2"></td>
            <td class="blob-code"><span class="hljs-attr">    logger_startup_message:</span> <span class="hljs-string">'Logger just got started!!!'</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="3-3" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... line 3
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="4"></td>
            <td class="blob-code"><span class="hljs-attr">services:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="5"></td>
            <td class="blob-code"><span class="hljs-attr">    logger:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="6-9" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 6 - 9
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="10"></td>
            <td class="blob-code"><span class="hljs-attr">        calls:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="11-11" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... line 11
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="12"></td>
            <td class="blob-code"><span class="hljs-bullet">            -</span> [<span class="hljs-string">'debug'</span>, [<span class="hljs-string">'%logger_startup_message%'</span>]]</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="13-22" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 13 - 22
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>And this still works just like before.</p>
<p>This last point is actually really important. Yaml files that build the container
only have <em>three</em> valid root keys: <code>services</code>, <code>parameters</code> and another called
<code>imports</code>, which just loads other files. And that makes sense. After all,
a container is nothing more than a collection of services and parameters.
This point will be really important later. Because in Symfony, files like
<code>config.yml</code> violate this rule with root keys like <code>framework</code> and <code>twig</code>.</p>
<p>With all this hard work behind us, we're about to see one of the coolest
features of the container, and the reason why it's so fast.</p>

    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2943451341" id="dsq-comment-2943451341">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2943451341">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-10-10</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2943451341" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2943451341" class="dsq-comment-text">
	                                <p>Sweet! Keep it up man :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2942539484" id="dsq-comment-2942539484">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/jverdeyen/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11098/9523/avatar92.jpg?1480927811">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2942539484">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-10-10</span>
	                            <span class="dsq-commenter-name">jverdeyen</span>
	                        </div>

	                        <div id="dsq-comment-message-2942539484" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2942539484" class="dsq-comment-text">
	                                <p>Yes, it's working! Thanks! I didn't know I could set a service on a cached and compiled container. Thanks for the core Kernel example! I'm learning the Symfony internals by building it with the components, from scratch. Thanks Ryan</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2936603721" id="dsq-comment-2936603721">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2936603721">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-10-06</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2936603721" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2936603721" class="dsq-comment-text">
	                                <p>Hi <a data-dsq-mention="jverdeyen:disqus" href="https://disqus.com/by/jverdeyen/" rel="nofollow noopener">jverdeyen</a>!</p><p>Wow! Congratulations - that's a pretty serious accomplishment :).</p><p>So, here's what I can say:</p><p>A) You should compile the container, and then actually require the cached container before anything else. The core Kernel class is a good guide: <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fsymfony%2Fsymfony%2Fblob%2Fmaster%2Fsrc%2FSymfony%2FComponent%2FHttpKernel%2FKernel.php%23L477%3AHXAUTAQHDptNhrbDtoFHHyIwNB0&amp;cuid=1175718" rel="nofollow noopener">https://github.com/symfony/sym...</a>. This means that you won't actually use the `$container` variable in your code as your container - that code will only run when there is *no* cached container. And then you will actually require the cached container.</p><p>B) Once you're using the cached container, you'll want to set the request_stack onto *that* container. I bet the problem is that you're setting the request_stack on your cached container, and then later on (in some code you don't have printed here), you're requiring the cached container. With that setup, the cached container indeed won't have the request_stack.</p><p>Let me know if that helps! I think you're one minor step away - it looks awesome!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2935797002" id="dsq-comment-2935797002">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/jverdeyen/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11098/9523/avatar92.jpg?1480927811">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2935797002">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-10-06</span>
	                            <span class="dsq-commenter-name">jverdeyen</span>
	                        </div>

	                        <div id="dsq-comment-message-2935797002" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2935797002" class="dsq-comment-text">
	                                <p>I successfully migrated a legacy application into lots of the Symfony (3.1) components (events/di/forms/twig/..). Compiling the container is working fine, although I can't get the cached container to work properly. I'm building the container from yaml files and inject the request. But when using the dumped class, the request_stack and request can't be found. How does a "normal" Symfony application injects the request? I'm only seeing the AppKernel pass the request into the HttpKernel.</p><p></p><pre><code><br>$request = Request::createFromGlobals();<br>$requestStack = new RequestStack();<br>$requestStack-&gt;push($request);<br><br>$container = new ContainerBuilder();<br>$loader = new YamlFileLoader($container, new FileLocator(__DIR__. 'app/config/'));<br>$loader-&gt;load('services.yml');<br>$loader-&gt;load('security.yml');<br>$loader-&gt;load('config_'. ENVIRONMENT . '.yml');<br>$container-&gt;set('request', $request);<br>$container-&gt;set('request_stack', $requestStack);<br>...<br>$container-&gt;compile();<br></code></pre><p></p><p>Thanks! I love these screencasts!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2235388767" id="dsq-comment-2235388767">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/shairyarbaig/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10592/9062/avatar92.jpg?1469787361">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2235388767">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-09-04</span>
	                            <span class="dsq-commenter-name">Shairyar Baig</span>
	                        </div>

	                        <div id="dsq-comment-message-2235388767" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2235388767" class="dsq-comment-text">
	                                <p>Thank you so much for a detailed answer, makes a lot of sense. Out of curiosity I was using the Extension class just to play around and get an understanding of how things work.</p><p>Once again many thanks for the wonderful explanation.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2234591784" id="dsq-comment-2234591784">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2234591784">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-09-03</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2234591784" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2234591784" class="dsq-comment-text">
	                                <p>Hey Shairyar!</p><p>Ok, nice job with this! Creating extensions can be challenging, but you also don't need an extension class unless you're building a re-usable bundle. Otherwise - it's overkill: if you want to set a "app.comments" parameter, you could add a "parameters" key at the top of config.yml and set it there. The extension class is just if you need to have things like this easily configured by some external developer (because you've shared your bundle).</p><p>To answer your questions, let me explain how all of this works :).</p><p>A) Suppose you want to set a parameter called "app.comments" to 10 (this is basically what you're doing with your code). There are several ways to do this, the easiest is:</p><p></p><pre><code><br># config.yml<br>parameters:<br>    app.comments: 10<br></code></pre><p></p><p>Yep, that's it :). So, why would you make it harder and make an Extension class? Well, because you are sharing your bundle and you want to make it very easy for other people to control this value. So, then you create an AppExtension, with this code:</p><p></p><pre><code><br>$container-&gt;setParameter('app.comments', 10);<br></code></pre><p></p><p>And you remove the "app.comments" part from config.yml. Now, you have EXACTLY the same thing as before, and it's actually *still* not quite controllable by your user. So, you finally go *all* the way to your solution, where you create a "comments" value that can be configured by the user. Your AppExtension and Configuration will look exactly like what you have. And in config.yml, you will have:</p><p></p><pre><code><br>app:<br>    comments: 10<br></code></pre><p></p><p>So, now I'll answer your questions :)</p><p>1) Yes, you can set a parameter directly with *only* an Extension class. That's the solution I show above with $container-&gt;setParameter('app.comments', 10); But, if you're just doing this, why not set the parameter in a simple configuration file (like config.yml)?</p><p>2) In your setup, yes, you must have an app key with a comments key below it in order for all of this to work. But, two important things. First, the fact that we have an "app" key and a "comments" key below it has absolutely nothing to do with the fact that an "app.comments" parameter is finally set. The "app" in config.yml is what tells Symfony that the configuration below it is passed to the "App"Extension class. The "comments" is then passed to that class, which is why you're referencing "comments" in your AppExtension. In other words, you could have "foobar: 10" in config.yml and still set a parameter called app.comments, as long as you updated your Configuration and AppExtension files in 1 spot each. Second, you could omit the config.yml stuff completely if you gave the "comments" configuration key a default value in the Configuration class. You could set this to default to 10.</p><p>3) About Twig, yes! First, passing a value from a controller to a template is always the simplest method. But, there are several ways to create "global variables" in Twig. One of them is simply in config.yml:</p><p></p><pre><code><br>twig:<br>    globals:<br>        comments: 10<br></code></pre><p></p><p>If you did this, you could use code like {% for i..comments %} in Twig and it would work. This does *not* set any "dependency injection parameters" - because we don't need that in this case.</p><p>Phew! How does this all sound?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2226069050" id="dsq-comment-2226069050">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/shairyarbaig/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10592/9062/avatar92.jpg?1469787361">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2226069050">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-08-30</span>
	                            <span class="dsq-commenter-name">Shairyar Baig</span>
	                        </div>

	                        <div id="dsq-comment-message-2226069050" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2226069050" class="dsq-comment-text">
	                                <p>Okay so I went through the topic of dependency injection extensions of this video and that made a lot of sense and I was able to achieve what I wanted.</p><p>This is what my AppExtension class looks like</p><p></p><pre><br><code><br><br>class AppExtension extends Extension<br>{<br><br>    public function load(array $configs, ContainerBuilder $container)<br>    {<br><br>        $loader = new Loader\xmlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));<br>        $loader-&gt;load('services.xml');<br><br>        $configuration = new Configuration();<br>        $config = $this-&gt;processConfiguration($configuration, $configs);<br><br>        $container-&gt;setParameter('app.comments', $config['comments']);<br><br>    }<br><br>    public function getAlias(){<br>        return 'app';<br><br>    }<br>}<br><br></code><br></pre><p></p><p>This is my configuration class and I understand now that this class is also important if one needs to set parameters, earlier I did not have this setup</p><p></p><pre><br><code><br><br>class Configuration implements ConfigurationInterface<br>{<br><br>    public function getConfigTreeBuilder()<br>    {<br>        $treeBuilder = new TreeBuilder();<br>        $rootNode = $treeBuilder-&gt;root('app');<br>        $rootNode-&gt;children()-&gt;scalarNode('comments')-&gt;end();<br>        return $treeBuilder;<br>    }<br>}<br><br></code><br><br></pre><p></p><p>Now I can send the value of comments from controller to twig.</p><p>I still do have some questions just so that my concept is clear.</p><p>1) Can we not set the value of parameter comments in extension or configuration class? Please note that comment is just a dummy name I am using as an example.</p><p>2) If the above is true then must we add the app.comment in config.yml? or it is important that we add it in config.yml as this is the only way for controller to access it and pass the value to twig?</p><p>3) Is there anyway to access comment value directly in twig rather than passing the value to twig via controller?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2225983725" id="dsq-comment-2225983725">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/shairyarbaig/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10592/9062/avatar92.jpg?1469787361">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2225983725">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-08-30</span>
	                            <span class="dsq-commenter-name">Shairyar Baig</span>
	                        </div>

	                        <div id="dsq-comment-message-2225983725" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2225983725" class="dsq-comment-text">
	                                <p>Hi,</p><p>I am just playing around the default symfony install which comes with `AppBundle` and I am trying to set parameters using the `AppExtension` class that is inside the `DependencyInjection` folder. Reading the docs online it says that the load() method should help me do that and following is how my load method looks like</p><p>I am trying set the parameter `comments`</p><p></p><pre><br><code><br><br>class AppExtension extends Extension<br>{<br>    public function load(array $configs, ContainerBuilder $container)<br>    {<br><br>        $loader = new Loader\xmlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));<br>        $loader-&gt;load('services.xml');<br><br>        $configuration = new Configuration();<br>        $config = $this-&gt;processConfiguration($configuration, $configs);<br>        $config['comments'] = "some value";<br>        $container-&gt;setParameter('app.comments', $config['comments']);<br><br>    }<br><br>    public function getAlias(){<br>        return 'app';<br><br>    }<br>}<br><br></code><br></pre><p></p><p>I am not getting any error when i run and I am not sure how can i access the parameter in my twig template that i defined above, is this the right way to set the parameter? if yes then how can i access it via twig</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_parameters';var disqus_url = 'https://knpuniversity.com/screencast/symfony-journey-di/parameters';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="dumper#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/symfony-journey-di/parameters" addthis:title="Journey to the Center of Symfony: The Dependency Injection Container">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"symfony-journey-di","courseIsOwned":false,"chapter":"Parameters","chapterNumber":5,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Journey to the Center of Symfony: The Dependency Injection Container';
        Core.courseId = 59
        Core.courseIsOwned = false;
        Core.courseSlug = 'symfony-journey-di';
                    Core.chapterTitle = 'Parameters';
            Core.chapterNumber = 5;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'parameters';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

</body>
</html>
