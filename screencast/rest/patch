<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>PATCH: The Other Edit > RESTful APIs in the Real World Course 1 | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 38451
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: Handling\x20Errors <i class="fa fa-play"></i>',
            'url': '/screencast/rest/errors#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="Making RESTful APIs is hard, really hard. There are a lot of concepts
to know - resources, representations, HTTP methods, status codes, etc.

And putting this all to life in a sane way in PHP is no small task. In
this course, we&#039;ll learn all the most fundamental concepts around REST
and learn about the &quot;rules&quot; and the advantages and disadvantages of each.
And we&#039;ll of course build a real API to show it all off. Topics include:

* HTTP basics
* Resources and Representations
* Resource state, client state
* GET, POST, PUT, PATCH, DELETE
* Idemptotency and safe methods
* Proper Status Codes, Location header and Content-Type
* Testing your API
* RFCs and where the &quot;rules&quot; come from
* Advanced error and validation handling

If you want to know about Hypermedia, HATEOAS, Documenting your API,
Content-Type negotiation, pagination and more, these are **not** covered
here, but will be covered in [Episode 2](/screencast/rest-ep2) and
[Episode 3](http://knpuniversity.com/screencast/rest-ep3).

This tutorial uses [Silex](http://silex.sensiolabs.org/) and we avoid talking
about it as much as possible and instead focus on the core concepts of REST. Once
you understand these, you can watch our [Symfony REST](http://knpuniversity.com/screencast/symfony-rest)
series to learn how to leverage Symfony for your API.
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="PATCH: The Other Edit">
<meta property="og:description" content="Making RESTful APIs is hard, really hard. There are a lot of concepts
to know - resources, representations, HTTP methods, status codes, etc">
<meta property="og:url" content="http://knpuniversity.com/screencast/rest/patch">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/rest:1417f7455dfdb0a953a6a18ae1d5c9c61f5f4637/rest.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="patch#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        20.
                            PATCH: The Other Edit
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">RESTful APIs in the Real World Course 1</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="intro" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        The REST API Tutorial
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:07</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="http" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        HTTP Basics
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:10</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="rest" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        REST: Resources and Representations
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:12</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="client-state" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Transitions and Client State
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:11</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="project-routing" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Project Routing
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:22</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="post" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        POST: Creation, Location Header and 201
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:53</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="get" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        GET’ing Resources, and Content-Type
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:36</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="location-header" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Updating the Location Header
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="get-collection" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        GET /programmers: A collection of Programmers
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:32</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="rfcs" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        Fixing the Content-Type on POST
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:37</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="testing-phpunit" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Testing your API with PHPUnit
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:34</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="testing" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                12.
                        Behat for Testing
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:35</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="testing-data" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                13.
                        Handling Data in Tests
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:57</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="put-editing" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                14.
                        PUT: Editing Resources
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:13</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="debugging-tests" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                15.
                        Debugging Tests
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:12</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="put-improvements" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                16.
                        PUT: Killing Duplicated Code
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:12</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="different-representations" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                17.
                        GET Representation != POST Representation
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:46</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="put-versus-post" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                18.
                        PUT Versus POST
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:07</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="delete" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                19.
                        Deleting Resources
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:29</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="patch" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                20.
                        PATCH: The Other Edit
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:53</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="errors" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                21.
                        Handling Errors
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:41</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="application-problem" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                22.
                        The application/problem+json Content-Type
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:26</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="error-consistency" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                23.
                        Enforcing Consistency with ApiProblem
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:13</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="error-invalid-json" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                24.
                        Error in Invalid JSON
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:28</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="error-api-problem-exception" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                25.
                        ApiProblemException and Exception Handling
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:38</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="error-404-json" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                26.
                        Handling 404 Errors
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:17</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="error-details" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                27.
                        Exposing more Error Details
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:56</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="whats-next" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                28.
                        What’s Next
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:02</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/rest" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">PATCH: The Other Edit</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>RESTful APIs in the Real World Course 1 Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $12.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="errors#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="patch#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="patch#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (2)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script script-content">
                                                                                        <a href="https://github.com/knpuniversity/rest/edit/master/knpu/episode1/patch.rst" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    
  <div class="section" id="patch-the-other-edit">
<h1>PATCH: The Other Edit<a class="headerlink" href="patch#patch-the-other-edit" title="Permalink to this headline">¶</a></h1>
<p>The rules of HTTP say that in normal situations, if you want to edit a resource,
you should make a PUT request to it and include the new representation you
want.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">What are the non-normal situations? That would include custom endpoints,
like an endpoint to &#8220;power up&#8221; a programmer. This will edit the programmer
resource, but will have a different URI and could be POST or PUT, depending
on all that idempotency stuff.</p>
</div>
<div class="section" id="put-is-replace">
<h2>PUT is Replace<a class="headerlink" href="patch#put-is-replace" title="Permalink to this headline">¶</a></h2>
<p>To get technical, PUT says &#8220;take this representation and entirely put it
at this URI&#8221;. It means that a REST API should require the client to send
<em>all</em> of the data for a resource when updating it. If the client <em>doesn&#8217;t</em>
send a field, a REST API is supposed to set that field to null.</p>
<p>Right now, our API follows this rule. If a client sends a PUT request to
<tt class="docutils literal"><span class="pre">/api/programmers/ObjectOrienter</span></tt> to update the <tt class="docutils literal"><span class="pre">avatarNumber</span></tt> field
but forgets to include the <tt class="docutils literal"><span class="pre">tagLine</span></tt>, the <tt class="docutils literal"><span class="pre">tagLine</span></tt> will be set to null.
Woops! There goes some perfectly good data. So PUT is really more of a
<em>replace</em> than an <em>update</em>.</p>
<p>This is how PUT is <em>supposed</em> to work. But not all API&#8217;s follow this rule,
because it&#8217;s a bit harsh and might cause data to be set to blank without
a client intending to do that.</p>
<p>We&#8217;re going to follow the rules and keep our PUT implementation as a replace.
But how could we allow the client to update something without sending every
field?</p>
</div>
<div class="section" id="introducing-patch-the-friendly-update-method">
<h2>Introducing PATCH: The (Friendly) Update Method<a class="headerlink" href="patch#introducing-patch-the-friendly-update-method" title="Permalink to this headline">¶</a></h2>
<p>With PATCH of course! The main HTTP methods like GET, POST, DELETE and PUT
were introduced in the famous RFC 2616 document. Maybe you&#8217;ve heard of it?
But because PUT has this limitation, PATCH was born in <a class="reference external" href="https://tools.ietf.org/html/rfc5789">RFC 5789</a>.</p>
<p>Typically, PATCH is used exactly like PUT, except if we don&#8217;t send a <tt class="docutils literal"><span class="pre">tagLine</span></tt>
field then it keeps its current value instead of obliterating it to null. PATCH,
it&#8217;s the friendly update.</p>
</div>
<div class="section" id="writing-the-test">
<h2>Writing the Test<a class="headerlink" href="patch#writing-the-test" title="Permalink to this headline">¶</a></h2>
<p>Let&#8217;s write a scenario for PATCH, one that looks like our PUT scenario, but
<em>only</em> sends the <tt class="docutils literal"><span class="pre">tagLine</span></tt> data in the representation. Of course, we&#8217;ll
want to check that the <tt class="docutils literal"><span class="pre">tagLine</span></tt> was updated, but also that the <tt class="docutils literal"><span class="pre">avatarNumber</span></tt>
is unchanged:</p>
<div class="highlight-gherkin"><div class="highlight"><pre><span class="c"># features/api/programmer.feature</span><span class="nf"></span>
<span class="c"># ...</span><span class="nf"></span>

<span class="k">Scenario:</span><span class="nf"> PATCH to update a programmer</span>
<span class="k">  Given </span><span class="nf">the following programmers exist:</span>
<span class="k">    |</span><span class="s"> nickname</span><span class="k">    |</span><span class="s"> avatarNumber</span><span class="k"> |</span><span class="s"> tagLine</span><span class="k"> |</span><span class="nf"></span>
<span class="k">    |</span><span class="s"> CowboyCoder</span><span class="k"> |</span><span class="s"> 5</span><span class="k">            |</span><span class="s"> foo</span><span class="k">     |</span><span class="nf"></span>
<span class="nf">  </span><span class="k">And </span><span class="nf">I have the payload:</span>
<span class="nf">    </span><span class="k">&quot;&quot;&quot;</span><span class="s"></span>
<span class="s">    {</span>
<span class="s">      &quot;tagLine&quot;: &quot;giddyup&quot;</span>
<span class="s">    }</span>
<span class="s">    </span><span class="k">&quot;&quot;&quot;</span><span class="nf"></span>
<span class="nf">  </span><span class="k">When </span><span class="nf">I request &quot;</span><span class="s">PATCH /api/programmers/CowboyCoder</span><span class="nf">&quot;</span>
<span class="nf">  </span><span class="k">Then </span><span class="nf">the response status code should be </span><span class="s">200</span><span class="nf"></span>
<span class="nf">  </span><span class="k">And </span><span class="nf">the &quot;</span><span class="s">avatarNumber</span><span class="nf">&quot; property should equal &quot;</span><span class="s">5</span><span class="nf">&quot;</span>
<span class="nf">  </span><span class="k">And </span><span class="nf">the &quot;</span><span class="s">tagLine</span><span class="nf">&quot; property should equal &quot;</span><span class="s">giddyup</span><span class="nf">&quot;</span>
</pre></div>
</div>
</div>
<div class="section" id="coding-the-endpoint">
<h2>Coding the Endpoint<a class="headerlink" href="patch#coding-the-endpoint" title="Permalink to this headline">¶</a></h2>
<p>Let&#8217;s head into our controller and add another routing line that matches
the same <tt class="docutils literal"><span class="pre">/api/programmers/{nickname}</span></tt> URI, but only on PATCH requests.
This looks a little bit different only because Silex doesn&#8217;t natively support
configuring PATCH requests. But the result is the same as the other routing
lines:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php</span>
<span class="c1">// ...</span>

<span class="k">protected</span> <span class="k">function</span> <span class="nf">addRoutes</span><span class="p">(</span><span class="nx">ControllerCollection</span> <span class="nv">$controllers</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="c1">// point PUT and PATCH at the same controller</span>
    <span class="nv">$controllers</span><span class="o">-&gt;</span><span class="na">put</span><span class="p">(</span><span class="s1">&#39;/api/programmers/{nickname}&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="nv">$this</span><span class="p">,</span> <span class="s1">&#39;updateAction&#39;</span><span class="p">));</span>

    <span class="c1">// PATCH isn&#39;t natively supported, hence the different syntax</span>
    <span class="nv">$controllers</span><span class="o">-&gt;</span><span class="na">match</span><span class="p">(</span><span class="s1">&#39;/api/programmers/{nickname}&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="nv">$this</span><span class="p">,</span> <span class="s1">&#39;updateAction&#39;</span><span class="p">))</span>
        <span class="o">-&gt;</span><span class="na">method</span><span class="p">(</span><span class="s1">&#39;PATCH&#39;</span><span class="p">);</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>I made this route to use the same <tt class="docutils literal"><span class="pre">updateAction</span></tt> function as the PUT route.
That&#8217;s not on accident: these two HTTP methods are so similar that I bet
we can save some code by re-using the controller function.</p>
<p>The only difference with PATCH is that if we don&#8217;t see a field in the JSON
that the client is sending, we should just skip updating it. Add an <tt class="docutils literal"><span class="pre">if</span></tt>
statement that checks to see if this is a <tt class="docutils literal"><span class="pre">PATCH</span></tt> method and also if the
field is missing from the JSON. If both are <tt class="docutils literal"><span class="pre">true</span></tt>, let&#8217;s do nothing:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php</span>
<span class="c1">// ...</span>

<span class="k">private</span> <span class="k">function</span> <span class="nf">handleRequest</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">,</span> <span class="nx">Programmer</span> <span class="nv">$programmer</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
    <span class="nv">$apiProperties</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;avatarNumber&#39;</span><span class="p">,</span> <span class="s1">&#39;tagLine&#39;</span><span class="p">);</span>
    <span class="c1">// ...</span>

    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$apiProperties</span> <span class="k">as</span> <span class="nv">$property</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// if a property is missing on PATCH, that&#39;s ok - just skip it</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="nv">$property</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">isMethod</span><span class="p">(</span><span class="s1">&#39;PATCH&#39;</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">continue</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="nv">$val</span> <span class="o">=</span> <span class="nb">isset</span><span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="nv">$property</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$data</span><span class="p">[</span><span class="nv">$property</span><span class="p">]</span> <span class="o">:</span> <span class="k">null</span><span class="p">;</span>
        <span class="nv">$programmer</span><span class="o">-&gt;</span><span class="nv">$property</span> <span class="o">=</span> <span class="nv">$val</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>And just like that, we <em>should</em> have a working PATCH endpoint. And if we
somehow broke our PUT endpoint, our tests will tell us!</p>
<p>But we&#8217;re in luck! When we run Behat, everything still comes back green.
We now have 2 methods a client can use to update a resource: PUT and PATCH.</p>
<div class="section" id="should-i-support-put-and-patch">
<h3>Should I Support PUT and PATCH?<a class="headerlink" href="patch#should-i-support-put-and-patch" title="Permalink to this headline">¶</a></h3>
<p>All of this wouldn&#8217;t be RESTful if it weren&#8217;t a bit controversial. Because
PUT&#8217;s correct behavior is harsh, many APIs support PUT, but make it
act like PATCH. Do what&#8217;s best for your API clients, be consistent, and then
make sure it&#8217;s perfectly clear how things work. Remember, the more you
bend the rules, the weirder your API will look when people are learning it.</p>
</div>
</div>
<div class="section" id="the-truth-behind-patch">
<h2>The Truth Behind PATCH<a class="headerlink" href="patch#the-truth-behind-patch" title="Permalink to this headline">¶</a></h2>
<p>And about PATCH, I&#8217;ve been lying to you. We&#8217;re <em>technically</em> using PATCH
incorrectly. womp womp... Let&#8217;s go back to <a class="reference external" href="https://tools.ietf.org/html/rfc5789">RFC 5789</a> where it describes
PATCH with a little more detail:</p>
<blockquote>
<div>In a PUT request, the enclosed entity is considered to be a modified
version of the resource stored on the origin server, and the client is
requesting that the stored version be replaced. With PATCH, however,
the enclosed entity contains a set of instructions describing how a resource
currently residing on the origin server should be modified to produce
a new version.</div></blockquote>
<p>Let me summarize this. With PUT, we send a representation of the resource.
But with PATCH, we send a set of <em>instructions</em> on what to edit, not a representation.
So instead of a JSON programmer, we might instead create some JSON structure
with details on what to update:</p>
<div class="highlight-json"><div class="highlight"><pre><span class="p">[</span>
    <span class="p">{</span> <span class="nt">&quot;op&quot;</span><span class="p">:</span> <span class="s2">&quot;replace&quot;</span><span class="p">,</span> <span class="nt">&quot;path&quot;</span><span class="p">:</span> <span class="s2">&quot;avatarNumber&quot;</span><span class="p">,</span> <span class="nt">&quot;value&quot;</span><span class="p">:</span> <span class="s2">&quot;5&quot;</span> <span class="p">},</span>
    <span class="p">{</span> <span class="nt">&quot;op&quot;</span><span class="p">:</span> <span class="s2">&quot;remove&quot;</span><span class="p">,</span> <span class="nt">&quot;path&quot;</span><span class="p">:</span> <span class="s2">&quot;tagLine&quot;</span> <span class="p">}</span>
<span class="p">]</span>
</pre></div>
</div>
<p>In fact, even this little structure here comes from another proposed standard,
<a class="reference external" href="https://tools.ietf.org/html/rfc6902">RFC 6902</a>. If you want to know more about this, read the blog post
<a class="reference external" href="http://williamdurand.fr/2014/02/14/please-do-not-patch-like-an-idiot/">Please. Don&#8217;t Patch Like An Idiot</a> from this tutorial&#8217;s co-author Mr. William Durand.</p>
<p>So what should you do in your API? It&#8217;s tough, because we live in a world
where the most popular API&#8217;s still bend the rules. Try to follow the rules
for PUT and PATCH the best you can, while still making your API very easy
for your clients. And above everything, be consistent and outline your implementation
in your docs.</p>
</div>
</div>


    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2847366422" id="dsq-comment-2847366422">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2847366422">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-19</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2847366422" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2847366422" class="dsq-comment-text">
	                                <p>Ah, good question! And actually, not one that I know *that* much about - I'm not deeply familiar with the RFC process. However, I can say that the number is for a *specific* document. A draft RFC *can* go through multiple revisions, but if it's ultimately accepted, it has just *one* number. That being said, future, different RFC's may come out that clarify or even change/replace earlier RFC's. For example, <a href="https://disq.us/url?url=https%3A%2F%2Ftools.ietf.org%2Fhtml%2Frfc7230%3AW6Kn1lHFjAmAvD0QsdxeuRDP0DI&amp;cuid=1175718" rel="nofollow noopener">https://tools.ietf.org/html/rf...</a> shows that it obsoletes 2145 and 2616. And 2616 lists that it is obsoleted by 7230, and a few others. So, I believe that - similar to the PSR's made by the PHP fig group - each number is its own proposal, not versions. You can see the full, gigantic, list of RFC's here: <a href="https://disq.us/url?url=https%3A%2F%2Ftools.ietf.org%2Frfc%2Findex%3AzhUIzARhMyY2frivhGrZtZC-Qqo&amp;cuid=1175718" rel="nofollow noopener">https://tools.ietf.org/rfc/ind...</a></p><p>I hope this helps!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2845539352" id="dsq-comment-2845539352">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/3amprogrammer/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/18706/694/avatar92.jpg?1470710433">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2845539352">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-19</span>
	                            <span class="dsq-commenter-name">3amprogrammer</span>
	                        </div>

	                        <div id="dsq-comment-message-2845539352" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2845539352" class="dsq-comment-text">
	                                <p>RFC 6902, 2616, 5837, 4823... what are these numbers? Is every document self-contained version or those numbers are just patches to some RFC root document? Could you please shed some light on this?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_patch';var disqus_url = 'https://knpuniversity.com/screencast/rest/patch';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="errors#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/rest/patch" addthis:title="RESTful APIs in the Real World Course 1">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"rest","courseIsOwned":false,"chapter":"PATCH: The Other Edit","chapterNumber":20,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'RESTful APIs in the Real World Course 1';
        Core.courseId = 45
        Core.courseIsOwned = false;
        Core.courseSlug = 'rest';
                    Core.chapterTitle = 'PATCH: The Other Edit';
            Core.chapterNumber = 20;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'patch';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":368,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
