<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Testing your API with PHPUnit > RESTful APIs in the Real World Course 1 | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 38442
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: Behat\x20for\x20Testing <i class="fa fa-play"></i>',
            'url': '/screencast/rest/testing#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="Making RESTful APIs is hard, really hard. There are a lot of concepts
to know - resources, representations, HTTP methods, status codes, etc.

And putting this all to life in a sane way in PHP is no small task. In
this course, we&#039;ll learn all the most fundamental concepts around REST
and learn about the &quot;rules&quot; and the advantages and disadvantages of each.
And we&#039;ll of course build a real API to show it all off. Topics include:

* HTTP basics
* Resources and Representations
* Resource state, client state
* GET, POST, PUT, PATCH, DELETE
* Idemptotency and safe methods
* Proper Status Codes, Location header and Content-Type
* Testing your API
* RFCs and where the &quot;rules&quot; come from
* Advanced error and validation handling

If you want to know about Hypermedia, HATEOAS, Documenting your API,
Content-Type negotiation, pagination and more, these are **not** covered
here, but will be covered in [Episode 2](/screencast/rest-ep2) and
[Episode 3](http://knpuniversity.com/screencast/rest-ep3).

This tutorial uses [Silex](http://silex.sensiolabs.org/) and we avoid talking
about it as much as possible and instead focus on the core concepts of REST. Once
you understand these, you can watch our [Symfony REST](http://knpuniversity.com/screencast/symfony-rest)
series to learn how to leverage Symfony for your API.
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Testing your API with PHPUnit">
<meta property="og:description" content="Making RESTful APIs is hard, really hard. There are a lot of concepts
to know - resources, representations, HTTP methods, status codes, etc">
<meta property="og:url" content="http://knpuniversity.com/screencast/rest/testing-phpunit">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/rest:1417f7455dfdb0a953a6a18ae1d5c9c61f5f4637/rest.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="testing-phpunit#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        11.
                            Testing your API with PHPUnit
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">RESTful APIs in the Real World Course 1</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="intro" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        The REST API Tutorial
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:07</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="http" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        HTTP Basics
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:10</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="rest" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        REST: Resources and Representations
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:12</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="client-state" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Transitions and Client State
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:11</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="project-routing" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Project Routing
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:22</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="post" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        POST: Creation, Location Header and 201
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:53</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="get" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        GET’ing Resources, and Content-Type
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:36</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="location-header" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Updating the Location Header
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="get-collection" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        GET /programmers: A collection of Programmers
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:32</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="rfcs" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        Fixing the Content-Type on POST
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:37</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="testing-phpunit" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Testing your API with PHPUnit
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:34</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="testing" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                12.
                        Behat for Testing
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:35</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="testing-data" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                13.
                        Handling Data in Tests
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:57</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="put-editing" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                14.
                        PUT: Editing Resources
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:13</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="debugging-tests" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                15.
                        Debugging Tests
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:12</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="put-improvements" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                16.
                        PUT: Killing Duplicated Code
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:12</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="different-representations" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                17.
                        GET Representation != POST Representation
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:46</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="put-versus-post" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                18.
                        PUT Versus POST
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:07</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="delete" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                19.
                        Deleting Resources
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:29</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="patch" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                20.
                        PATCH: The Other Edit
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:53</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="errors" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                21.
                        Handling Errors
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:41</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="application-problem" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                22.
                        The application/problem+json Content-Type
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:26</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="error-consistency" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                23.
                        Enforcing Consistency with ApiProblem
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:13</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="error-invalid-json" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                24.
                        Error in Invalid JSON
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:28</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="error-api-problem-exception" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                25.
                        ApiProblemException and Exception Handling
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:38</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="error-404-json" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                26.
                        Handling 404 Errors
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:17</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="error-details" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                27.
                        Exposing more Error Details
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:56</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="whats-next" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                28.
                        What’s Next
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:02</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/rest" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Testing your API with PHPUnit</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>RESTful APIs in the Real World Course 1 Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $12.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="testing#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="testing-phpunit#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="testing-phpunit#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (16)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script script-content">
                                                                                        <a href="https://github.com/knpuniversity/rest/edit/master/knpu/episode1/testing-phpunit.rst" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    
  <div class="section" id="testing-your-api-with-phpunit">
<h1>Testing your API with PHPUnit<a class="headerlink" href="testing-phpunit#testing-your-api-with-phpunit" title="Permalink to this headline">¶</a></h1>
<p>What, a testing chapter so early? Yep, with API&#8217;s, you really can&#8217;t avoid
it, and that&#8217;s a good thing. One way or another, to develop, test and debug
each endpoint, you&#8217;ll need to either write some code or configure an HTTP
browser plugin like <a class="reference external" href="http://www.getpostman.com/">Postman</a>. And if you&#8217;re already doing all that work,
you might as well make these calls repeatable and automated.</p>
<div class="section" id="guzzle-and-phpunit">
<h2>Guzzle and PHPUnit<a class="headerlink" href="testing-phpunit#guzzle-and-phpunit" title="Permalink to this headline">¶</a></h2>
<p>Like I mentioned, if you&#8217;re making HTTP requests in PHP, you&#8217;ll want to use
Guzzle, like we are in our <tt class="docutils literal"><span class="pre">testing.php</span></tt> file. So, the easiest way to create
tests is just to put <a class="reference external" href="http://phpunit.de/">PHPUnit</a> and Guzzle together.</p>
<p>I already have PHPUnit installed in our app via Composer, so let&#8217;s go straight
to writing a test. Create a new <tt class="docutils literal"><span class="pre">Tests</span></tt> directory and put a <tt class="docutils literal"><span class="pre">ProgrammerControllerTest.php</span></tt>
file there. Create a class inside and extend the normal PHPUnit base class:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Tests/ProgrammerControllerTest.php</span>
<span class="k">namespace</span> <span class="nx">KnpU\CodeBattle\Tests</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">ProgrammerControllerTest</span> <span class="k">extends</span> <span class="nx">\PHPUnit_Framework_TestCase</span>
<span class="p">{</span>

<span class="p">}</span>
</pre></div>
</div>
<p>Next, add a <tt class="docutils literal"><span class="pre">testPOST</span></tt> method and copy in the POST logic from the <tt class="docutils literal"><span class="pre">testing.php</span></tt>
script:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Tests/ProgrammerControllerTest.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">testPOST</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// create our http client (Guzzle)</span>
    <span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Client</span><span class="p">(</span><span class="s1">&#39;http://localhost:8000&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">&#39;request.options&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
            <span class="s1">&#39;exceptions&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
        <span class="p">)</span>
    <span class="p">));</span>

    <span class="nv">$nickname</span> <span class="o">=</span> <span class="s1">&#39;ObjectOrienter&#39;</span><span class="o">.</span><span class="nx">rand</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">999</span><span class="p">);</span>
    <span class="nv">$data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">&#39;nickname&#39;</span> <span class="o">=&gt;</span> <span class="nv">$nickname</span><span class="p">,</span>
        <span class="s1">&#39;avatarNumber&#39;</span> <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">,</span>
        <span class="s1">&#39;tagLine&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;a test dev!&#39;</span>
    <span class="p">);</span>

    <span class="nv">$request</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;/api/programmers&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="nb">json_encode</span><span class="p">(</span><span class="nv">$data</span><span class="p">));</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Finally, let&#8217;s add some asserts to check that the status code is 201, that
we have a <tt class="docutils literal"><span class="pre">Location</span></tt> header and that we get back valid JSON:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Tests/ProgrammerControllerTest.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">testPOST</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="nv">$request</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;/api/programmers&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="nb">json_encode</span><span class="p">(</span><span class="nv">$data</span><span class="p">));</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>

    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="mi">201</span><span class="p">,</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getStatusCode</span><span class="p">());</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertTrue</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="na">hasHeader</span><span class="p">(</span><span class="s1">&#39;Location&#39;</span><span class="p">));</span>
    <span class="nv">$data</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">(</span><span class="k">true</span><span class="p">),</span> <span class="k">true</span><span class="p">);</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertArrayHasKey</span><span class="p">(</span><span class="s1">&#39;nickname&#39;</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>To try it out, use the <tt class="docutils literal"><span class="pre">vendor/bin/phpunit</span></tt> executable and point it at
the test file.</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>php vendor/bin/phpunit src/KnpU/CodeBattle/Tests/ProgrammerControllerTest.php
</pre></div>
</div>
<p>With any luck, Sebastian Bergmann will tell you that everything is ok! Of
course I never trust a test that passes on the first try, so be sure to change
things and make sure it fails when it should too.</p>
</div>
</div>


    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2842763931" id="dsq-comment-2842763931">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/chmlls/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/3302/637/avatar92.jpg?1440767284">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2842763931">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-17</span>
	                            <span class="dsq-commenter-name">Chmlls</span>
	                        </div>

	                        <div id="dsq-comment-message-2842763931" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2842763931" class="dsq-comment-text">
	                                <p>This one worked for me, thanks Rakib!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2842301571" id="dsq-comment-2842301571">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2842301571">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-17</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2842301571" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2842301571" class="dsq-comment-text">
	                                <p>Yay! That's awesome! And this is a great solution - running vendor/bin/phpunit is simply a shortcut to run the command that you ran - so it is actually no different at all.</p><p>Good luck and let us know if you have any other issues!</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2842240585" id="dsq-comment-2842240585">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_623s6WaCjh/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2842240585">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-17</span>
	                            <span class="dsq-commenter-name">叶朱丽</span>
	                        </div>

	                        <div id="dsq-comment-message-2842240585" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2842240585" class="dsq-comment-text">
	                                <p>Hi Victor!<br>I was eventually able to run the test without strange errors by using this command: <br>php vendor/phpunit/phpunit/composer/bin/phpunit<br>I cannot take credit for this, though... it was suggested few hours ago in a post below in this page, as you can see.<br>Anyway, thank you so much for your help and time! :D<br>Giulietta</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2841944918" id="dsq-comment-2841944918">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2841944918">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-17</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-2841944918" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2841944918" class="dsq-comment-text">
	                                <p>Hey Rakib,</p><p>In my project with PHPUnit 4.8 the direct path to the phpunit executable file is: ./vendor/phpunit/phpunit/phpunit . So probably it depends on PHPUnit version. But I think you're right, possible solution is to find manually the phpunit executable file in "./vendor/phpunit/phpunit" or nested folders and try to run it directly.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2841648293" id="dsq-comment-2841648293">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/rakibahmedshovon/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/13993/9225/avatar92.jpg?1473178884">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2841648293">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-17</span>
	                            <span class="dsq-commenter-name">Rakib Ahmed Shovon</span>
	                        </div>

	                        <div id="dsq-comment-message-2841648293" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2841648293" class="dsq-comment-text">
	                                <p>try this one .  php vendor/phpunit/phpunit/composer/bin/phpunit</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2838673582" id="dsq-comment-2838673582">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2838673582">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-15</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2838673582" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2838673582" class="dsq-comment-text">
	                                <p>Hi again!</p><p>Ah, that's partially my mistake. Run this instead:</p><p>./vendor/bin/phpunit</p><p>or just</p><p>vendor/bin/phpunit</p><p>(I can't remember if both work on Windows, or just one - but they are really the same thing)</p><p>I should not have recommended "php vendor/bin/phpunit" - as it doesn't work on Windows (the command above will work on everything). But, this is an interesting topic on its own. When you run "phpunit", it uses your global, system-wide installation of phpunit (if you have one). But if you run ./vendor/bin/phpunit. it uses the phpunit that was installed into your project via Composer. Sometimes, both will work, but the in-project one is better :).</p><p>In fact, I think this is the problem! If you use the "project" phpunit (i.e. vendor/bin/phpunit), it is aware of the other vendor/ files in your project, and will make them available. I think this is why you receive the "Class not found" error: when you run the "global" phpunit, it doesn't auto-load the classes in your project's vendor directory.</p><p>So, try the above command and let me know if it works. Your test code (obviously, since you haven't changed it) and your composer.json both look very good to me :).</p><p>I think we're close! Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2835366886" id="dsq-comment-2835366886">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_623s6WaCjh/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2835366886">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-13</span>
	                            <span class="dsq-commenter-name">叶朱丽</span>
	                        </div>

	                        <div id="dsq-comment-message-2835366886" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2835366886" class="dsq-comment-text">
	                                <p>Hi Ryan!<br>I go exactly through the same steps you showed me, but the only difference is that I have to run the test command as 'phpunit' only, instead of if 'php vendor/bin/phpunit ', because it gives me this message:</p><p>dir=$(d=${0%[/\\]*}; cd "$d"; cd "../phpunit/phpunit/composer/bin" &amp;&amp; pwd)</p><p># See if we are running in Cygwin by checking for cygpath program<br>if command -v 'cygpath' &gt;/dev/null 2&gt;&amp;1; then<br>	# Cygwin paths start with /cygdrive/ which will break windows PHP,<br>	# so we need to translate the dir path to windows format. However<br>	# we could be using cygwin PHP which does not require this, so we<br>	# test if the path to PHP starts with /cygdrive/ rather than /usr/bin<br>	if [[ $(which php) == /cygdrive/* ]]; then<br>		dir=$(cygpath -m "$dir");<br>	fi<br>fi<br>dir=$(echo $dir | sed 's/ /\ /g')<br>"${dir}/phpunit" "$@"</p><p>So, after running 'phpunit src/KnpU/CodeBattle/Tests/ProgrammerControllerTest.php', I always get this message:</p><p>Fatal error: Uncaught Error: Class 'Guzzle\Http\Client' not found in C:\finish\src\KnpU\CodeBattle\Tests\ProgrammerControllerTest.php:11<br>Stack trace:<br>#0 [internal function]: KnpU\CodeBattle\Tests\ProgrammerControllerTest-&gt;testPOST()<br>#1 C:\xampp\php\pear\PHPUnit\Framework\TestCase.php(975): ReflectionMethod-&gt;invokeArgs(Object(KnpU\CodeBattle\Tests\ProgrammerControllerTest), Array)<br>#2 C:\xampp\php\pear\PHPUnit\Framework\TestCase.php(831): PHPUnit_Framework_TestCase-&gt;runTest()<br>#3 C:\xampp\php\pear\PHPUnit\Framework\TestResult.php(648): PHPUnit_Framework_TestCase-&gt;runBare()<br>#4 C:\xampp\php\pear\PHPUnit\Framework\TestCase.php(776): PHPUnit_Framework_TestResult-&gt;run(Object(KnpU\CodeBattle\Tests\ProgrammerControllerTest))<br>#5 C:\xampp\php\pear\PHPUnit\Framework\TestSuite.php(775): PHPUnit_Framework_TestCase-&gt;run(Object(PHPUnit_Framework_TestResult))<br>#6 C:\xampp\php\pear\PHPUnit\Framework\TestSuite.php(745): PHPUnit_Framework_TestSuite-&gt;runTest(Object(KnpU\CodeBattle\Tests\ProgrammerControllerTest), Object(PHPUnit_Framework_TestRe in C:\finish\src\KnpU\CodeBattle\Tests\ProgrammerControllerTest.php on line 11<br>PHP Fatal error:  Uncaught Error: Class 'Guzzle\Http\Client' not found in C:\finish\src\KnpU\CodeBattle\Tests\ProgrammerControllerTest.php:11<br>Stack trace:<br>#0 [internal function]: KnpU\CodeBattle\Tests\ProgrammerControllerTest-&gt;testPOST()<br>#1 C:\xampp\php\pear\PHPUnit\Framework\TestCase.php(975): ReflectionMethod-&gt;invokeArgs(Object(KnpU\CodeBattle\Tests\ProgrammerControllerTest), Array)<br>#2 C:\xampp\php\pear\PHPUnit\Framework\TestCase.php(831): PHPUnit_Framework_TestCase-&gt;runTest()<br>#3 C:\xampp\php\pear\PHPUnit\Framework\TestResult.php(648): PHPUnit_Framework_TestCase-&gt;runBare()<br>#4 C:\xampp\php\pear\PHPUnit\Framework\TestCase.php(776): PHPUnit_Framework_TestResult-&gt;run(Object(KnpU\CodeBattle\Tests\ProgrammerControllerTest))<br>#5 C:\xampp\php\pear\PHPUnit\Framework\TestSuite.php(775): PHPUnit_Framework_TestCase-&gt;run(Object(PHPUnit_Framework_TestResult))<br>#6 C:\xampp\php\pear\PHPUnit\Framework\TestSuite.php(745): PHPUnit_Framework_TestSuite-&gt;runTest(Object(KnpU\Code</p><p>This is my composer.json:</p><p>{<br>    "require": {<br>        "silex/silex": "~1.0",<br>        "symfony/twig-bridge": "~2.1",<br>        "symfony/security": "~2.4",<br>        "doctrine/dbal": "^2.5.4",<br>        "monolog/monolog": "~1.7.0",<br>        "symfony/validator": "~2.4",<br>        "symfony/expression-language": "~2.4"<br>    },<br>    "require-dev": {<br>        "behat/mink": "~1.5",<br>        "behat/mink-goutte-driver": "~1.0.9",<br>        "behat/mink-selenium2-driver": "~1.1.1",<br>        "behat/behat": "~2.5",<br>        "behat/mink-extension": "~1.2.0",<br>        "phpunit/phpunit": "~3.7.0",<br>        "guzzle/guzzle": "~3.7"<br>    },<br>    "autoload" : {<br>        "psr-0": {<br>            "KnpU\\CodeBattle": "src/"<br> }  }}</p><p>I haven't touched the test file, anyway, pasting it here too:</p><p> array(<br>                'exceptions' =&gt; false,<br>            )<br>        ));</p><p>        $nickname = 'ObjectOrienter'.rand(0, 999);<br>        $data = array(<br>            'nickname' =&gt; $nickname,<br>            'avatarNumber' =&gt; 5,<br>            'tagLine' =&gt; 'a test dev!'<br>        );</p><p>        $request = $client-&gt;post('/api/programmers', null, json_encode($data));<br>        $response = $request-&gt;send();</p><p>        $this-&gt;assertEquals(201, $response-&gt;getStatusCode());<br>        $this-&gt;assertTrue($response-&gt;hasHeader('Location'));<br>        $data = json_decode($response-&gt;getBody(true), true);<br>        $this-&gt;assertArrayHasKey('nickname', $data);<br>    }<br>}</p><p>If I won't be able to solve this problem I will just try going on with the following lesson ... But, in this case, would you suggest another way to test the Api?</p><p>Thank you very much for your time :)</p><p>Giulietta</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2834211473" id="dsq-comment-2834211473">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2834211473">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-12</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2834211473" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2834211473" class="dsq-comment-text">
	                                <p>No problem :) - sorry you're still having issues!</p><p>Ok, so first, I don't *think* that the PHPUnit\Autoload.php file is the problem. When you run composer install, it downloads all of the files into the vendor directory - and it should do this perfectly (I mean, it downloads all of phpunit, and there shouldn't be any path problems). In fact, I just re-downloaded the code to make sure that everything is still ok with it, and I *was* able to get the phpunit test to pass. Here's what I did:</p><p>1) Downloaded and unzipped the course code<br>2) Moved into the finish directory and ran "composer install"<br>3) Moved into the web directory and ran php -S localhost:8000 to start the built-in web server<br>4) Execute the tests by running:</p><p>php vendor/bin/phpunit src/KnpU/CodeBattle/Tests/ProgrammerControllerTest.php</p><p>When I did this, the one test passed just fine :). Now, in your last comment, you said that you "keep on getting the same error". Which error is this? Is it the "Class Guzzle\Http\Client not found" error? Or is it something different? Can you re-paste your composer.json (unless you haven't changed it) and your test file? I'm sure it's something small :).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2834149832" id="dsq-comment-2834149832">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_623s6WaCjh/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2834149832">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-12</span>
	                            <span class="dsq-commenter-name">叶朱丽</span>
	                        </div>

	                        <div id="dsq-comment-message-2834149832" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2834149832" class="dsq-comment-text">
	                                <p>Hi Ryan,</p><p>thank you for your detailed explanation and sorry to bother you again with this issue, but I am kind of stuck.</p><p>I went back to the original guzzle/guzzle library but keep on getting the same error. After a long (but fruitless) search on the web I thought I could try to run the test on the 'finish' version of the API provided in the course code (perhaps I messed up too much with the other one). <br>So I moved the folder to the server and ran composer install command. <br>Unfortunately I still get the very same error when running the PhpUnit test. I didn't modify the composer.json file.<br>Then I tried to dig a bit deeper but only noticed several yellow warnings (path not found) on the file vendor\phpunit\phpunit\PHPUnit\Autoload.php. <br>All the 'not found' files are those in the 'require_once' statements (see below); do you think this could be related to the error I am getting?<br>Thanks a lot for your help!!<br>Giulietta</p><p>require_once $path . '/autoload.php';<br>(....)<br>require_once 'File/Iterator/Autoload.php';<br>require_once 'PHP/CodeCoverage/Autoload.php';<br>require_once 'PHP/Timer/Autoload.php';<br>require_once 'PHPUnit/Framework/MockObject/Autoload.php';<br>require_once 'Text/Template/Autoload.php';<br>(....)<br>if (stream_resolve_include_path('PHP/Invoker/Autoload.php')) {<br>    require_once 'PHP/Invoker/Autoload.php';<br>}</p><p>if (stream_resolve_include_path('PHPUnit/Extensions/Database/Autoload.php')) {<br>    require_once 'PHPUnit/Extensions/Database/Autoload.php';<br>}</p><p>if (stream_resolve_include_path('PHPUnit/Extensions/SeleniumCommon/Autoload.php')) {<br>    require_once 'PHPUnit/Extensions/SeleniumCommon/Autoload.php';<br>}</p><p>else if (stream_resolve_include_path('PHPUnit/Extensions/SeleniumTestCase/Autoload.php')) {<br>    require_once 'PHPUnit/Extensions/SeleniumTestCase/Autoload.php';<br>}</p><p>if (stream_resolve_include_path('PHPUnit/Extensions/Story/Autoload.php')) {<br>    require_once 'PHPUnit/Extensions/Story/Autoload.php';</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2832308410" id="dsq-comment-2832308410">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2832308410">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-11</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2832308410" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2832308410" class="dsq-comment-text">
	                                <p>Hey Giulietta!</p><p>Ok, I think we're close - there is one confusing thing going on! Here's some history:</p><p>A) The package called guzzle/guzzle is used in this tutorial. But this package has been deprecated and replaced by guzzlehttp/guzzle. guzzle/guzzle still works and is available, so you can use it still (and follow along with the tutorial exactly) or you can use guzzlehttp/guzzle, but then you'll need to update some of your code for changes in this new library.</p><p>B) In your composer.json, you are using the new library - guzzlehttp/guzzle.</p><p>C) Based on which library you have, there are some changes you need to make to your code:</p><p>- if you're using guzzle/guzzle, then the Client's namespace is Guzzle\Http\Client<br>- if you're using guzzlehttp/guzzle, then the Client's namespace is GuzzleHttp\Client</p><p>So, it looks to me like you're using the new package (guzzlehttp/guzzle) but you are using the *old* library's namespace (Guzzle\Http\Client). You have two options:</p><p>A) Replace guzzlehttp/guzzle with guzzle/guzzle (the old library) and code along exactly with the tutorial. This is great if you want to focus on learning the REST stuff, and don't want to worry about the little details of using Guzzle, which we use to test the API</p><p>B) Keep guzzlehttp/guzzle, and then do a little more work to update / translate the code we use in this tutorial into the updated code. This is good if you're really curious about learning Guzzle and don't mind doing some extra digging for some extra learning! If you go this direction and have any issues you can't solve, we'll be happy to help with those :).</p><p>Let me know if this helps! And cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2830367141" id="dsq-comment-2830367141">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_623s6WaCjh/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2830367141">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-10</span>
	                            <span class="dsq-commenter-name">叶朱丽</span>
	                        </div>

	                        <div id="dsq-comment-message-2830367141" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2830367141" class="dsq-comment-text">
	                                <p>Hi Victor!<br>I had already tried changing the use statement, but it didn't work (the namespace of the Client class is actually  Guzzle\Http). Also ran composer install (it says that --dev is deprecated) and composer update. It gives me this message where advises not to use guzzle/guzzle (not too sure what  I should do though):</p><p>C:\xampp\htdocs\restone&gt;composer update<br>Loading composer repositories with package information<br>Updating dependencies (including require-dev)<br>  - Removing guzzlehttp/streams (2.1.0)<br>Package guzzle/guzzle is abandoned, you should avoid using it. Use guzzlehttp/guzzle instead.<br>Writing lock file<br>Generating autoload files</p><p>I am sorry cannot find the solution. Am I missing something?<br>Could you please help me checking if my composer.json is alright?<br>I've tried googling the error but none of the suggestions I found seems to help :(<br>Thank you!!<br>Giulietta</p><p>{<br>    "require": {<br>        "silex/silex": "~1.0",<br>        "symfony/twig-bridge": "~2.1",<br>        "symfony/security": "~2.4",<br>        "doctrine/dbal": "^2.5.4",<br>        "monolog/monolog": "~1.7.0",<br>        "symfony/validator": "~2.4",<br>        "symfony/expression-language": "~2.4",<br>        "guzzlehttp/guzzle": "^6.2"</p><p>    },<br>    "require-dev": {<br>        "behat/mink": "~1.5",<br>        "behat/mink-goutte-driver": "~1.0.9",<br>        "behat/mink-selenium2-driver": "~1.1.1",<br>        "behat/behat": "~2.5",<br>        "behat/mink-extension": "~1.2.0",<br>        "phpunit/phpunit": "~3.7.0"<br>    },<br>    "autoload" : {<br>        "psr-0": {<br>            "KnpU\\CodeBattle": "src/"<br>        }<br>    }<br>}</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2830101108" id="dsq-comment-2830101108">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2830101108">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-10</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-2830101108" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2830101108" class="dsq-comment-text">
	                                <p>Hey Giulietta,</p><p>You probably should use a "\GuzzleHttp\Client" instead of "\Guzzle\Http\Client" in "ProgrammerControllerTest". Or probably you missed a package or maybe do not install dev packages with Composer. Try to re-run "composer install --dev" command. It should help. If not - check what Guzzle version you have installed. if it even not installed yet - install it first with "composer require guzzlehttp/guzzle" command and re-run your tests.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2829043358" id="dsq-comment-2829043358">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_623s6WaCjh/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2829043358">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-09</span>
	                            <span class="dsq-commenter-name">叶朱丽</span>
	                        </div>

	                        <div id="dsq-comment-message-2829043358" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2829043358" class="dsq-comment-text">
	                                <p>Hi!<br>When I try running the phpunit test I get the following error on the command prompt, any suggestions?<br>Thank you :)<br>Giulietta</p><p>Fatal error: Uncaught Error: Class 'Guzzle\Http\Client' not found in C:\xampp\htdocs\restone\src\KnpU\CodeBattle\Tests\Controller\Api\ProgrammerControllerTest.php:11</p><p>Stack trace:<br>#0 [internal function]: KnpU\CodeBattle\Tests\Controller\Api\ProgrammerControllerTest-&gt;testPOST()<br>#1 C:\xampp\php\pear\PHPUnit\Framework\TestCase.php(975): ReflectionMethod-&gt;invokeArgs(Object(KnpU\CodeBattle\Tests\Controller\Api\ProgrammerControllerTest), Array)<br>#2 C:\xampp\php\pear\PHPUnit\Framework\TestCase.php(831): PHPUnit_Framework_TestCase-&gt;runTest()<br>#3 C:\xampp\php\pear\PHPUnit\Framework\TestResult.php(648): PHPUnit_Framework_TestCase-&gt;runBare()<br>#4 C:\xampp\php\pear\PHPUnit\Framework\TestCase.php(776): PHPUnit_Framework_TestResult-&gt;run(Object(KnpU\CodeBattle\Tests\Controller\Api\ProgrammerControllerTest))<br>#5 C:\xampp\php\pear\PHPUnit\Framework\TestSuite.php(775): PHPUnit_Framework_TestCase-&gt;run(Object(PHPUnit_Framework_TestResult))<br>#6 C:\xampp\php\pear\PHPUnit\Framework\TestSuite.php(745): PHPUnit_Framework_TestSuite-&gt;runTest(Object(KnpU\C in C:\xampp\htdocs\restone\src\KnpU\CodeBattle\Tests\Controller\Api\ProgrammerControllerTest.php on line 11<br>PHP Fatal error:  Uncaught Error: Class 'Guzzle\Http\Client' not found in C:\xampp\htdocs\restone\src\KnpU\CodeBattle\Tests\Controller\Api\ProgrammerControllerTest.php:11<br>Stack trace:<br>#0 [internal function]: KnpU\CodeBattle\Tests\Controller\Api\ProgrammerControllerTest-&gt;testPOST()<br>#1 C:\xampp\php\pear\PHPUnit\Framework\TestCase.php(975): ReflectionMethod-&gt;invokeArgs(Object(KnpU\CodeBattle\Tests\Controller\Api\ProgrammerControllerTest), Array)<br>#2 C:\xampp\php\pear\PHPUnit\Framework\TestCase.php(831): PHPUnit_Framework_TestCase-&gt;runTest()<br>#3 C:\xampp\php\pear\PHPUnit\Framework\TestResult.php(648): PHPUnit_Framework_TestCase-&gt;runBare()<br>#4 C:\xampp\php\pear\PHPUnit\Framework\TestCase.php(776): PHPUnit_Framework_TestResult-&gt;run(Object(KnpU\CodeBattle\Tests\Controller\Api\ProgrammerControllerTest))<br>#5 C:\xampp\php\pear\PHPUnit\Framework\TestSuite.php(775): PHPUnit_Framework_TestCase-&gt;run(Object(PHPUnit_Framework_TestResult))<br>#6 C:\xampp\php\pear\PHPUnit\Framework\TestSuite.php(745): PHPUnit_Framework_TestSuite-&gt;runTest(Object(KnpU\C in C:\xampp\htdocs\restone\src\KnpU\CodeBattle\Tests\Controller\Api\ProgrammerControllerTest.php on line 11</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2244765561" id="dsq-comment-2244765561">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="testing-phpunit">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2244765561">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-09-09</span>
	                            <span class="dsq-commenter-name">Samuel</span>
	                        </div>

	                        <div id="dsq-comment-message-2244765561" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2244765561" class="dsq-comment-text">
	                                <p>nevermind^^ seems i was too slow to catch it :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2244763016" id="dsq-comment-2244763016">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="testing-phpunit">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2244763016">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-09-09</span>
	                            <span class="dsq-commenter-name">Samuel</span>
	                        </div>

	                        <div id="dsq-comment-message-2244763016" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2244763016" class="dsq-comment-text">
	                                <p>Are you sure you want to do the assertArrayHasKey on the $data used for the request and not what came back on the response?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1928834605" id="dsq-comment-1928834605">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/dizzybryanhigh/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/6084/7805/avatar92.jpg?1481290691">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1928834605">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-03-26</span>
	                            <span class="dsq-commenter-name">Dizzy Bryan High</span>
	                        </div>

	                        <div id="dsq-comment-message-1928834605" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1928834605" class="dsq-comment-text">
	                                <p>Hi there am using php storm on windows to do this tutorial, i have php 5.4.* installed.<br>I cant seem to run the phpUnit tests.<br>It just seems to echo out whats in the vendor\bin\phpunit file<br>I've tried downloading the pupunit.phar and putting it into the vendor\bin\ dir an running <br>php vendor/bin/phpunit.phar src/KnpU/CodeBattle/Tests/ProgrammerControllerTest.php<br>Just returns nothing.</p><p>Kinda stuck here, not sure how to move forward</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_testing-phpunit';var disqus_url = 'https://knpuniversity.com/screencast/rest/testing-phpunit';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="testing#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/rest/testing-phpunit" addthis:title="RESTful APIs in the Real World Course 1">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"rest","courseIsOwned":false,"chapter":"Testing your API with PHPUnit","chapterNumber":11,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'RESTful APIs in the Real World Course 1';
        Core.courseId = 45
        Core.courseIsOwned = false;
        Core.courseSlug = 'rest';
                    Core.chapterTitle = 'Testing your API with PHPUnit';
            Core.chapterNumber = 11;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'testing-phpunit';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":612,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
