<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Facebook: Using the API, Logging in and Failure > OAuth2 in 8 Steps | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 20783
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: Implicit\x20Grant\x20Type\x20with\x20Google\x2B <i class="fa fa-play"></i>',
            'url': '/screencast/oauth/javascript-implicit-google-plus#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="OAuth2: that mystical beast that you kind of understand and occasionally
wrestle to integrate with some social media site.

Time to master OAuth2... and why not do it by building a real app with
farmers, chickens and real-life providers like Facebook and Google Plus.
We&#039;ll show you how OAuth really works while looking at how OAuth will
feel by using SDK&#039;s and other tools that give you shortcuts.

And like always, we&#039;ll go directly at the ugly details, like token expiration
and having a user deny access to your application. Here&#039;s what you&#039;ll
be learning:

* 3 main OAuth grant types: client credentials, authorization code and implicit;
* The exact flow behind getting your application authorized, exchanging
  an authorization code for a token, and using the token;
* Authentication (single sign-on) using OAuth;
* Handling expired tokens;
* Using refresh tokens;
* Integrating and authentication with Facebook;
* OAuth integration with Google+;
* What to look out for with security and how you can tighten things.
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Facebook: Using the API, Logging in and Failure">
<meta property="og:description" content="OAuth2: that mystical beast that you kind of understand and occasionally
wrestle to integrate with some social media site.

Time to master OAuth2">
<meta property="og:url" content="http://knpuniversity.com/screencast/oauth/facebook2">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/oauth:1e115c422acb5c00225bfbab187b202cb86a0cb7/oauth.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="facebook2#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        7.
                            Facebook: Using the API, Logging...
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">OAuth2 in 8 Steps</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="intro" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Serious OAuth in 8 Steps
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:43</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="client-credentials" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        Client Credentials
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 8:55</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="authorization-code" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        Authorization Code Grant Type
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 10:22</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="authorization-code2" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Authorization Code: Saving the Token &amp; Handling Failures
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 10:37</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="logging-in" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        User Login with OAuth
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:01</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="facebook" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        OAuth with Facebook
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 11:28</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="facebook2" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Facebook: Using the API, Logging in and Failure
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 10:05</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="javascript-implicit-google-plus" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Implicit Grant Type with Google+
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 9:45</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="implicit2" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Finishing the Login Callback
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:03</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="refresh-token" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        Using Refresh Tokens
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:08</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="security" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Security
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 10:10</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/oauth" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Facebook: Using the API, Logging in and Failure</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>OAuth2 in 8 Steps Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $12.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="javascript-implicit-google-plus#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="facebook2#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="facebook2#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (8)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script script-content">
                                                                                        <a href="https://github.com/knpuniversity/oauth/edit/master/knpu/facebook2.rst" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    
  <div class="section" id="facebook-using-the-api-logging-in-and-failure">
<h1>Facebook: Using the API, Logging in and Failure<a class="headerlink" href="facebook2#facebook-using-the-api-logging-in-and-failure" title="Permalink to this headline">¶</a></h1>
<div class="section" id="sharing-on-your-wall">
<h2>Sharing on your Wall<a class="headerlink" href="facebook2#sharing-on-your-wall" title="Permalink to this headline">¶</a></h2>
<p>If the current user has a Facebook ID, let&#8217;s replace the &#8220;Connect
with Facebook&#8221; link with one called &#8220;Share&#8221; that will post to their timeline:</p>
<div class="highlight-html+jinja"><div class="highlight"><pre><span class="c">{# views/dashboard.twig #}</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;panel-body&quot;</span><span class="nt">&gt;</span>
    <span class="cp">{%</span> <span class="k">if</span> <span class="nv">user.facebookUserId</span> <span class="cp">%}</span>
        Share how many eggs you&#39;ve collected today on Facebook!
        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">path</span><span class="o">(</span><span class="s1">&#39;facebook_share_place&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="s">&quot;</span> <span class="na">class=</span><span class="s">&quot;btn btn-info&quot;</span><span class="nt">&gt;</span>Share<span class="nt">&lt;/a&gt;</span>
    <span class="cp">{%</span> <span class="k">else</span> <span class="cp">%}</span>
        Share your status on Facebook!
        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">path</span><span class="o">(</span><span class="s1">&#39;facebook_authorize_start&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="s">&quot;</span><span class="nt">&gt;</span>Connect with Facebook<span class="nt">&lt;/a&gt;</span>
    <span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
</div>
<p>The URL I&#8217;m generating here is pointing to a function called <tt class="docutils literal"><span class="pre">shareProgressOnFacebook</span></tt>
in FacebookOAuthController:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/OAuth2Demo/Client/Controllers/FacebookOAuthController.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">shareProgressOnFacebook</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">die</span><span class="p">(</span><span class="s1">&#39;Todo: Use Facebook\&#39;s API to post to someone\&#39;s feed&#39;</span><span class="p">);</span>

    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">generateUrl</span><span class="p">(</span><span class="s1">&#39;home&#39;</span><span class="p">));</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Click the link to see the message in my <tt class="docutils literal"><span class="pre">die</span></tt> statement being printed.</p>
<div class="section" id="using-the-facebook-api">
<h3>Using the Facebook API<a class="headerlink" href="facebook2#using-the-facebook-api" title="Permalink to this headline">¶</a></h3>
<p>To post to someone&#8217;s timeline, we&#8217;ll use Facebook&#8217;s API. Like with any API
that uses OAuth, we just need to know the URL, the HTTP method, any data we
need to send, and how the access token should be attached to the request.</p>
<p>With some <a class="reference external" href="https://developers.facebook.com/docs/reference/api/publishing/">quick googling</a>, we see that we need to make a POST request to
<tt class="docutils literal"><span class="pre">/[USER_ID]/feed</span></tt> and send <tt class="docutils literal"><span class="pre">message</span></tt> and <tt class="docutils literal"><span class="pre">access_token</span></tt> POST data.</p>
<p>We could <em>absolutely</em> do this manually, using the nice Guzzle library from
before. But since we&#8217;re using the Facebook SDK, it&#8217;s even easier.</p>
<p>Use the <tt class="docutils literal"><span class="pre">createFacebook</span></tt> method from before to get our Facebook object
and then use its <tt class="docutils literal"><span class="pre">api</span></tt> method. This takes 3 arguments: the API URL, the
HTTP method, and any parameters we need to send:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">shareProgressOnFacebook</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$facebook</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createFacebook</span><span class="p">();</span>

    <span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">api</span><span class="p">(</span>
        <span class="s1">&#39;/&#39;</span><span class="o">.</span><span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">getUser</span><span class="p">()</span><span class="o">.</span><span class="s1">&#39;/feed&#39;</span><span class="p">,</span>
        <span class="s1">&#39;POST&#39;</span><span class="p">,</span>
        <span class="k">array</span><span class="p">(</span>
            <span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;TEST&#39;</span><span class="p">,</span>
        <span class="p">)</span>
    <span class="p">);</span>

    <span class="k">die</span><span class="p">(</span><span class="s1">&#39;Todo: Use Facebook\&#39;s API to post to someone\&#39;s feed&#39;</span><span class="p">);</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The handy <tt class="docutils literal"><span class="pre">$facebook-&gt;getUser()</span></tt> method gives us the right <tt class="docutils literal"><span class="pre">USER_ID</span></tt> for
the URL. The only missing piece is the <tt class="docutils literal"><span class="pre">access_token</span></tt> parameter, which we
can leave out because the Facebook class adds that automatically for us. Again,
that&#8217;s really cool - just don&#8217;t lose sight of how things are really working
behind the scenes.</p>
<p>Let&#8217;s set the return value to a variable and dump it:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="nv">$result</span> <span class="o">=</span> <span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">api</span><span class="p">(</span>
    <span class="s1">&#39;/&#39;</span><span class="o">.</span><span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">getUser</span><span class="p">()</span><span class="o">.</span><span class="s1">&#39;/feed&#39;</span><span class="p">,</span>
    <span class="s1">&#39;POST&#39;</span><span class="p">,</span>
    <span class="k">array</span><span class="p">(</span>
        <span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;TEST&#39;</span><span class="p">,</span>
    <span class="p">)</span>
<span class="p">);</span>
<span class="nb">var_dump</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span><span class="k">die</span><span class="p">;</span>
</pre></div>
</div>
<p>Refresh the page to try it out. It prints out an array with an <tt class="docutils literal"><span class="pre">id</span></tt> and
a long number string. The response from <tt class="docutils literal"><span class="pre">api</span></tt> is specific to what you&#8217;re
trying to do. In this case, this is the ID of the new post it made. When
I go to my Facebook page, there&#8217;s my egg-citing post!</p>
<p>Remember that one of the reasons this works is that our authorization URL
included the scope <tt class="docutils literal"><span class="pre">publish_actions</span></tt>. Had we <em>not</em> done that, this request
would fail.</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">With Facebook and other OAuth servers, users are able to approve <em>some</em>
of the scopes requested by your application but deny others. So code
defensively - API requests may fail!</p>
</div>
<p>Let&#8217;s make the message more realistic by putting in my egg count and finish
the flow by redirecting back to the homepage:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">shareProgressOnFacebook</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$facebook</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createFacebook</span><span class="p">();</span>
    <span class="nv">$eggCount</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getTodaysEggCountForUser</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getLoggedInUser</span><span class="p">());</span>

    <span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">api</span><span class="p">(</span>
        <span class="s1">&#39;/&#39;</span><span class="o">.</span><span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">getUser</span><span class="p">()</span><span class="o">.</span><span class="s1">&#39;/feed&#39;</span><span class="p">,</span>
        <span class="s1">&#39;POST&#39;</span><span class="p">,</span>
        <span class="k">array</span><span class="p">(</span>
            <span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="nb">sprintf</span><span class="p">(</span><span class="s1">&#39;Woh my chickens have laid %s eggs today!&#39;</span><span class="p">,</span> <span class="nv">$eggCount</span><span class="p">),</span>
        <span class="p">)</span>
    <span class="p">);</span>

    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">generateUrl</span><span class="p">(</span><span class="s1">&#39;home&#39;</span><span class="p">));</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Refresh to try it all again. Check Facebook to see that we&#8217;re bragging about
our egg-laying hens&#8217; progress!</p>
</div>
</div>
<div class="section" id="handling-failure-and-re-authorizing">
<h2>Handling Failure and Re-Authorizing<a class="headerlink" href="facebook2#handling-failure-and-re-authorizing" title="Permalink to this headline">¶</a></h2>
<p>Of course, the API request may fail, especially in the world of OAuth where
the access token might be expired. If any API request fails, the Facebook
class will throw a <tt class="docutils literal"><span class="pre">FacebookApiException</span></tt>. That&#8217;s great, because
we can wrap the API call in a try-catch block:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">try</span> <span class="p">{</span>
    <span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">api</span><span class="p">(</span>
        <span class="s1">&#39;/&#39;</span><span class="o">.</span><span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">getUser</span><span class="p">()</span><span class="o">.</span><span class="s1">&#39;/feed&#39;</span><span class="p">,</span>
        <span class="s1">&#39;POST&#39;</span><span class="p">,</span>
        <span class="k">array</span><span class="p">(</span>
            <span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="nb">sprintf</span><span class="p">(</span><span class="s1">&#39;Woh my chickens have laid %s eggs today!&#39;</span><span class="p">,</span> <span class="nv">$eggCount</span><span class="p">),</span>
        <span class="p">)</span>
    <span class="p">);</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">\FacebookApiException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// it failed!</span>
<span class="p">}</span>
</pre></div>
</div>
<p>If you want to get information about the error, the exception object has
a few useful methods, like <tt class="docutils literal"><span class="pre">getResult</span></tt>, which gives you the raw API error
response or <tt class="docutils literal"><span class="pre">getType</span></tt> and <tt class="docutils literal"><span class="pre">getCode</span></tt>. Facebook has a helpful page called
<a class="reference external" href="https://developers.facebook.com/docs/graph-api/using-graph-api">Using the Graph API</a> that talks about the API and also the errors you might
get back. If <tt class="docutils literal"><span class="pre">getType</span></tt> returns <tt class="docutils literal"><span class="pre">OAuthException</span></tt>, or if the code is
190 or 102, the error is probably related to OAuth and we should try
re-authorizing them:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">try</span> <span class="p">{</span>
    <span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">api</span><span class="p">(</span>
        <span class="s1">&#39;/&#39;</span><span class="o">.</span><span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">getUser</span><span class="p">()</span><span class="o">.</span><span class="s1">&#39;/feed&#39;</span><span class="p">,</span>
        <span class="s1">&#39;POST&#39;</span><span class="p">,</span>
        <span class="k">array</span><span class="p">(</span>
            <span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="nb">sprintf</span><span class="p">(</span><span class="s1">&#39;Woh my chickens have laid %s eggs today!&#39;</span><span class="p">,</span> <span class="nv">$eggCount</span><span class="p">),</span>
        <span class="p">)</span>
    <span class="p">);</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">\FacebookApiException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// https://developers.facebook.com/docs/graph-api/using-graph-api/#errors</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="na">getType</span><span class="p">()</span> <span class="o">==</span> <span class="s1">&#39;OAuthException&#39;</span> <span class="o">||</span> <span class="nb">in_array</span><span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="na">getCode</span><span class="p">(),</span> <span class="k">array</span><span class="p">(</span><span class="mi">190</span><span class="p">,</span> <span class="mi">102</span><span class="p">)))</span> <span class="p">{</span>
        <span class="c1">// our token is bad - reauthorize to get a new token</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">generateUrl</span><span class="p">(</span><span class="s1">&#39;facebook_authorize_start&#39;</span><span class="p">));</span>
    <span class="p">}</span>

    <span class="c1">// it failed for some odd reason...</span>
    <span class="k">throw</span> <span class="nv">$e</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>There&#8217;s even <a class="reference external" href="https://developers.facebook.com/docs/facebook-login/access-tokens#errors">another page</a> that talks about handling expired tokens in
more detail. If this seems a little unclear, that&#8217;s probably because Facebook&#8217;s
error documentation is a little fuzzy.</p>
<p>If it&#8217;s any other error, I&#8217;ll just throw the original exception. You could
even render some custom error page.</p>
<p>With any API that uses OAuth, if you can be smart enough to detect when
API requests fail due to an expired access token, you can give your users
a better experience by having them re-authorize your application instead
of just failing.</p>
<div class="section" id="re-trying-an-api-request">
<h3>Re-trying an API Request<a class="headerlink" href="facebook2#re-trying-an-api-request" title="Permalink to this headline">¶</a></h3>
<p>Depending on the error, you might also want to re-try the request. Let&#8217;s
refactor the API call into a new private method called <tt class="docutils literal"><span class="pre">makeApiRequest</span></tt>:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">shareProgressOnFacebook</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$eggCount</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getTodaysEggCountForUser</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getLoggedInUser</span><span class="p">());</span>
    <span class="nv">$facebook</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createFacebook</span><span class="p">();</span>

    <span class="nv">$ret</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">makeApiRequest</span><span class="p">(</span>
        <span class="nv">$facebook</span><span class="p">,</span>
        <span class="s1">&#39;/&#39;</span><span class="o">.</span><span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">getUser</span><span class="p">()</span><span class="o">.</span><span class="s1">&#39;/feed&#39;</span><span class="p">,</span>
        <span class="s1">&#39;POST&#39;</span><span class="p">,</span>
        <span class="k">array</span><span class="p">(</span>
            <span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="nb">sprintf</span><span class="p">(</span><span class="s1">&#39;Woh my chickens have laid %s eggs today!&#39;</span><span class="p">,</span> <span class="nv">$eggCount</span><span class="p">),</span>
        <span class="p">)</span>
    <span class="p">);</span>

    <span class="c1">// if makeApiRequest returns a redirect, do it! The user needs to re-authorize</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$ret</span> <span class="nx">instanceof</span> <span class="nx">RedirectResponse</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$ret</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">generateUrl</span><span class="p">(</span><span class="s1">&#39;home&#39;</span><span class="p">));</span>
<span class="p">}</span>

<span class="k">private</span> <span class="k">function</span> <span class="nf">makeApiRequest</span><span class="p">(</span><span class="nx">\Facebook</span> <span class="nv">$facebook</span><span class="p">,</span> <span class="nv">$url</span><span class="p">,</span> <span class="nv">$method</span><span class="p">,</span> <span class="nv">$parameters</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">try</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">api</span><span class="p">(</span><span class="nv">$url</span><span class="p">,</span> <span class="nv">$method</span><span class="p">,</span> <span class="nv">$parameters</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">\FacebookApiException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// https://developers.facebook.com/docs/graph-api/using-graph-api/#errors</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="na">getType</span><span class="p">()</span> <span class="o">==</span> <span class="s1">&#39;OAuthException&#39;</span> <span class="o">||</span> <span class="nb">in_array</span><span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="na">getCode</span><span class="p">(),</span> <span class="k">array</span><span class="p">(</span><span class="mi">190</span><span class="p">,</span> <span class="mi">102</span><span class="p">)))</span> <span class="p">{</span>
            <span class="c1">// our token is bad - reauthorize to get a new token</span>
            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">generateUrl</span><span class="p">(</span><span class="s1">&#39;facebook_authorize_start&#39;</span><span class="p">));</span>
        <span class="p">}</span>

        <span class="c1">// it failed for some odd reason...</span>
        <span class="k">throw</span> <span class="nv">$e</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This method does the exact same thing as before. The <tt class="docutils literal"><span class="pre">if</span></tt> statement checks
to see if <tt class="docutils literal"><span class="pre">makeApiRequest</span></tt> needs us to redirect the user back to the authorize
URL.</p>
<p>But if we add a new <tt class="docutils literal"><span class="pre">$retry</span></tt> argument, we could run the request 1 more time if it fails:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">private</span> <span class="k">function</span> <span class="nf">makeApiRequest</span><span class="p">(</span><span class="nx">\Facebook</span> <span class="nv">$facebook</span><span class="p">,</span> <span class="nv">$url</span><span class="p">,</span> <span class="nv">$method</span><span class="p">,</span> <span class="nv">$parameters</span><span class="p">,</span> <span class="nv">$retry</span> <span class="o">=</span> <span class="k">true</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">try</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">api</span><span class="p">(</span><span class="nv">$url</span><span class="p">,</span> <span class="nv">$method</span><span class="p">,</span> <span class="nv">$parameters</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">\FacebookApiException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// ... the check for an expired token</span>

        <span class="c1">// re-try one time</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$retry</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">makeApiRequest</span><span class="p">(</span><span class="nv">$facebook</span><span class="p">,</span> <span class="nv">$url</span><span class="p">,</span> <span class="nv">$method</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="c1">// it failed for some odd reason...</span>
        <span class="k">throw</span> <span class="nv">$e</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Of course, this is really only interesting if we expect Facebook to have
a decent number of temporary failures. But the big idea is that you should
do your best to figure out <em>why</em> a failure has happened and re-try if it
makes sense.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">If you&#8217;re using the <a class="reference external" href="http://guzzle.readthedocs.org/">Guzzle</a> library to make API requests (which the
Facebook class does <em>not</em> use), it has built-in support for re-trying
a request if it fails. See <a class="reference external" href="https://github.com/guzzle/retry-subscriber">Guzzle Retry Subscriber</a> (for Guzzle version 4).</p>
</div>
<p>This is especially useful in the world of OAuth. We <em>didn&#8217;t</em> store the Facebook
access token in the database. But if we had, we could use it right now and
re-try the request again:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">private</span> <span class="k">function</span> <span class="nf">makeApiRequest</span><span class="p">(</span><span class="nx">\Facebook</span> <span class="nv">$facebook</span><span class="p">,</span> <span class="nv">$url</span><span class="p">,</span> <span class="nv">$method</span><span class="p">,</span> <span class="nv">$parameters</span><span class="p">,</span> <span class="nv">$retry</span> <span class="o">=</span> <span class="k">true</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">try</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">api</span><span class="p">(</span><span class="nv">$url</span><span class="p">,</span> <span class="nv">$method</span><span class="p">,</span> <span class="nv">$parameters</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">\FacebookApiException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="na">getType</span><span class="p">()</span> <span class="o">==</span> <span class="s1">&#39;OAuthException&#39;</span> <span class="o">||</span> <span class="nb">in_array</span><span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="na">getCode</span><span class="p">(),</span> <span class="k">array</span><span class="p">(</span><span class="mi">190</span><span class="p">,</span> <span class="mi">102</span><span class="p">)))</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nv">$retry</span><span class="p">)</span> <span class="p">{</span>
                <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getLoggedInUser</span><span class="p">();</span>
                <span class="c1">// this is fake code - we don&#39;t have a facebookAccessToken</span>
                <span class="c1">// property in our example project</span>
                <span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">setAccessToken</span><span class="p">(</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">facebookAccessToken</span><span class="p">);</span>

                <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">makeApiRequest</span><span class="p">(</span><span class="nv">$facebook</span><span class="p">,</span> <span class="nv">$url</span><span class="p">,</span> <span class="nv">$method</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
            <span class="p">}</span>

            <span class="c1">// ... the same redirect code</span>
        <span class="p">}</span>

        <span class="c1">// ... the same throw code</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>So if the access token were missing from the session and the one in the database
hasn&#8217;t expired, this will make everything work perfectly smooth. Since this
is fake code, let&#8217;s remove all the retry code for now:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">private</span> <span class="k">function</span> <span class="nf">makeApiRequest</span><span class="p">(</span><span class="nx">\Facebook</span> <span class="nv">$facebook</span><span class="p">,</span> <span class="nv">$url</span><span class="p">,</span> <span class="nv">$method</span><span class="p">,</span> <span class="nv">$parameters</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">try</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">api</span><span class="p">(</span><span class="nv">$url</span><span class="p">,</span> <span class="nv">$method</span><span class="p">,</span> <span class="nv">$parameters</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">\FacebookApiException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="na">getType</span><span class="p">()</span> <span class="o">==</span> <span class="s1">&#39;OAuthException&#39;</span> <span class="o">||</span> <span class="nb">in_array</span><span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="na">getCode</span><span class="p">(),</span> <span class="k">array</span><span class="p">(</span><span class="mi">190</span><span class="p">,</span> <span class="mi">102</span><span class="p">)))</span> <span class="p">{</span>
            <span class="c1">// our token is bad - reauthorize to get a new token</span>
            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">generateUrl</span><span class="p">(</span><span class="s1">&#39;facebook_authorize_start&#39;</span><span class="p">));</span>
        <span class="p">}</span>

        <span class="c1">// it failed for some odd reason...</span>
        <span class="k">throw</span> <span class="nv">$e</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="logging-in-with-facebook">
<h2>Logging in with Facebook<a class="headerlink" href="facebook2#logging-in-with-facebook" title="Permalink to this headline">¶</a></h2>
<p>Finally, let&#8217;s make it so the farmers can login with their Facebook account.
Let&#8217;s start by adding a link on the login page. Just like with &#8220;Login with COOP&#8221;,
the URL is to the page that starts the Facebook authorization process:</p>
<div class="highlight-html+jinja"><div class="highlight"><pre><span class="c">{# views/user/login.twig #}</span>
<span class="c">{# ... #}</span>

<span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">class=</span><span class="s">&quot;btn btn-primary&quot;</span><span class="nt">&gt;</span>Login!<span class="nt">&lt;/button&gt;</span>
OR
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;btn-group&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">path</span><span class="o">(</span><span class="s1">&#39;coop_authorize_start&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="s">&quot;</span> <span class="na">class=</span><span class="s">&quot;btn btn-default&quot;</span><span class="nt">&gt;</span>
        Login with COOP
    <span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">path</span><span class="o">(</span><span class="s1">&#39;facebook_authorize_start&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="s">&quot;</span> <span class="na">class=</span><span class="s">&quot;btn btn-default&quot;</span><span class="nt">&gt;</span>
        Login with Facebook
    <span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
</div>
<p>Logging in with Facebook is going to work <em>exactly</em> like logging in with
COOP. In fact, let&#8217;s just copy all the related code from CoopOAuthController
into our FacebookOAuthController:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/OAuth2Demo/Client/Controllers/FacebookOAuthController.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">receiveAuthorizationCode</span><span class="p">(</span><span class="nx">Application</span> <span class="nv">$app</span><span class="p">,</span> <span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$facebook</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createFacebook</span><span class="p">();</span>
    <span class="nv">$userId</span> <span class="o">=</span> <span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">getUser</span><span class="p">();</span>
    <span class="c1">// ...</span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">isUserLoggedIn</span><span class="p">())</span> <span class="p">{</span>
        <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getLoggedInUser</span><span class="p">();</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">findOrCreateUser</span><span class="p">(</span><span class="nv">$json</span><span class="p">);</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">loginUser</span><span class="p">(</span><span class="nv">$user</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">facebookUserId</span> <span class="o">=</span> <span class="nv">$userId</span><span class="p">;</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">saveUser</span><span class="p">(</span><span class="nv">$user</span><span class="p">);</span>
    <span class="c1">// ...</span>
<span class="p">}</span>

<span class="k">private</span> <span class="k">function</span> <span class="nf">findOrCreateUser</span><span class="p">(</span><span class="k">array</span> <span class="nv">$meData</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">findUserByCOOPId</span><span class="p">(</span><span class="nv">$meData</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">]))</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$user</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">findUserByEmail</span><span class="p">(</span><span class="nv">$meData</span><span class="p">[</span><span class="s1">&#39;email&#39;</span><span class="p">]))</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$user</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createUser</span><span class="p">(</span>
        <span class="nv">$meData</span><span class="p">[</span><span class="s1">&#39;email&#39;</span><span class="p">],</span>
        <span class="s1">&#39;&#39;</span><span class="p">,</span>
        <span class="nv">$meData</span><span class="p">[</span><span class="s1">&#39;firstName&#39;</span><span class="p">],</span>
        <span class="nv">$meData</span><span class="p">[</span><span class="s1">&#39;lastName&#39;</span><span class="p">]</span>
    <span class="p">);</span>

    <span class="k">return</span> <span class="nv">$user</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>But to create a user, we need some basic information, like email, first name
and last name. With COOP, we made an API request to get this information.
Let&#8217;s do the same thing for Facebook, using the really important endpoint
<tt class="docutils literal"><span class="pre">/me</span></tt>. And knowing that things can fail, let&#8217;s make sure to wrap it in
a try-catch block:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">receiveAuthorizationCode</span><span class="p">(</span><span class="nx">Application</span> <span class="nv">$app</span><span class="p">,</span> <span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">try</span> <span class="p">{</span>
        <span class="nv">$json</span> <span class="o">=</span> <span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">api</span><span class="p">(</span><span class="s1">&#39;/me?fields=email,first_name,last_name&#39;</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">\FacebookApiException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;failed_token_request.twig&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;response&#39;</span> <span class="o">=&gt;</span> <span class="nv">$e</span><span class="o">-&gt;</span><span class="na">getMessage</span><span class="p">()));</span>
    <span class="p">}</span>
    <span class="nb">var_dump</span><span class="p">(</span><span class="nv">$json</span><span class="p">);</span><span class="k">die</span><span class="p">;</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Due to recent Facebook API changes, you now need to add <cite>?fields=</cite> to explicitly
ask for which fields you want.</p>
</div>
<p>At this point, we <em>should</em> have a valid access token, so if the request fails,
something is very strange. That&#8217;s why I&#8217;m showing an error page instead of
redirecting them to re-authorize.</p>
<p>I&#8217;m dumping the result of the API request, so let&#8217;s logout and try the process.
But first, reset the database so that it doesn&#8217;t find our existing user:</p>
<div class="highlight-bash"><div class="highlight"><pre>rm data/topcluck.sqlite
</pre></div>
</div>
<p>When we login with Facebook, we hit the dump, which holds a lot of nice information
about the user:</p>
<div class="highlight-text"><div class="highlight"><pre>array (size=12)
  &#39;id&#39; =&gt; string &#39;100002910877036&#39; (length=15)
  &#39;name&#39; =&gt; string &#39;...&#39; (length=17)
  &#39;first_name&#39; =&gt; string &#39;...&#39; (length=10)
  &#39;last_name&#39; =&gt; string &#39;...&#39; (length=6)
  ...
</pre></div>
</div>
<p>We&#8217;re allowed to ask for this information because when we redirect the user
for authorization, we&#8217;re asking for the <tt class="docutils literal"><span class="pre">email</span></tt> scope. Let&#8217;s update the
<tt class="docutils literal"><span class="pre">findOrCreateUser</span></tt> method to use this data.</p>
<p>First, change <tt class="docutils literal"><span class="pre">findUserByCOOPId</span></tt> to <tt class="docutils literal"><span class="pre">findUserByFacebookId</span></tt>, which is
a shortcut method in my app to find a user by the  <tt class="docutils literal"><span class="pre">facebookUserId</span></tt> column:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">private</span> <span class="k">function</span> <span class="nf">findOrCreateUser</span><span class="p">(</span><span class="k">array</span> <span class="nv">$meData</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">findUserByFacebookId</span><span class="p">(</span><span class="nv">$meData</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">]))</span> <span class="p">{</span>
        <span class="c1">// this is an existing user. Yay!</span>
        <span class="k">return</span> <span class="nv">$user</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Next, change the <tt class="docutils literal"><span class="pre">firstName</span></tt> and <tt class="docutils literal"><span class="pre">lastName</span></tt> keys to match Facebook&#8217;s
API response:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">private</span> <span class="k">function</span> <span class="nf">findOrCreateUser</span><span class="p">(</span><span class="k">array</span> <span class="nv">$meData</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createUser</span><span class="p">(</span>
        <span class="nv">$meData</span><span class="p">[</span><span class="s1">&#39;email&#39;</span><span class="p">],</span>
        <span class="c1">// a blank password - this user hasn&#39;t created a password yet!</span>
        <span class="s1">&#39;&#39;</span><span class="p">,</span>
        <span class="nv">$meData</span><span class="p">[</span><span class="s1">&#39;first_name&#39;</span><span class="p">],</span>
        <span class="nv">$meData</span><span class="p">[</span><span class="s1">&#39;last_name&#39;</span><span class="p">]</span>
    <span class="p">);</span>

    <span class="k">return</span> <span class="nv">$user</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>It&#8217;s that easy! Go back to the login page and try the whole process. When
it finishes, we can click on the &#8220;User Info&#8221; section to see that we&#8217;re logged
in as a new user.</p>
<p>And that&#8217;s it! Since Facebook uses OAuth, working with it is almost exactly
like working with COOP. The biggest differene is that Facebook has a PHP
SDK, which makes life easier, but hides some of the OAuth magic that&#8217;s happening
behind the scenes. But now that you truly understand things, that&#8217;s no problem
for you!</p>
</div>
</div>


    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3054381914" id="dsq-comment-3054381914">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/rirath/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/5213/3228/avatar92.jpg?1481850731">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3054381914">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-12-16</span>
	                            <span class="dsq-commenter-name">Rirath</span>
	                        </div>

	                        <div id="dsq-comment-message-3054381914" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3054381914" class="dsq-comment-text">
	                                <p>For anyone else who winds up here, simply adding the fields wasn't enough for me as I still couldn't get access to "email".  I'd get first_name, last_name, and ID.  To get email, I had to make a new "test user" in Facebook's app page.  It is my understanding you may not retrieve all information from real users prior to app review, but test users will work regardless.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2636409425" id="dsq-comment-2636409425">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2636409425">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-04-22</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2636409425" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2636409425" class="dsq-comment-text">
	                                <p>Ah, also see this issue: <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fknpuniversity%2Foauth%2Fissues%2F57%3AJnqkLlSY-4waWX3HRyNQ40KpgIw&amp;cuid=1175718" rel="nofollow noopener">https://github.com/knpuniversi...</a> - it could be the real solution :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2631652818" id="dsq-comment-2631652818">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2631652818">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-04-19</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2631652818" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2631652818" class="dsq-comment-text">
	                                <p>Hey Kuba!</p><p>Ah, fascinating! Your screenshot might lead to the solution! It seems that Facebook now requires your application to be "reviewed" by them in order to ask for *certain* scopes. If you ask for the "email" or "public_profile" scope, then your app "Top Cluck" does not need to be reviewed. But if you ask for publish_actions (as we do), then your app *does* need to be reviewed. I'll see if I can get them to review our very awesome TopCluck app :).</p><p>So, if you do *not* ask for the publish_actions scope, do you then get back more information?</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2631397791" id="dsq-comment-2631397791">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/kubaflorczuk/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/7000/8705/avatar92.jpg?1477913194">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2631397791">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-04-19</span>
	                            <span class="dsq-commenter-name">Kuba Florczuk</span>
	                        </div>

	                        <div id="dsq-comment-message-2631397791" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2631397791" class="dsq-comment-text">
	                                <p>I have the same issue as Mihail.</p><p>Only info I get from FaceBook is name &amp; id.<br>I've tried to re-authorize Facebook app with no luck.</p><p>Also when authorizing Facebook app, I get a message: <br>"Submit for Login Review<br>Some of the permissions below have not been approved for use by Facebook.<br>Submit for review now or learn more."<br>which wasn't shown in tutorial.</p><p>Screenshot: <a href="http://disq.us/url?url=http%3A%2F%2Fcl.ly%2F1i0t1K2r3a0o%3AY4C9yqSY1UtRnlf2ActMBIITxLM&amp;cuid=1175718" rel="nofollow noopener">http://cl.ly/1i0t1K2r3a0o</a></p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2528991953" id="dsq-comment-2528991953">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2528991953">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-22</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2528991953" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2528991953" class="dsq-comment-text">
	                                <p>Hi Mihail!</p><p>Hmm, yes, I just tried it again with the real code that's included in the code download and it *does* work as expected. When I dump the $json, I'm returned an array with id, email, first_name, gender, name and about 5 other fields. It's possible that when you originally authorized your Facebook application for your account, you only authorized it for 1 scope (but not all the scopes we were asking for). You can remove authorization for your app (<a href="https://disq.us/url?url=https%3A%2F%2Fwww.facebook.com%2Fsettings%3Ftab%3Dapplications%29%3AZYcWhpTUx3u5O4HZlFdFGKSJM_0&amp;cuid=1175718" rel="nofollow noopener">https://www.facebook.com/setti...</a> and try it again - that might fix it.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2517048950" id="dsq-comment-2517048950">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_fvhM6qCQNy/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/19657/3705/avatar92.jpg?1467706588">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2517048950">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-16</span>
	                            <span class="dsq-commenter-name">Mihail</span>
	                        </div>

	                        <div id="dsq-comment-message-2517048950" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2517048950" class="dsq-comment-text">
	                                <p>Hi Ryan!</p><p>Thank you for your reply!</p><p>Id is fine, I just used dump symbol.</p><p>As far as I understand the scope is set right, according to the tutorial in FacebookOAuthController::redirectToAuthorization()</p><p>$url = $facebook-&gt;getLoginUrl(array(</p><p>    'redirect_uri' =&gt; $redirectUrl,</p><p>    'scope' =&gt; array('email', 'publish_actions')</p><p>));</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2516598980" id="dsq-comment-2516598980">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2516598980">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-16</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2516598980" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2516598980" class="dsq-comment-text">
	                                <p>Hi Mihail!</p><p>Hmm, I'm not sure. I would verify that you're sending the right scopes when you redirect to FB. It's possible you're not asking for any scopes, so you're *only* getting back the name + id. Btw, is the id literally '#'? That definitely seems weird.</p><p>It's possible that the old SDK finally doesn't work with the Facebook graph API, but I haven't heard of any other issues (yet).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2513490239" id="dsq-comment-2513490239">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_fvhM6qCQNy/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/19657/3705/avatar92.jpg?1467706588">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2513490239">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-14</span>
	                            <span class="dsq-commenter-name">Mihail</span>
	                        </div>

	                        <div id="dsq-comment-message-2513490239" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2513490239" class="dsq-comment-text">
	                                <p>Got stuck with the following:<br>$json = $facebook-&gt;api('/me');<br>var_dump($json);die();</p><p>On clicking 'Login with FB' returns only <br>array (size=2)<br>    'name' =&gt; string '{My Name}' (length=14)<br>    'id' =&gt; string '#' (length=17)</p><p>No e-mail or other data.</p><p>Is it a problem connected to the old SDK or smth else?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_facebook2';var disqus_url = 'https://knpuniversity.com/screencast/oauth/facebook2';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="javascript-implicit-google-plus#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/oauth/facebook2" addthis:title="OAuth2 in 8 Steps">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"oauth","courseIsOwned":false,"chapter":"Facebook: Using the API, Logging in and Failure","chapterNumber":7,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'OAuth2 in 8 Steps';
        Core.courseId = 44
        Core.courseIsOwned = false;
        Core.courseSlug = 'oauth';
                    Core.chapterTitle = 'Facebook: Using the API, Logging in and Failure';
            Core.chapterNumber = 7;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'facebook2';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":475,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
