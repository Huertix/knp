<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Authorization Code: Saving the Token &amp; Handling Failures > OAuth2 in 8 Steps | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 20780
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: User\x20Login\x20with\x20OAuth <i class="fa fa-play"></i>',
            'url': '/screencast/oauth/logging-in#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="OAuth2: that mystical beast that you kind of understand and occasionally
wrestle to integrate with some social media site.

Time to master OAuth2... and why not do it by building a real app with
farmers, chickens and real-life providers like Facebook and Google Plus.
We&#039;ll show you how OAuth really works while looking at how OAuth will
feel by using SDK&#039;s and other tools that give you shortcuts.

And like always, we&#039;ll go directly at the ugly details, like token expiration
and having a user deny access to your application. Here&#039;s what you&#039;ll
be learning:

* 3 main OAuth grant types: client credentials, authorization code and implicit;
* The exact flow behind getting your application authorized, exchanging
  an authorization code for a token, and using the token;
* Authentication (single sign-on) using OAuth;
* Handling expired tokens;
* Using refresh tokens;
* Integrating and authentication with Facebook;
* OAuth integration with Google+;
* What to look out for with security and how you can tighten things.
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Authorization Code: Saving the Token &amp; Handling Failures">
<meta property="og:description" content="OAuth2: that mystical beast that you kind of understand and occasionally
wrestle to integrate with some social media site.

Time to master OAuth2">
<meta property="og:url" content="http://knpuniversity.com/screencast/oauth/authorization-code2">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/oauth:1e115c422acb5c00225bfbab187b202cb86a0cb7/oauth.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="authorization-code2#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        4.
                            Authorization Code: Saving the T...
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">OAuth2 in 8 Steps</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="intro" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Serious OAuth in 8 Steps
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:43</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="client-credentials" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        Client Credentials
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 8:55</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="authorization-code" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        Authorization Code Grant Type
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 10:22</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="authorization-code2" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Authorization Code: Saving the Token &amp; Handling Failures
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 10:37</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="logging-in" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        User Login with OAuth
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:01</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="facebook" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        OAuth with Facebook
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 11:28</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="facebook2" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Facebook: Using the API, Logging in and Failure
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 10:05</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="javascript-implicit-google-plus" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Implicit Grant Type with Google+
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 9:45</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="implicit2" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Finishing the Login Callback
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:03</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="refresh-token" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        Using Refresh Tokens
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:08</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="security" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Security
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 10:10</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/oauth" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Authorization Code: Saving the Token &amp; Handling Failures</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>OAuth2 in 8 Steps Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $12.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="logging-in#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="authorization-code2#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="authorization-code2#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script script-content">
                                                                                        <a href="https://github.com/knpuniversity/oauth/edit/master/knpu/authorization-code2.rst" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    
  <div class="section" id="authorization-code-saving-the-token-handling-failures">
<h1>Authorization Code: Saving the Token &amp; Handling Failures<a class="headerlink" href="authorization-code2#authorization-code-saving-the-token-handling-failures" title="Permalink to this headline">¶</a></h1>
<p>What if we want to make other API requests on behalf of Brent later? Where
should we store the access token?</p>
<div class="section" id="saving-the-access-token-somewhere">
<h2>Saving the Access Token Somewhere<a class="headerlink" href="authorization-code2#saving-the-access-token-somewhere" title="Permalink to this headline">¶</a></h2>
<p>Some access tokens last an hour or two, and are well suited for storing in the
session. Others are long-term tokens, for example facebook provides a 60-day token,
and these make more sense to store in a database. Either way, storing
the token will free us from having to ask the user to authorize again.</p>
<p>In our app, we&#8217;re going to store it in the database:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/OAuth2Demo/Client/Controllers/CoopOAuthController.php</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">receiveAuthorizationCode</span><span class="p">(</span><span class="nx">Application</span> <span class="nv">$app</span><span class="p">,</span> <span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
    <span class="nv">$meData</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">(),</span> <span class="k">true</span><span class="p">);</span>

    <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getLoggedInUser</span><span class="p">();</span>
    <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopAccessToken</span> <span class="o">=</span> <span class="nv">$accessToken</span><span class="p">;</span>
    <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopUserId</span> <span class="o">=</span> <span class="nv">$meData</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">];</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">saveUser</span><span class="p">(</span><span class="nv">$user</span><span class="p">);</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This code is specific to my app, but the end result is that I&#8217;ve updated
the <tt class="docutils literal"><span class="pre">coopAccessToken</span></tt> column on the user table for the currently-authenticated
user. I&#8217;m also saving the <tt class="docutils literal"><span class="pre">coopUserId</span></tt>, which we&#8217;ll need since most API
calls have the user&#8217;s ID in the URI.</p>
<div class="section" id="recording-the-expires-time">
<h3>Recording the Expires Time<a class="headerlink" href="authorization-code2#recording-the-expires-time" title="Permalink to this headline">¶</a></h3>
<p>We can also store the time when the token will expire. I&#8217;ll create a <tt class="docutils literal"><span class="pre">DateTime</span></tt>
object that represents the expiration time. We can check this
later before trying to make API requests. If the token is expired, we&#8217;ll
need to send the user through the authorization process again:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">receiveAuthorizationCode</span><span class="p">(</span><span class="nx">Application</span> <span class="nv">$app</span><span class="p">,</span> <span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
    <span class="nv">$expiresIn</span> <span class="o">=</span> <span class="nv">$responseArr</span><span class="p">[</span><span class="s1">&#39;expires_in&#39;</span><span class="p">];</span>
    <span class="nv">$expiresAt</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">\DateTime</span><span class="p">(</span><span class="s1">&#39;+&#39;</span><span class="o">.</span><span class="nv">$expiresIn</span><span class="o">.</span><span class="s1">&#39; seconds&#39;</span><span class="p">);</span>
    <span class="c1">// ...</span>

    <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getLoggedInUser</span><span class="p">();</span>
    <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopAccessToken</span> <span class="o">=</span> <span class="nv">$accessToken</span><span class="p">;</span>
    <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopUserId</span> <span class="o">=</span> <span class="nv">$meData</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">];</span>
    <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopAccessExpiresAt</span> <span class="o">=</span> <span class="nv">$expiresAt</span><span class="p">;</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">saveUser</span><span class="p">(</span><span class="nv">$user</span><span class="p">);</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Again, the code here is special to my app, but the end result is just to
update a column in the database for the current user. When we try it, it
runs and hits our <tt class="docutils literal"><span class="pre">die</span></tt> statement. But if you go to the homepage, the
user drop-down shows us that the COOP user id was saved! Eggcellent...</p>
</div>
</div>
<div class="section" id="when-authorization-fails">
<h2>When Authorization Fails<a class="headerlink" href="authorization-code2#when-authorization-fails" title="Permalink to this headline">¶</a></h2>
<p>But what if the user declines to authorize our app? If this happens, an OAuth server will
redirect the user back to our <tt class="docutils literal"><span class="pre">redirect_uri</span></tt>. If we start from the homepage
again but deny access on COOP, we can see this. But this time, the page explodes
because our request to <tt class="docutils literal"><span class="pre">/token</span></tt> is <em>not</em> returning an access token. In
fact, COOP hasn&#8217;t included a <tt class="docutils literal"><span class="pre">code</span></tt> query parameter in the URL on the
redirect.</p>
<p>This is what a canceled authorization looks like: no authorization code.</p>
<p>Unfortunately, we can&#8217;t just assume that the user authorized our application.
As we&#8217;ve seen when this happens, the <tt class="docutils literal"><span class="pre">code</span></tt> query parameter will be missing,
but the OAuth server should include a few extra query parameters explaining what
went wrong. These are commonly called <tt class="docutils literal"><span class="pre">error</span></tt> and <tt class="docutils literal"><span class="pre">error_description</span></tt>. Let&#8217;s
grab these and pass them into a template I&#8217;ve already prepared:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">receiveAuthorizationCode</span><span class="p">(</span><span class="nx">Application</span> <span class="nv">$app</span><span class="p">,</span> <span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// equivalent to $_GET[&#39;code&#39;]</span>
    <span class="nv">$code</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;code&#39;</span><span class="p">);</span>

    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$code</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$error</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;error&#39;</span><span class="p">);</span>
        <span class="nv">$errorDescription</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;error_description&#39;</span><span class="p">);</span>

        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;failed_authorization.twig&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
            <span class="s1">&#39;response&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
                <span class="s1">&#39;error&#39;</span> <span class="o">=&gt;</span> <span class="nv">$error</span><span class="p">,</span>
                <span class="s1">&#39;error_description&#39;</span> <span class="o">=&gt;</span> <span class="nv">$errorDescription</span>
            <span class="p">)</span>
        <span class="p">));</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>When we try the flow again, we see a nicer message. You can really do whatever
you want in your application, just make sure you&#8217;re handling the possibility
that the user will decline your app&#8217;s request.</p>
<p>These errors should be documented by the OAuth server, but the standard set
includes &#8220;temporarily_unavailable&#8221;, &#8220;server_error&#8221;, and &#8220;access_denied&#8221;.</p>
<div class="section" id="when-fetching-the-access-token-fails">
<h3>When Fetching the Access Token Fails<a class="headerlink" href="authorization-code2#when-fetching-the-access-token-fails" title="Permalink to this headline">¶</a></h3>
<p>There&#8217;s one other spot where things can fail: when requesting out to <tt class="docutils literal"><span class="pre">/token</span></tt>.
What if the response doesn&#8217;t have an <tt class="docutils literal"><span class="pre">access_token</span></tt> field? Under normal
circumstances, this really shouldn&#8217;t happen, but let&#8217;s render a different
error template in case it does. Don&#8217;t worry about the variables I&#8217;m passing
into the template, I&#8217;m just trying to pass enough information so that we
can see what the problem was:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">receiveAuthorizationCode</span><span class="p">(</span><span class="nx">Application</span> <span class="nv">$app</span><span class="p">,</span> <span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
    <span class="nv">$request</span> <span class="o">=</span> <span class="nv">$http</span><span class="o">-&gt;</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;/token&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
        <span class="c1">// ...</span>
    <span class="p">));</span>

    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>
    <span class="nv">$responseBody</span> <span class="o">=</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
    <span class="nv">$responseArr</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$responseBody</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>

    <span class="c1">// if there is no access_token, we have a problem!!!</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$responseArr</span><span class="p">[</span><span class="s1">&#39;access_token&#39;</span><span class="p">]))</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;failed_token_request.twig&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
            <span class="s1">&#39;response&#39;</span> <span class="o">=&gt;</span> <span class="nv">$responseArr</span> <span class="o">?</span> <span class="nv">$responseArr</span> <span class="o">:</span> <span class="nv">$response</span>
        <span class="p">));</span>
    <span class="p">}</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Try the whole cycle again, but approve the app this time. It works the first
time of course. But if you refresh, you&#8217;ll see this error in action. The
code parameter exists, but it&#8217;s expired. So, the request to <tt class="docutils literal"><span class="pre">/token</span></tt> fails.</p>
</div>
</div>
<div class="section" id="redirecting-after-success">
<h2>Redirecting after Success<a class="headerlink" href="authorization-code2#redirecting-after-success" title="Permalink to this headline">¶</a></h2>
<p>Until now, we&#8217;ve had an ugly <tt class="docutils literal"><span class="pre">die</span></tt> statement at the bottom of the code
that handles the OAuth redirect. What you&#8217;ll actually want to do here is
redirect to some other page. Our work is done for now, so we want to help
the user to continue on our site:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">receiveAuthorizationCode</span><span class="p">(</span><span class="nx">Application</span> <span class="nv">$app</span><span class="p">,</span> <span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="c1">// redirect back to the homepage</span>
    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">generateUrl</span><span class="p">(</span><span class="s1">&#39;home&#39;</span><span class="p">));</span>
<span class="p">}</span>
</pre></div>
</div>
<p>In our application, this code simply redirects us to the homepage. And just
like that, we&#8217;re done! This is the authorization grant type, which has 2
distinct steps to it:</p>
<ol class="arabic simple">
<li>First, redirect the user to the OAuth server using its <tt class="docutils literal"><span class="pre">/authorize</span></tt>
endpoint, your application&#8217;s <tt class="docutils literal"><span class="pre">client_id</span></tt>, a <tt class="docutils literal"><span class="pre">redirect_uri</span></tt> and the
scopes you want permission for. The URL and how the parameters look may
be different on other OAuth servers, but the idea will be the same.</li>
<li>After authorizing our app, the OAuth server redirects back to a URL on
our site with a <tt class="docutils literal"><span class="pre">code</span></tt> query parameter. We can use this, along with our
<tt class="docutils literal"><span class="pre">client_id</span></tt> and <tt class="docutils literal"><span class="pre">client_secret</span></tt> to make an API request to the <tt class="docutils literal"><span class="pre">/token</span></tt>
endpoint. Now, we have an access token.</li>
</ol>
<p>Let&#8217;s finally use it to count some eggs!</p>
</div>
<div class="section" id="couting-eggs">
<h2>Couting Eggs<a class="headerlink" href="authorization-code2#couting-eggs" title="Permalink to this headline">¶</a></h2>
<p>On the homepage, we still have the &#8220;Authorize&#8221; button. But now that we have
an access token for the user, we really don&#8217;t need this anymore. The template
that displays this page is at <tt class="docutils literal"><span class="pre">views/dashboard.twig</span></tt>, and I&#8217;m already passing
a <tt class="docutils literal"><span class="pre">user</span></tt> variable here, which is the currently-authenticated user object.
Let&#8217;s hide the &#8220;Authorize&#8221; link if the user has a <tt class="docutils literal"><span class="pre">coopUserId</span></tt> stored in
the database:</p>
<div class="highlight-html+jinja"><div class="highlight"><pre><span class="c">{# views/dashboard.twig #}</span>
<span class="c">{# ... #}</span>

<span class="cp">{%</span> <span class="k">if</span> <span class="nv">user.coopUserId</span> <span class="cp">%}</span>

<span class="cp">{%</span> <span class="k">else</span> <span class="cp">%}</span>
    <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;btn btn-primary btn-lg&quot;</span> <span class="na">href=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">path</span><span class="o">(</span><span class="s1">&#39;coop_authorize_start&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="s">&quot;</span><span class="nt">&gt;</span>Authorize<span class="nt">&lt;/a&gt;</span>
<span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span>
</pre></div>
</div>
<p>If we <em>do</em> have a <tt class="docutils literal"><span class="pre">coopUserId</span></tt>, let&#8217;s add a link the user can click that
will count their daily eggs. Don&#8217;t worry if you&#8217;re not familiar with the
code here, we&#8217;re just generating a URL to a new page that I&#8217;ve already setup:</p>
<div class="highlight-html+jinja"><div class="highlight"><pre><span class="c">{# views/dashboard.twig #}</span>
<span class="c">{# ... #}</span>

<span class="cp">{%</span> <span class="k">if</span> <span class="nv">user.coopUserId</span> <span class="cp">%}</span>
    <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;btn btn-primary btn-lg&quot;</span> <span class="na">href=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">path</span><span class="o">(</span><span class="s1">&#39;count_eggs&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="s">&quot;</span><span class="nt">&gt;</span>Count Eggs<span class="nt">&lt;/a&gt;</span>
<span class="cp">{%</span> <span class="k">else</span> <span class="cp">%}</span>
    <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;btn btn-primary btn-lg&quot;</span> <span class="na">href=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">path</span><span class="o">(</span><span class="s1">&#39;coop_authorize_start&#39;</span><span class="o">)</span> <span class="cp">}}</span><span class="s">&quot;</span><span class="nt">&gt;</span>Authorize<span class="nt">&lt;/a&gt;</span>
<span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span>
</pre></div>
</div>
<p>When we refresh, we see the new link. Clicking it gives us another todo message.
Open up <tt class="docutils literal"><span class="pre">src/OAuth2Demo/Client/Controllers/CountEggs.php</span></tt>, which is the
code behind this new page.</p>
<div class="section" id="making-the-eggs-count-api-request">
<h3>Making the eggs-count API Request<a class="headerlink" href="authorization-code2#making-the-eggs-count-api-request" title="Permalink to this headline">¶</a></h3>
<p>Start by copying the <tt class="docutils literal"><span class="pre">/api/me</span></tt> code from <tt class="docutils literal"><span class="pre">CoopOAuthController</span></tt>, and changing
the method from <tt class="docutils literal"><span class="pre">get</span></tt> to <tt class="docutils literal"><span class="pre">post</span></tt>, since the <tt class="docutils literal"><span class="pre">eggs-count</span></tt> endpoint requires
POST:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/OAuth2Demo/Client/Controllers/CountEggs.php</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">CountEggs</span> <span class="k">extends</span> <span class="nx">BaseController</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">countEggs</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$http</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Client</span><span class="p">(</span><span class="s1">&#39;http://coop.apps.knpuniversity.com&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
            <span class="s1">&#39;request.options&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
                <span class="s1">&#39;exceptions&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
            <span class="p">)</span>
        <span class="p">));</span>

        <span class="nv">$request</span> <span class="o">=</span> <span class="nv">$http</span><span class="o">-&gt;</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;/api/me&#39;</span><span class="p">);</span>
        <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">addHeader</span><span class="p">(</span><span class="s1">&#39;Authorization&#39;</span><span class="p">,</span> <span class="s1">&#39;Bearer &#39;</span><span class="o">.</span><span class="nv">$accessToken</span><span class="p">);</span>
        <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>
        <span class="nv">$meData</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">(),</span> <span class="k">true</span><span class="p">);</span>

        <span class="k">die</span><span class="p">(</span><span class="s1">&#39;Implement this in CountEggs::countEggs&#39;</span><span class="p">);</span>

        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">generateUrl</span><span class="p">(</span><span class="s1">&#39;home&#39;</span><span class="p">));</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The endpoint we want to hit now is <tt class="docutils literal"><span class="pre">/api/USER_ID/eggs-count</span></tt>. Fortunately,
we&#8217;ve already saved the COOP user id and access token for the currently logged-in
user to the database. Get that data by using our app&#8217;s <tt class="docutils literal"><span class="pre">$this-&gt;getLoggedInUser()</span></tt>
method and update the URL:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">countEggs</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getLoggedInUser</span><span class="p">();</span>

    <span class="nv">$http</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Client</span><span class="p">(</span><span class="s1">&#39;http://coop.apps.knpuniversity.com&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">&#39;request.options&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
            <span class="s1">&#39;exceptions&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
        <span class="p">)</span>
    <span class="p">));</span>

    <span class="nv">$request</span> <span class="o">=</span> <span class="nv">$http</span><span class="o">-&gt;</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;/api/&#39;</span><span class="o">.</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopUserId</span><span class="o">.</span><span class="s1">&#39;/eggs-count&#39;</span><span class="p">);</span>
    <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">addHeader</span><span class="p">(</span><span class="s1">&#39;Authorization&#39;</span><span class="p">,</span> <span class="s1">&#39;Bearer &#39;</span><span class="o">.</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopAccessToken</span><span class="p">);</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>I&#8217;ll add in some debug code so we can see if this is working:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">countEggs</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="nv">$request</span> <span class="o">=</span> <span class="nv">$http</span><span class="o">-&gt;</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;/api/&#39;</span><span class="o">.</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopUserId</span><span class="o">.</span><span class="s1">&#39;/eggs-count&#39;</span><span class="p">);</span>
    <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">addHeader</span><span class="p">(</span><span class="s1">&#39;Authorization&#39;</span><span class="p">,</span> <span class="s1">&#39;Bearer &#39;</span><span class="o">.</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopAccessToken</span><span class="p">);</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>
    <span class="k">echo</span> <span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">(</span><span class="k">true</span><span class="p">));</span><span class="k">die</span><span class="p">;</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>When we refresh, you should see a nice JSON response. Yea, we&#8217;re counting
eggs! That&#8217;ll show Farmer Scott!</p>
<p>Since the purpose of TopCluck is to keep track of how many eggs each
farmer has collected each day, let&#8217;s save the new count to the database.
Like before, I&#8217;ve already done all the hard work, so that we can focus on
just the OAuth pieces. Just call <tt class="docutils literal"><span class="pre">setTodaysEggCountForUser</span></tt> and pass it
the current user and the egg count. While we&#8217;re here, we can remove the <tt class="docutils literal"><span class="pre">die</span></tt>
statement and redirect the user back to the homepage once we&#8217;re done:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">countEggs</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>
    <span class="nv">$countEggsData</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">(),</span> <span class="k">true</span><span class="p">);</span>

    <span class="nv">$eggCount</span> <span class="o">=</span> <span class="nv">$countEggsData</span><span class="p">[</span><span class="s1">&#39;data&#39;</span><span class="p">];</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setTodaysEggCountForUser</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getLoggedInUser</span><span class="p">(),</span> <span class="nv">$eggCount</span><span class="p">);</span>

    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">generateUrl</span><span class="p">(</span><span class="s1">&#39;home&#39;</span><span class="p">));</span>
<span class="p">}</span>
</pre></div>
</div>
<p>When we refresh, we should get redirected back to the homepage. But on the
right, Farmer Brent&#8217;s egg count isn&#8217;t going up. Let&#8217;s go to COOP and
collect a few more eggs manually. Back on FCL, if we count our eggs again,
we get the updated count. Sweet!</p>
</div>
<div class="section" id="all-the-things-that-can-go-wrong">
<h3>All the Things that can Go Wrong<a class="headerlink" href="authorization-code2#all-the-things-that-can-go-wrong" title="Permalink to this headline">¶</a></h3>
<p>The &#8220;Count Eggs&#8221; page we created works great, but we&#8217;re not handling any
of the things that might go wrong. First, we&#8217;re hiding its link, but what
if a user somehow ends up on the page without a <tt class="docutils literal"><span class="pre">coopUserId</span></tt> or <tt class="docutils literal"><span class="pre">coopAccessToken</span></tt>?
Let&#8217;s code for this case:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">countEggs</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getLoggedInUser</span><span class="p">();</span>

    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopAccessToken</span> <span class="o">||</span> <span class="o">!</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopUserId</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="nx">\Exception</span><span class="p">(</span><span class="s1">&#39;Somehow you got here, but without a valid COOP access token! Re-authorize!&#39;</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>I&#8217;m throwing an exception message, but we could also handle this differently,
like by redirecting the user to the &#8220;Authorize&#8221; page to start the OAuth flow.</p>
<p>Another thing we can check for is whether or not the token has expired. This
is possible because we stored the expiration data in the database. I&#8217;ve created
an easy helper method to check for this. If this happens, let&#8217;s redirect
the user to re-authorize, just like if they had clicked the &#8220;Authorize&#8221; link:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">countEggs</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getLoggedInUser</span><span class="p">();</span>

    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopAccessToken</span> <span class="o">||</span> <span class="o">!</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopUserId</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="nx">\Exception</span><span class="p">(</span><span class="s1">&#39;Somehow you got here, but without a valid COOP access token! Re-authorize!&#39;</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">hasCoopAccessTokenExpired</span><span class="p">())</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">generateUrl</span><span class="p">(</span><span class="s1">&#39;coop_authorize_start&#39;</span><span class="p">));</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Finally, what if the API request itself fails? A simple way to handle this might look
like this:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">countEggs</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="nv">$request</span> <span class="o">=</span> <span class="nv">$http</span><span class="o">-&gt;</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;/api/&#39;</span><span class="o">.</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopUserId</span><span class="o">.</span><span class="s1">&#39;/eggs-count&#39;</span><span class="p">);</span>
    <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">addHeader</span><span class="p">(</span><span class="s1">&#39;Authorization&#39;</span><span class="p">,</span> <span class="s1">&#39;Bearer &#39;</span><span class="o">.</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">coopAccessToken</span><span class="p">);</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="na">isError</span><span class="p">())</span> <span class="p">{</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="nx">\Exception</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">(</span><span class="k">true</span><span class="p">));</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Of course, you may want to do something more sophisticated. The response could
also have some error information on it, which you can play around with. For OAuth,
this is important because the call <em>may</em> have failed because the <tt class="docutils literal"><span class="pre">access_token</span></tt>
expired. What, I thought we just checked for that? Well, in the real world,
there&#8217;s no guarantee that the token won&#8217;t expire before its scheduled time.
Plus, the user may have decided to revoke your token &#8211; what a bully. Be aware,
and handle accordingly. Once again, the OAuth Server should provide information on the
error in the &#8220;error&#8221; and &#8220;error_description&#8221; querystring parameters.</p>
<p>You&#8217;re now dangerous, so lets move on to let our farmers actualy log into
FCL via COOP.</p>
</div>
</div>
</div>


    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_authorization-code2';var disqus_url = 'https://knpuniversity.com/screencast/oauth/authorization-code2';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="logging-in#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/oauth/authorization-code2" addthis:title="OAuth2 in 8 Steps">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"oauth","courseIsOwned":false,"chapter":"Authorization Code: Saving the Token & Handling Failures","chapterNumber":4,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'OAuth2 in 8 Steps';
        Core.courseId = 44
        Core.courseIsOwned = false;
        Core.courseSlug = 'oauth';
                    Core.chapterTitle = 'Authorization Code: Saving the Token &amp; Handling Failures';
            Core.chapterNumber = 4;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'authorization-code2';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":289,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
