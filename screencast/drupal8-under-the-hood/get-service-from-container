<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>How to Get a Service in the Controller > Drupal 8: Under the Hood | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 39478
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: The\x20Magic\x20Behind\x20Shortcuts\x20Methods\x20is\x3A\x20Services <i class="fa fa-play"></i>',
            'url': '/screencast/drupal8-under-the-hood/shortcuts-use-services#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="Drupal 8 comes with a shiny new objecy-oriented base, and a lot of hype surrounding
it. But personally, I *love* it. So in this screencast, I&#039;ll take you - Drupal 7
dev - through all of the new concepts, paradigms, terms and patterns in Drupal 8.

We&#039;ll go beyond how to *do* something and explore how things *actually work*
in D8. What are routes? How can I use events to tap into core parts of the system?
What&#039;s all this dependency injection and service stuff? What&#039;s this Drupal Console
thing I keep hearing about?

If you&#039;re serious about mastering D8, then let&#039;s go!
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="How to Get a Service in the Controller">
<meta property="og:description" content="Drupal 8 comes with a shiny new objecy-oriented base, and a lot of hype surrounding
it. But personally, I *love* it">
<meta property="og:url" content="http://knpuniversity.com/screencast/drupal8-under-the-hood/get-service-from-container">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/drupal8-under-the-hood:4433a5e44f1611e410016f954b1dfa6d1caca06f/drupal-tutorial.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="get-service-from-container#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        10.
                            How to Get a Service in the Cont...
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">Drupal 8: Under the Hood</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="installation-web-server" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Installation, Composer and Git!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:48</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="modules-routes-controllers" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        Modules, Routes and Controllers
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:24</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="drupal-console-route-cache" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        The Drupal Console &amp; Route Cache
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:51</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="routing-wildcards" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Routing Wildcards
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:56</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="debugging" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Debugging!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:18</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="webprofiler" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        The webprofiler
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:09</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="what-is-the-service-container" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        What is the Service Container?
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:53</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="create-service" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Create a Service
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:04</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="configure-service" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Configuring a New Service
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:44</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="get-service-from-container" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        How to Get a Service in the Controller
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:45</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="shortcuts-use-services" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        The Magic Behind Shortcuts Methods is: Services
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:24</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="service-arguments" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                12.
                        Service Arguments
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:15</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="config-parameters" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                13.
                        Configuration Parameters
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:16</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="override-core-drupal" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                14.
                        Overriding Core Drupal
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:56</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="events-versus-hooks" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                15.
                        Drupal Events versus Hooks
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:26</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="event-subscriber-tags" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                16.
                        Event Subscribers and Dependency Injection Tags
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:25</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="event-arguments-request" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                17.
                        Event Arguments and the Request
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="render-array-events" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                18.
                        The Render Array... and Event Listeners
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:42</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/drupal8-under-the-hood" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">How to Get a Service in the Controller</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>Drupal 8: Under the Hood Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $12.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="shortcuts-use-services#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="get-service-from-container#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="get-service-from-container#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script markdown-content">
                                                                                        <a href="https://github.com/knpuniversity/drupal-under-the-hood/edit/master/knpu/get-service-from-container.md" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    <p>There's a <code>dino_roar.roar_generator</code> service in the container and gosh darnit, I
want to use this in my controller!</p>
<h2 id="the-controllerbase-class">The ControllerBase Class <a class="headerlink" href="get-service-from-container#the-controllerbase-class" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>First, notice that <code>RoarController</code> is <em>not</em> extending anything. That's cool: your
controller does <em>not</em> need to extend anything: Drupal doesn't care. That being said,
most of the time a controller will extend a class called <code>ControllerBase</code>. Add it
and hit tab so the <code>use</code> statement is added above the class:</p>
<p><div class="code-block-wrapper" data-code-block-guid="741f86bcc8">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-36" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            36 lines <span class="meta-divider"></span> <span title="modules/dino_roar/src/Controller/RoarController.php">modules/dino_roar/src/Controller/RoarController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-4" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 4
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="5"></td>
            <td class="blob-code"><span class="hljs-keyword">use</span> <span class="hljs-title">Drupal</span>\<span class="hljs-title">Core</span>\<span class="hljs-title">Controller</span>\<span class="hljs-title">ControllerBase</span>;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="6-9" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 6 - 9
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="10"></td>
            <td class="blob-code"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RoarController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ControllerBase</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="11"></td>
            <td class="blob-code"></span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="12-34" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 12 - 34
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="35"></td>
            <td class="blob-code">}</td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>This has a lot of cool shortcut methods - we'll look at some soon. But more importantly,
it gives us a new super-power: the ability to get services out of the container. </p>
<h2 id="override-create">Override create() <a class="headerlink" href="get-service-from-container#override-create" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>I'll use the shortcut <a href="../phpstorm/doctrine">command+n</a>,
select "Override" from the menu and override the <code>create</code> function that lives in
the base class:</p>
<p><div class="code-block-wrapper" data-code-block-guid="7a339baa67">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-36" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            36 lines <span class="meta-divider"></span> <span title="modules/dino_roar/src/Controller/RoarController.php">modules/dino_roar/src/Controller/RoarController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-6" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 6
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="7"></td>
            <td class="blob-code"><span class="hljs-keyword">use</span> <span class="hljs-title">Symfony</span>\<span class="hljs-title">Component</span>\<span class="hljs-title">DependencyInjection</span>\<span class="hljs-title">ContainerInterface</span>;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="8-9" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 8 - 9
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="10"></td>
            <td class="blob-code"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RoarController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ControllerBase</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="11"></td>
            <td class="blob-code"></span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="12-21" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 12 - 21
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="22"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">create</span><span class="hljs-params">(ContainerInterface $container)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="23"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="24-26" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 24 - 26
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="27"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="28-34" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 28 - 34
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="35"></td>
            <td class="blob-code">}</td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>You don't need to use PhpStorm to override this, it's just fast and fancy. It also
added the <code>use</code> statement for the <code>ContainerInterface</code>. When your controller needs
to access services from the container, this is step 1.</p>
<p>Before we had this, Drupal instantiated our controller automatically. But now, it
will call <em>this</em> function and expect <em>us</em> to create a new <code>RoarController</code> and return
it. And hey, it passes us the <code>$container</code>!!! There it is, finally! The container
is the <em>most important</em> object in Drupal... and guess what? It has only <em>one</em> important
method on it: <code>get()</code>. I bet you can guess what it does.</p>
<p>Create a <code>$roarGenerator</code> variable, set it to <code>$container-&gt;get('');</code> and pass it the name
of the service: <code>dino_roar.roar_generator</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="bd344bac29">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-36" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            36 lines <span class="meta-divider"></span> <span title="modules/dino_roar/src/Controller/RoarController.php">modules/dino_roar/src/Controller/RoarController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-21" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 21
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="22"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">create</span><span class="hljs-params">(ContainerInterface $container)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="23"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="24"></td>
            <td class="blob-code">        $roarGenerator = $container-&gt;get(<span class="hljs-string">'dino_roar.roar_generator'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="25-26" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 25 - 26
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="27"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="28-36" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 28 - 36
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Behind the scenes, Drupal will instantiate that object and give it to us. To create
the <code>RoarController</code>, <code>return new static();</code> and pass it <code>$roarGenerator</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="5b330fa21b">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-36" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            36 lines <span class="meta-divider"></span> <span title="modules/dino_roar/src/Controller/RoarController.php">modules/dino_roar/src/Controller/RoarController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-21" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 21
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="22"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">create</span><span class="hljs-params">(ContainerInterface $container)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="23"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="24"></td>
            <td class="blob-code">        $roarGenerator = $container-&gt;get(<span class="hljs-string">'dino_roar.roar_generator'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="25"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="26"></td>
            <td class="blob-code">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-keyword">static</span>($roarGenerator);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="27"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="28-36" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 28 - 36
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>This may look weird, but stay with me. The <code>new static</code> part says:</p>
<blockquote><p>Create a new instance of <code>RoarController</code> and return it, please".</p>
</blockquote>
<p>Again, manners are good for performance in D8.</p>
<h2 id="controller-construct-method">Controller __construct() Method <a class="headerlink" href="get-service-from-container#controller-construct-method" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Next, create a constructor: <code>public function __construct()</code>.When we instantiate
the controller, we're choosing to pass it <code>$roarGenerator</code>. So add that as an argument:</p>
<p><div class="code-block-wrapper" data-code-block-guid="88775ebef2">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-36" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            36 lines <span class="meta-divider"></span> <span title="modules/dino_roar/src/Controller/RoarController.php">modules/dino_roar/src/Controller/RoarController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-9" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 9
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="10"></td>
            <td class="blob-code"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RoarController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ControllerBase</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="11"></td>
            <td class="blob-code"></span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="12-16" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 12 - 16
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="17"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span><span class="hljs-params">(RoarGenerator $roarGenerator)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="18"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="19-19" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... line 19
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="20"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="21-34" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 21 - 34
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="35"></td>
            <td class="blob-code">}</td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>I'll even type-hint it with <code>RoarGenerator</code> to be super cool. Type-hinting is
optional, but it makes us best friends.</p>
<p>Finally, create a <code>private $roarGenerator</code> property and set it with
<code>$this-&gt;roarGenerator = $roarGenerator;</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="fc232b3d02">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-36" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            36 lines <span class="meta-divider"></span> <span title="modules/dino_roar/src/Controller/RoarController.php">modules/dino_roar/src/Controller/RoarController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-9" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 9
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="10"></td>
            <td class="blob-code"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RoarController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ControllerBase</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="11"></td>
            <td class="blob-code"></span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="12-14" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 12 - 14
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="15"></td>
            <td class="blob-code">    <span class="hljs-keyword">private</span> $roarGenerator;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="16"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="17"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span><span class="hljs-params">(RoarGenerator $roarGenerator)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="18"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="19"></td>
            <td class="blob-code">        <span class="hljs-keyword">$this</span>-&gt;roarGenerator = $roarGenerator;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="20"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="21-34" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 21 - 34
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="35"></td>
            <td class="blob-code">}</td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Ok, this was a <em>big</em> step. As soon as we added the <code>create()</code> function, it was now
<em>our</em> job to create a <code>new RoarController</code>. And of course, we can pass it whatever it
needs to its constructor - like objects or configuration. That's really handy since
we have access to the <code>$container</code> and can fetch out any service and pass it to
the new controller object.</p>
<p>In the <code>__construct</code> function, we don't use the <code>RoarGenerator</code> yet: we just set
it on a property. That saves it for use later. Then, 5, 10, 20 or 100 miliseconds
later when Drupal finally calls the <code>roar()</code> function, we know that the <code>roarGenerator</code>
property holds a <code>RoarGenerator</code> object.</p>
<p>Delete the <code>new RoarGenerator</code> line and instead use <code>$this-&gt;roarGenerator</code> directly:</p>
<p><div class="code-block-wrapper" data-code-block-guid="8d9af33fbd">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-36" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            36 lines <span class="meta-divider"></span> <span title="modules/dino_roar/src/Controller/RoarController.php">modules/dino_roar/src/Controller/RoarController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-28" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 28
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="29"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">roar</span><span class="hljs-params">($count)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="30"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="31"></td>
            <td class="blob-code">        $roar = <span class="hljs-keyword">$this</span>-&gt;roarGenerator-&gt;getRoar($count);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="32"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="33"></td>
            <td class="blob-code">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Response($roar);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="34"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="35-36" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 35 - 36
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Woh. Moment of truth: go back to the browser, change the URL and hit enter to reload
the page. OMG! It still works!</p>
<h2 id="it-s-dependency-injection">It's Dependency Injection! <a class="headerlink" href="get-service-from-container#it-s-dependency-injection" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>It is <em>ok</em> if this was confusing for you. This - by the way - is called dependency
injection. Buzzword! Actually, it's kind of a hard application of dependency injection.
I'll show you a simpler and more common example in a second. But once you wrap your
head around this pattern, you will be unstoppable.</p>
<h2 id="why-did-i-put-my-service-in-the-container">Why did I put my Service in the Container? <a class="headerlink" href="get-service-from-container#why-did-i-put-my-service-in-the-container" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Why did we go to all this trouble? After all, this only saved us <em>one</em> line in the
controller: the <code>new RoarGenerator()</code> line.</p>
<p>Two reasons, <em>big</em> reasons. First, I keep telling you the container is like an array
of all the useful objects in the system. Ok, that's <em>kind</em> of a lie. It's more like
an array of <em>potential</em> objects. The container doesn't instantiate a service until
<em>and unless</em> someone asks for it. So, until we actually hit the line that asks for
the <code>dino_roar.roar_generator</code> service, your app doesn't use the memory or CPUs needed
to create that.</p>
<p>For something big like Drupal, it means you can have a <em>ton</em> of services without
slowing down your app. If you don't use a service, it's not created.</p>
<p>And if <em>ten</em> places in your code ask for the <code>dino_roar.roar_generator</code> service,
it gives each of them the same <em>one</em> object. That's awesome: you might need a
<code>RoarGenerator</code> in 50 places but you don't want to waste memory creating 50 objects.
The container takes care of that for us: it only creates <em>one</em> object.</p>
<p>The second big benefit of registering a service in the container isn't obvious yet,
but I'll show that next. It deals with constructor arguments.</p>
<h2 id="fetch-another-service-a-logger">Fetch another Service: a Logger <a class="headerlink" href="get-service-from-container#fetch-another-service-a-logger" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Now that we have this pattern with the <code>create</code> function and <code>__construct</code>, we're
dangerous! We can grab <em>any</em> service from the container!</p>
<p>Go to the terminal and run <code>container:debug</code> and grep for <code>log</code>:</p>
<pre><code class="language-bash"><div class="line">drupal container:debug | grep log</div></code></pre>
<p>Interesting: there's a service called <code>logger.factory</code> that can be used to, um ya
know, log stuff. Let's see if we can log the ROOOOOAR message from the controller.</p>
<p>In <code>RoarController</code> add <code>$loggerFactory = $container-&gt;get('logger.factory');</code> and
pass that as the second constructor argument when creating <code>RoarController</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="6808e9a060">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-45" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            45 lines <span class="meta-divider"></span> <span title="modules/dino_roar/src/Controller/RoarController.php">modules/dino_roar/src/Controller/RoarController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-27" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 27
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="28"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">create</span><span class="hljs-params">(ContainerInterface $container)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="29"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="30"></td>
            <td class="blob-code">        $roarGenerator = $container-&gt;get(<span class="hljs-string">'dino_roar.roar_generator'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="31"></td>
            <td class="blob-code">        $loggerFactory = $container-&gt;get(<span class="hljs-string">'logger.factory'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="32"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="33"></td>
            <td class="blob-code">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-keyword">static</span>($roarGenerator, $loggerFactory);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="34"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="35-45" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 35 - 45
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<h3 id="type-hinting-core-services">Type-Hinting Core Services <a class="headerlink" href="get-service-from-container#type-hinting-core-services" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>The <code>container:debug</code> command tells us that this is an instance of <code>LoggerChannelFactory</code>.
Use that as the type-hint. In the autocomplete, it suggests <code>LoggerChannelFactory</code>
and <code>LoggerChannelFactoryInterface</code>. That's pretty common. Often, a class will implement
an interface with a similar name. Interfaces are a bit more hipster, and in practice,
you can type-hint the original class name or the interface if you want to look super
cool in front of co-workers.</p>
<p>Call the argument <code>$loggerFactory</code>. I'll use a PhpStorm shortcut called
<a href="../phpstorm/service-shortcuts#generating-constructor-properties">initialize fields</a>
to add that property and set it:</p>
<p><div class="code-block-wrapper" data-code-block-guid="08801984df">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-45" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            45 lines <span class="meta-divider"></span> <span title="modules/dino_roar/src/Controller/RoarController.php">modules/dino_roar/src/Controller/RoarController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-19" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 19
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="20"></td>
            <td class="blob-code">    <span class="hljs-keyword">private</span> $loggerFactory;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="21"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="22"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span><span class="hljs-params">(RoarGenerator $roarGenerator, LoggerChannelFactoryInterface $loggerFactory)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="23"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="24"></td>
            <td class="blob-code">        <span class="hljs-keyword">$this</span>-&gt;roarGenerator = $roarGenerator;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="25"></td>
            <td class="blob-code">        <span class="hljs-keyword">$this</span>-&gt;loggerFactory = $loggerFactory;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="26"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="27-45" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 27 - 45
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>If you want to dive into PhpStorm shortcuts, you should: we have a
<a href="../phpstorm/resume">full tutorial</a> on it.</p>
<p>Now in the <code>roar()</code> function, use that property! Add <code>$this-&gt;loggerFactory-&gt;get('')</code>: this
returns one specific <em>channel</em> - there's one called <code>default</code>. Finish with <code>-&gt;debug()</code>
and pass it <code>$roar</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="b7fd72cf2b">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-45" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            45 lines <span class="meta-divider"></span> <span title="modules/dino_roar/src/Controller/RoarController.php">modules/dino_roar/src/Controller/RoarController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-35" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 35
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="36"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">roar</span><span class="hljs-params">($count)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="37"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="38"></td>
            <td class="blob-code">        $roar = <span class="hljs-keyword">$this</span>-&gt;roarGenerator-&gt;getRoar($count);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="39"></td>
            <td class="blob-code">        <span class="hljs-keyword">$this</span>-&gt;loggerFactory-&gt;get(<span class="hljs-string">'default'</span>)</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="40"></td>
            <td class="blob-code">            -&gt;debug($roar);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="41-42" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 41 - 42
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="43"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="44-45" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 44 - 45
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Congrats: we're now using our <em>first</em> service from the container.</p>
<p>Refresh to try it! To check the logs, head to a page that has the main menu, click
"Reports", then go into "Recent Log Messages." There it is! </p>
<p>Not only did we add a service to the container, but we also used an existing one
in the controller. Considering how many services exist, that makes you very dangerous. </p>
<p>Oh, and if this seemed like a lot of work to you, you're in luck! The Drupal Console
has <em>many</em> code generation commands to help you build routes, controllers, services
and more.</p>

    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2737705377" id="dsq-comment-2737705377">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2737705377">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-18</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2737705377" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2737705377" class="dsq-comment-text">
	                                <p>Hey Kieran!</p><p>The static create() thing is tricky, and it's a total Drupal-ism - it's how they chose to give you access to the Container in controllers. I actually find it fairly difficult to explain - it's a very odd - and edge-case version of dependency injection :). But, that makes it all the more interesting!</p><p>But, first, you probably don't exactly see $container-&gt;get('...') in the roar() method in other tutorials, because - in Drupal 8 - you don't have access to the $container object in a random controller function. This is a "problem" in general with OO code - unless you "cheat" and use global/static variables, you simply don't have access to an object from within another object unless it is somehow passed to you as an argument (either as an argument to your controller or an argument to the __construct() function of your object).</p><p>The most important thing for testable and predictable code (because using global variables are very not predictable) is that you don't use global/static variables. If we take that as a truth ("I will not use static/globals"), everything that follows is a collection of strategies to get access to the objects/configuration that we need. *Usually*, we choose to pass our "dependencies" through the __construct() method. But technically speaking, that is just one strategy.</p><p>Most of the time in Symfony/Drupal, *we* are in control of *how* are objects are instantiated. For example, if you have a RoarGenerator class (like the one in this tutorial), we can control what arguments are passed to its __construct() method via the YAML file. This allows us to not use globals/static, but still get access to whatever we need (yay!).</p><p>But controllers are a special case for DI, because it is the *one* place in Drupal or Symfony where you do *not* control *how* your object is instantiated (the reasons for why that is true are not too important). Somewhere deep and dark, Drupal/Symfony creates your Controller object for you, and it passes *no* arguments to __construct(). Oh no! This puts us in a bad place: how can we get access to outside objects if we cannot control the arguments to our __construct() method? Basically, we can't! So, Drupal added a second option. They said, if your Controller class has a create() method, then instead of creating your Controller object with new __construct args (i.e. new RoarController()) - it will call the create() method, pass you the Container, and allow *you* to choose your __construct arguments. In short, this is a one-off strategy for allowing you to control how your Controller is instantiated. All other objects are controlled in this way via the YAML file.</p><p>Phew! Now, I don't know if that helped explain things or confused further :). And thanks for the note about the learning design - your point is well-understood. I like to downplay very technical terms to help shake the fear that sometimes becomes attached to ideas that are fundamentally *not* complex. However, I see your point :).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2736280011" id="dsq-comment-2736280011">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/kieran_mathieson/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/18504/8770/avatar92.jpg?1467747336">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2736280011">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-17</span>
	                            <span class="dsq-commenter-name">Kieran Mathieson</span>
	                        </div>

	                        <div id="dsq-comment-message-2736280011" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2736280011" class="dsq-comment-text">
	                                <p>Why make a static create() method? In other tutorials, lines like...</p><p>$roarGenerator = $container-&gt;get('dino_roar.roar_generator');</p><p>... would be in the roar() method of RoarController.</p><p>I'm guessing it has to do with testing? create() centralizes instantiation of services used in all the methods of RoarController (assuming programmers follow the standard of using create()). Makes it easier to identify the stub services (stub isn't the right name, forget the correct name) needed for testing. Just guessing, since I don't know what I'm talking about.</p><p>BTW, from a learning design PoV, I like the fact that you address emotional issues in this series, such as the noob fear induced by terms like dependency injection container. Can be tricky, though. It's easy for students to infer that anyone using the term dependency injection container is intentionally begin snooty. The inference will often be incorrect; that's just the way devs talk to each other. The inference can complicate the social dynamics of a dev team.</p><p>Kieran</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2411497441" id="dsq-comment-2411497441">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2411497441">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-12-15</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2411497441" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2411497441" class="dsq-comment-text">
	                                <p>I saw an issue that they were going to add this, I'm glad they did. It was actually added to 8.1, not 8.0 (it looks like they added it to 8.0 for a moment, then realized that adding a new feature breaks semver - great decision).</p><p>Anyways, for others reading this, yes! In 8.1, you'll be able to use $this-&gt;getLogger('main') to get the "main" channel logger from a controller that extends ControllerBase.</p><p>Thanks for the note!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2411337441" id="dsq-comment-2411337441">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/cilefen/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/18772/8041/avatar92.jpg?1475413419">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2411337441">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-12-15</span>
	                            <span class="dsq-commenter-name">Christopher McCafferty</span>
	                        </div>

	                        <div id="dsq-comment-message-2411337441" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2411337441" class="dsq-comment-text">
	                                <p>Since this video was made, the loggerFactory was added to ControllerBase.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_get-service-from-container';var disqus_url = 'https://knpuniversity.com/screencast/drupal8-under-the-hood/get-service-from-container';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="shortcuts-use-services#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/drupal8-under-the-hood/get-service-from-container" addthis:title="Drupal 8: Under the Hood">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"drupal8-under-the-hood","courseIsOwned":false,"chapter":"How to Get a Service in the Controller","chapterNumber":10,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Drupal 8: Under the Hood';
        Core.courseId = 71
        Core.courseIsOwned = false;
        Core.courseSlug = 'drupal8-under-the-hood';
                    Core.chapterTitle = 'How to Get a Service in the Controller';
            Core.chapterNumber = 10;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'get-service-from-container';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

</body>
</html>
