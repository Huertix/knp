<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>The Serializer: Swiss-Army Knife of APIs > RESTful APIs in the Real World Course 2 | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: true,
            courseChapterId: 38764
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: Serializer\x20Configuration\x20\x28SerializationContext\x29 <i class="fa fa-play"></i>',
            'url': '/screencast/rest-ep2/serializer-configuration#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="Making RESTful APIs is hard, really hard. There are a lot of concepts
to know - resources, representations, HTTP methods, status codes, etc.

[Course 1](http://knpuniversity.com/screencast/rest) got us really comfortable
with all the terminology. So in episode 2, we&#039;re attacking the *hard*
stuff:

* Using a serializer
* Token Authentication System (Silex&#039;s security system)
* Hypermedia versus media
* The HAL hypermedia type
* The HATEOAS PHP library
* The HAL Browser
* Embedding resources (versus adding links)
* Tricks with Behat for testing API&#039;s
* Pagination and filtering
* A lot of other pieces in between!

This stuff is not easy. But if you make it through, you&#039;ll be armed to
attack whatever API need you have. And for documenting your API, see
[Course 3](http://knpuniversity.com/screencast/rest-ep3)
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="The Serializer: Swiss-Army Knife of APIs">
<meta property="og:description" content="Making RESTful APIs is hard, really hard. There are a lot of concepts
to know - resources, representations, HTTP methods, status codes, etc">
<meta property="og:url" content="http://knpuniversity.com/screencast/rest-ep2/serializer">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/rest-ep2:3045e08e8fa65ec0d207e42cdf47bb2f02a3e490/rest2.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="serializer#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        1.
                            The Serializer: Swiss-Army Knife...
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">RESTful APIs in the Real World Course 2</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="serializer" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        The Serializer: Swiss-Army Knife of APIs
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:58</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="serializer-configuration" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        Serializer Configuration (SerializationContext)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:46</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="serializer-annotations" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        Serializer Annotations
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:59</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="requiring-authentication" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Requiring Authentication
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:32</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="authentication-via-token" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Authorization via a Token
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:13</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="securing-more-endpoints" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        Securing More Endpoints
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:05</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="authentication-error-format" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Authentication Error Format
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:08</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="centralizing-error-response-creation" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Centralizing Error Response Creation
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:25</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="creating-tokens-in-the-api" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Creating Token Resources in the API
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 10:14</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="reuse-consistency" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        Reuse and Consistency
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:22</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="token-validation" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Validate that Token Resource
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:51</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="battle-resource-feature" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                12.
                        New Battle Resource (the Scenario)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:06</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="battle-resource-new" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                13.
                        Start (Create) an Epic Battle (Resource)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:42</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="get-one-battle" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                14.
                        GET Your (One) Battle On
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="link-battle-programmer" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                15.
                        Battles and Programmer - Link them!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:42</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="hateoas-installation" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                16.
                        I &lt;3 HATEOAS Installation
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:22</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="hateoas-router" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                17.
                        HATEOAS Loves Routers
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:12</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="hateoas-linking" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                18.
                        Adding Real Links with HATEOAS
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:08</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="hypermedia-media" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                19.
                        Hypermedia vs. Media (Buzzwords!)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:50</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="embedded-resources" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                20.
                        We can Embed Resources Too
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:58</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="hal-browser" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                21.
                        Fun with the HAL Browser!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:40</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="hal-collection" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                22.
                        Collections: The HAL Way
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:25</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="link-all-the-resources" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                23.
                        Link to a Subordinate Resource!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:23</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="api-homepage" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                24.
                        A Homepage for your API?
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:10</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="pagination" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                25.
                        API Pagination Done Easily
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 8:48</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="filtering" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                26.
                        Filtering and HATEOAS (The Buzzword)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:40</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/rest-ep2" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">The Serializer: Swiss-Army Knife of APIs</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>RESTful APIs in the Real World Course 2 Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                        <div class="hidden alert alert-danger js-video-not-supported" style="margin-bottom: 10px;">
        <h4>Video not working?</h4>
        It looks like your browser may not support the H264 codec.
        If you're using Linux+Firefox, try a different browser or try
        installing the
        <code>gstreamer0.10-ffmpeg</code>
        <code>gstreamer0.10-plugins-good</code> packages.
        <br/><br/>
        Thanks! This saves us
        from needing to use Flash or encode videos in multiple formats. And that
        let's us get back to making more videos :). But as always, please feel
        free to <a href="../../contact">message us</a>.
    </div>

    <video id="js-video-player" class="video-js vjs-default-skin vjs-big-play-centered "
            controls preload="auto" width="auto" height="auto"
            poster="http://i.vimeocdn.com/video/536905244_960x600.jpg?r=pad">
        <source src="http://player.vimeo.com/external/140085840.hd.mp4?s=ac18a7425bb6907fa71a27714516ef7ffd64b857&amp;profile_id=113&amp;oauth2_token_id=308801954" type="video/mp4" data-res="HD" data-default="true" />
        <source src="http://player.vimeo.com/external/140085840.sd.mp4?s=8896a4b9cb0ef3b00ffd2adecd6496422550fdc5&amp;profile_id=112&amp;oauth2_token_id=308801954" type="video/mp4" data-res="SD" />
        <p class="vjs-no-js">
            To view this video please enable JavaScript, and consider upgrading to a web browser that
            <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
        </p>
    </video>


                            <div class="end-show js-post-play-wrapper" style="display: none;">
                                <p class="end-show-header">You're Killing it!</p>

                                <div class="text-center overlay-btn">
                                    <!-- This is filled in via JS -->
                                    <a href="serializer#" class="btn btn-lg btn-warning js-next-item-anchor"></a>
                                    <div class="js-all-finished-holder" style="display: none; color: #fff;">
                                        Another Tutorial down!<br/><br/>
                                                                                    <a href="../../tracks/rest" class="btn btn-lg btn-success">Back to the <i>REST</i> Track</a>
                                                                            </div>
                                </div>

                                <p class="end-show-link js-video-repeat"><a class="knp-color-white link-no-underline" href="serializer#">
                                    <i class="fa fa-repeat"></i> Watch again
                                </a></p>
                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="serializer-configuration#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="serializer#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="serializer#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (7)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script script-content">
                                                                                        <a href="https://github.com/knpuniversity/rest/edit/master/knpu/episode2/serializer.rst" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    
  <div class="section" id="the-serializer-swiss-army-knife-of-apis">
<h1>The Serializer: Swiss-Army Knife of APIs<a class="headerlink" href="serializer#the-serializer-swiss-army-knife-of-apis" title="Permalink to this headline">¶</a></h1>
<p>Hey guys! Welcome to episode 2 of our RESTFUL API&#8217;s in the real world series.
In episode 1 we covered a lot of the basics. Phew! And explained really important
confusing terms like representations, resources, idempotency, GET, POST, PUT,
PATCH and a lot of other things that really make it difficult to learn REST.
Because, really before that you had no idea what anybody was talking about.
At This point I hope that you feel like you have a nice base because we&#8217;re
going to take that base and start doing some interesting things like
talking about serializers, hypermedia HATEOAS, documentation and a ton more.</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">Hey, go download the starting code for this repository right on this page!</p>
</div>
<p>I&#8217;ve already started by downloading the code for Episode 2 onto my computer.
So I&#8217;m going to move over to the <tt class="docutils literal"><span class="pre">web/</span></tt> directory, which is the document
root for our project, and use the built-in PHP Web server to get things running:</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nb">cd</span> /path/to/downloaded/code
<span class="nb">cd </span>web
php -S localhost:8000
</pre></div>
</div>
<p>Let&#8217;s try that out in our browser... and there we go.</p>
<blockquote>
<div><a class="reference external" href="http://localhost:8000">http://localhost:8000</a></div></blockquote>
<p>You can login as <tt class="docutils literal"><span class="pre">ryan&#64;knplabs.com</span></tt> with password <tt class="docutils literal"><span class="pre">foo</span></tt> - very secure -
and see the web side of our site. There&#8217;s a web side of our site and an API
version of our site, which we created in Episode 1.</p>
<p>The project is pretty simple, but awesome, you create programmers, give them
a tag line, select from of our avatars and then battle a project. So we&#8217;ll
start a battle here, fight against &#8220;InstaFaceTweet&#8221;... some magic  happens,
and boom! Our happy coder has defeated the InstaFaceTweet project.</p>
<p>So from an API perspective, you can see that we have a number of resources:
we have programmers, we have projects and we also have battles. And they all
relate to each other, which will be really important for episode 2.</p>
<div class="section" id="what-we-ve-already-accomplished">
<h2>What We&#8217;ve Already Accomplished<a class="headerlink" href="serializer#what-we-ve-already-accomplished" title="Permalink to this headline">¶</a></h2>
<p>The API code all lives inside of the <tt class="docutils literal"><span class="pre">src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php</span></tt>
file. And in episode 1, we created endpoints for listing programmers, showing
a single programmer, updating a programmer and deleting one:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">ProgrammerController</span> <span class="k">extends</span> <span class="nx">BaseController</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">newAction</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// ...</span>
    <span class="p">}</span>

    <span class="c1">// other methods for updating, deleting etc</span>
<span class="p">}</span>
</pre></div>
</div>
<p>We also used Behat to make some nice scenarios for this:</p>
<div class="highlight-gherkin"><div class="highlight"><pre><span class="c"># features/api/programmer.feature</span><span class="nf"></span>
<span class="k">Feature:</span><span class="nf"> Programmer</span>
<span class="nf">  # ...</span>

<span class="nf">  </span><span class="k">Background:</span><span class="nf"></span>
<span class="k">    Given </span><span class="nf">the user &quot;</span><span class="s">weaverryan</span><span class="nf">&quot; exists</span>

<span class="nf">  </span><span class="k">Scenario:</span><span class="nf"> Create a programmer</span>
<span class="k">    Given </span><span class="nf">I have the payload:</span>
<span class="nf">      </span><span class="k">&quot;&quot;&quot;</span><span class="s"></span>
<span class="s">      {</span>
<span class="s">        &quot;nickname&quot;: &quot;ObjectOrienter&quot;,</span>
<span class="s">        &quot;avatarNumber&quot; : &quot;2&quot;,</span>
<span class="s">        &quot;tagLine&quot;: &quot;I&#39;m from a test!&quot;</span>
<span class="s">      }</span>
<span class="s">      </span><span class="k">&quot;&quot;&quot;</span><span class="nf"></span>
<span class="nf">    </span><span class="k">When </span><span class="nf">I request &quot;</span><span class="s">POST /api/programmers</span><span class="nf">&quot;</span>
<span class="nf">    </span><span class="k">Then </span><span class="nf">the response status code should be </span><span class="s">201</span><span class="nf"></span>
<span class="nf">    </span><span class="k">And </span><span class="nf">the &quot;</span><span class="s">Location</span><span class="nf">&quot; header should be &quot;</span><span class="s">/api/programmers/ObjectOrienter</span><span class="nf">&quot;</span>

<span class="nf">  </span><span class="c"># ... additional scenarios</span><span class="nf"></span>
</pre></div>
</div>
<p>This makes sure that our API doesn&#8217;t break. It also lets us design our API,
before we think about implementing it.</p>
<p>Whenever I have an API, I like to have an object for each resource. Before
we started in episode 1, I created a <tt class="docutils literal"><span class="pre">Programmer</span></tt> object. And this is actually
what we&#8217;re allowing the API user to update, and we&#8217;re using this object to
send data back to the user:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="o">&lt;?</span><span class="nx">php</span>

<span class="c1">// src/KnpU/CodeBattle/Model/Programmer.php</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">Programmer</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="nv">$id</span><span class="p">;</span>

    <span class="k">public</span> <span class="nv">$nickname</span><span class="p">;</span>

    <span class="k">public</span> <span class="nv">$avatarNumber</span><span class="p">;</span>

    <span class="k">public</span> <span class="nv">$tagLine</span><span class="p">;</span>

    <span class="c1">// ... a few more properties</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="serialization-turning-objects-into-json-or-xml">
<h2>Serialization: Turning Objects into JSON or XML<a class="headerlink" href="serializer#serialization-turning-objects-into-json-or-xml" title="Permalink to this headline">¶</a></h2>
<p>So one of the key things we were doing was turning objects into JSON. For
example, let&#8217;s look in <tt class="docutils literal"><span class="pre">showAction</span></tt>. We&#8217;re querying the database for a
<tt class="docutils literal"><span class="pre">Programmer</span></tt> object, using a simple database-system I created in the background.
Then ultimately, we pass that object into the <tt class="docutils literal"><span class="pre">serializeProgrammer</span></tt> function,
which is a simple function we wrote inside this same class. It just takes
a <tt class="docutils literal"><span class="pre">Programmer</span></tt> object and manually turns it into an array:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">showAction</span><span class="p">(</span><span class="nv">$nickname</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$programmer</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getProgrammerRepository</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">findOneByNickname</span><span class="p">(</span><span class="nv">$nickname</span><span class="p">);</span>

    <span class="c1">// ...</span>
    <span class="nv">$data</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">serializeProgrammer</span><span class="p">(</span><span class="nv">$programmer</span><span class="p">);</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">JsonResponse</span><span class="p">(</span><span class="nv">$data</span><span class="p">,</span> <span class="mi">200</span><span class="p">);</span>

    <span class="k">return</span> <span class="nv">$response</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// ...</span>
<span class="k">private</span> <span class="k">function</span> <span class="nf">serializeProgrammer</span><span class="p">(</span><span class="nx">Programmer</span> <span class="nv">$programmer</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">&#39;nickname&#39;</span> <span class="o">=&gt;</span> <span class="nv">$programmer</span><span class="o">-&gt;</span><span class="na">nickname</span><span class="p">,</span>
        <span class="s1">&#39;avatarNumber&#39;</span> <span class="o">=&gt;</span> <span class="nv">$programmer</span><span class="o">-&gt;</span><span class="na">avatarNumber</span><span class="p">,</span>
        <span class="s1">&#39;powerLevel&#39;</span> <span class="o">=&gt;</span> <span class="nv">$programmer</span><span class="o">-&gt;</span><span class="na">powerLevel</span><span class="p">,</span>
        <span class="s1">&#39;tagLine&#39;</span> <span class="o">=&gt;</span> <span class="nv">$programmer</span><span class="o">-&gt;</span><span class="na">tagLine</span><span class="p">,</span>
    <span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This transformation from an object into an array is really important because
we&#8217;re going to be doing it for every resource across all of our endpoints.</p>
<div class="section" id="installing-jms-serializer">
<h3>Installing JMS Serializer<a class="headerlink" href="serializer#installing-jms-serializer" title="Permalink to this headline">¶</a></h3>
<p>The first thing we&#8217;re going to talk about is a library that makes this a lot
easier and a lot more powerful, called a serializer. The one I like is called
<a class="reference external" href="http://jmsyst.com/libs/serializer">jms/serializer</a>, so let&#8217;s Google for that. I&#8217;ll show you how this works
as we start using it. But the first step to installing any library is to
bring it in via Composer.</p>
<p>I&#8217;m opening a new tab, and going back into the root of my project, and then
copying that command:</p>
<div class="highlight-bash"><div class="highlight"><pre>composer require jms/serializer
</pre></div>
</div>
<p>If you get a &#8220;command not found&#8221; for <tt class="docutils literal"><span class="pre">composer</span></tt>, then you need to
<a class="reference external" href="https://getcomposer.org/doc/00-intro.md#globally">install it globally in your system</a>. Or, you can go and download it directly,
and you&#8217;ll end up with a <tt class="docutils literal"><span class="pre">composer.phar</span></tt> file. In that case, you&#8217;ll run
<tt class="docutils literal"><span class="pre">php</span> <span class="pre">composer.phar</span> <span class="pre">require</span></tt> instead.</p>
</div>
<div class="section" id="creating-configuring-the-serializer-object">
<h3>Creating/Configuring the Serializer Object<a class="headerlink" href="serializer#creating-configuring-the-serializer-object" title="Permalink to this headline">¶</a></h3>
<p>While we&#8217;re waiting, let&#8217;s go back and look at the usage a little bit. What
we&#8217;ll do is create an object called a &#8220;serializer&#8221;, and there&#8217;s this <tt class="docutils literal"><span class="pre">SerializerBuilder</span></tt>
that helps us with this. Then we&#8217;ll pass it some data, which for us will
be a <tt class="docutils literal"><span class="pre">Programmer</span></tt> object or a <tt class="docutils literal"><span class="pre">Battle</span></tt> object. And then it returns to
you the actual JSON string. So it takes an object and turns it into a string:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// from the serialization documentation</span>
<span class="nv">$serializer</span> <span class="o">=</span> <span class="nx">JMS\Serializer\SerializerBuilder</span><span class="o">::</span><span class="na">create</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">build</span><span class="p">();</span>
<span class="nv">$jsonContent</span> <span class="o">=</span> <span class="nv">$serializer</span><span class="o">-&gt;</span><span class="na">serialize</span><span class="p">(</span><span class="nv">$data</span><span class="p">,</span> <span class="s1">&#39;json&#39;</span><span class="p">);</span>
<span class="k">echo</span> <span class="nv">$jsonContent</span><span class="p">;</span> <span class="c1">// or return it in a Response</span>
</pre></div>
</div>
<p>Now this is a little bit specific to Silex, which is the framework we&#8217;re
building our API on, but in Silex, you have a spot where you can globally
configure objects that you want to be able to use. They&#8217;re called services.
I&#8217;ll create a new global object called <tt class="docutils literal"><span class="pre">serializer</span></tt> and we&#8217;ll use code
similar to what you just saw to create the <tt class="docutils literal"><span class="pre">serializer</span></tt> object. We&#8217;re doing
this because it will let me access that object from any of my controllers:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Application.php</span>
<span class="c1">// ...</span>

<span class="k">private</span> <span class="k">function</span> <span class="nf">configureServices</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="nv">$this</span><span class="p">[</span><span class="s1">&#39;serializer&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">share</span><span class="p">(</span><span class="k">function</span><span class="p">()</span> <span class="k">use</span> <span class="p">(</span><span class="nv">$app</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// todo ...</span>
    <span class="p">});</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Before I start typing anything here, I&#8217;ll make sure everything is done downloading.
Yes, it is - so I should be able to start referencing the serializer classes.
Start with the <tt class="docutils literal"><span class="pre">SerializerBuilder</span></tt> that we saw. We also need to set a cache
directory, because this library caches annotations that we&#8217;ll use a bit later.
This is a fancy way in my app to tell it to use a <tt class="docutils literal"><span class="pre">cache/serializer</span></tt> directory
at the root of my project.</p>
<p>There&#8217;s also a debug flag, and when that&#8217;s true, it&#8217;ll rebuild the cache
automatically. Finally, the last step tells the serializer to use the same
property names that are on the <tt class="docutils literal"><span class="pre">Programmer</span></tt> object as the keys on the JSON.
In other words, don&#8217;t try to transform them in any way. And that&#8217;s it!</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Application.php</span>
<span class="c1">// ...</span>

<span class="k">private</span> <span class="k">function</span> <span class="nf">configureServices</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="nv">$this</span><span class="p">[</span><span class="s1">&#39;serializer&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">share</span><span class="p">(</span><span class="k">function</span><span class="p">()</span> <span class="k">use</span> <span class="p">(</span><span class="nv">$app</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">\JMS\Serializer\SerializerBuilder</span><span class="o">::</span><span class="na">create</span><span class="p">()</span>
            <span class="o">-&gt;</span><span class="na">setCacheDir</span><span class="p">(</span><span class="nv">$app</span><span class="p">[</span><span class="s1">&#39;root_dir&#39;</span><span class="p">]</span><span class="o">.</span><span class="s1">&#39;/cache/serializer&#39;</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">setDebug</span><span class="p">(</span><span class="nv">$app</span><span class="p">[</span><span class="s1">&#39;debug&#39;</span><span class="p">])</span>
            <span class="o">-&gt;</span><span class="na">setPropertyNamingStrategy</span><span class="p">(</span><span class="k">new</span> <span class="nx">IdenticalPropertyNamingStrategy</span><span class="p">())</span>
            <span class="o">-&gt;</span><span class="na">build</span><span class="p">();</span>
    <span class="p">});</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="using-the-serializer-object">
<h2>Using the Serializer Object<a class="headerlink" href="serializer#using-the-serializer-object" title="Permalink to this headline">¶</a></h2>
<p>The important thing here is that we have a <tt class="docutils literal"><span class="pre">serializer</span></tt> object and we can
access it from any of our controllers. Let&#8217;s open our <tt class="docutils literal"><span class="pre">ProgrammerController</span></tt>
and rename <tt class="docutils literal"><span class="pre">serializeProgrammer</span></tt> to just <tt class="docutils literal"><span class="pre">serialize</span></tt> since it can serialize
anything.</p>
<p>I&#8217;ve setup my application so that I can reference any of those global objects
by saying <tt class="docutils literal"><span class="pre">$this-&gt;container['serializer']</span></tt>. This will look different for
you: the important point is that we need to access that object we just configured.</p>
<p>Now, just call <tt class="docutils literal"><span class="pre">serialize()</span></tt> on it, just like the documentation told us.
I&#8217;ll put <tt class="docutils literal"><span class="pre">json</span></tt> as the second argument so we get JSON. The serializer can
also give us another format, like XML:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php</span>
<span class="c1">// ...</span>

<span class="k">protected</span> <span class="k">function</span> <span class="nf">serialize</span><span class="p">(</span><span class="nv">$data</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">container</span><span class="p">[</span><span class="s1">&#39;serializer&#39;</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">serialize</span><span class="p">(</span><span class="nv">$data</span><span class="p">,</span> <span class="s1">&#39;json&#39;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Perfect! Now let&#8217;s look to see where we used the <tt class="docutils literal"><span class="pre">serializeProgrammer</span></tt>
function before. That old function returned an array, but <tt class="docutils literal"><span class="pre">serialize</span></tt> now
returns the JSON string. So now we can return a normal <tt class="docutils literal"><span class="pre">Response</span></tt> object
and just pass the JSON string that we want. The one thing we&#8217;ll lose is the
<tt class="docutils literal"><span class="pre">Content-Type</span></tt> header being set to <tt class="docutils literal"><span class="pre">application/json</span></tt>, but we&#8217;ll fix
that in a second:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">newAction</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$programmer</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Programmer</span><span class="p">();</span>
    <span class="c1">// ...</span>

    <span class="nv">$json</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">serialize</span><span class="p">(</span><span class="nv">$programmer</span><span class="p">);</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Response</span><span class="p">(</span><span class="nv">$json</span><span class="p">,</span> <span class="mi">201</span><span class="p">);</span>

    <span class="c1">// ... setting the Location header</span>

    <span class="k">return</span> <span class="nv">$response</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Let&#8217;s go and make similar changes to the rest of our code.</p>
<p>In fact, when we have the collection of <tt class="docutils literal"><span class="pre">Programmer</span></tt> objects, things get
much easier. We can pass the entire array of objects and it&#8217;s smart enough
to know how to serialize that. You can already start to see some of the
benefits of using a serializer:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">listAction</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$programmers</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getProgrammerRepository</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">findAll</span><span class="p">();</span>
    <span class="nv">$data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;programmers&#39;</span> <span class="o">=&gt;</span> <span class="nv">$programmers</span><span class="p">);</span>
    <span class="nv">$json</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">serialize</span><span class="p">(</span><span class="nv">$data</span><span class="p">);</span>

    <span class="nv">$response</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Response</span><span class="p">(</span><span class="nv">$json</span><span class="p">,</span> <span class="mi">200</span><span class="p">);</span>

    <span class="k">return</span> <span class="nv">$response</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Compared with what we had before, not a lot should have changed, because
the serializer should give us a JSON structure with all the properties in
<tt class="docutils literal"><span class="pre">Programmer</span></tt>. That&#8217;s practically the same as we were doing before.</p>
<p>So let&#8217;s run our tests!</p>
<div class="highlight-bash"><div class="highlight"><pre>php vendor/bin/behat
</pre></div>
</div>
<p>We&#8217;ve totally changed how a Programmer gets turned into JSON, but <em>almost</em>
every test passes already! We&#8217;ll debug that failure next.</p>
</div>
</div>


    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2855201834" id="dsq-comment-2855201834">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2855201834">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-23</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2855201834" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2855201834" class="dsq-comment-text">
	                                <p>Hey <a data-dsq-mention="3amprogrammer:disqus" href="https://disqus.com/by/3amprogrammer/" rel="nofollow noopener">3amprogrammer</a>!</p><p>Oh man, this type of question was one of the *hardest* things for me to really understand with REST. So, it's a great question :). But mostly, the answer is: it doesn't matter. Do your best to think of what makes sense, implement it, and never look back.</p><p>Now, let's look at your situation. Probably, you will have some GET endpoint to return the details of a specific question, e.g.:</p><p>GET /questions/{id}</p><p>Thinking philosophically, to answer this question, you're not "modifying" the question. So, a simple PUT to this URL doesn't make sense. Next, can we think of the "answers" as its own resource? If so, then, even if we don't *need* this endpoint, it should make sense to be able to make a GET request to /question/{id}/answers to return *all* answers to this question. And yes, I think, philosophically, that makes some sense :).</p><p>So, I would do this:</p><p>POST /questions/{id}/answers</p><p>But, if you don't think it makes sense that a "user answer" is its own resource, and rather, that "answering a question" is more of an "action", then this route starts to fall apart and not really fit cleanly into REST. And that's ok! Sometimes, you have an endpoint that is just awkward for REST. In those cases, I recommend making a POST request to the resource (i.e. /questions/{id}) with a URL fragment at the end that describes the "action" being taken. So:</p><p>POST /questions/{id}}/answer</p><p>I talk about these "weird" endpoints here: <a href="https://disq.us/url?url=https%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fsymfony-rest5%2Fweird-tagline-endpoint%3A_xBKq__N_DeAfEs7oL9hg62lm-s&amp;cuid=1175718" rel="nofollow noopener">https://knpuniversity.com/scre...</a> and here: <a href="https://disq.us/url?url=https%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fsymfony-rest5%2Fweird-powerup-endpoint%3AXkn5kMQnGppRgGhFHCVj9HwzgmY&amp;cuid=1175718" rel="nofollow noopener">https://knpuniversity.com/scre...</a></p><p>As far as a controller, I would probably put it into QuestionController, but if there were a few endpoints related to user answers, I then might create a separate UserAnswerController.</p><p>Let me know if this helped - sorry for the slow reply this time :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2849465376" id="dsq-comment-2849465376">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/3amprogrammer/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/18706/694/avatar92.jpg?1470710433">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2849465376">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-21</span>
	                            <span class="dsq-commenter-name">3amprogrammer</span>
	                        </div>

	                        <div id="dsq-comment-message-2849465376" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2849465376" class="dsq-comment-text">
	                                <p>Hey Ryan! I have a question. We have this CRUD operations, which are great, but what if I have a quiz and I need and entry point for answering the question? What should my route look like? What my representation (json) should look like? If I have a table answer_user, should I create a controller UserAnswersController and put crud operations there?</p><p>By now I have an action in QuestionsController called answer that contains all this logic of updtaing answer_user table.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2303192378" id="dsq-comment-2303192378">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2303192378">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-10-12</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2303192378" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2303192378" class="dsq-comment-text">
	                                <p>Hey!</p><p>Sorry - I missed this message! If you download the code from the repository, you get the starting code at the beginning of episode *1*. To get the code at the start of episode 2, you'll need to download it from this page (which is only available now to subscribers). I just downloaded the starting code for episode 2 and all of the tests pass - without making these changes. The changes you listed above *are* correct, but they're included in the starting episode 2 code download (since we made those changes near the end of episode 1.</p><p>And no worries - I like hearing about potential bugs in the tutorial - we want them to be clear for everyone!</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2256984305" id="dsq-comment-2256984305">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/neandhercarlos/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/17063/1588/avatar92.jpg?1462796467">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2256984305">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-09-16</span>
	                            <span class="dsq-commenter-name">Neandher Carlos</span>
	                        </div>

	                        <div id="dsq-comment-message-2256984305" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2256984305" class="dsq-comment-text">
	                                <p>Hi Ryan! I hope i'm not being boring...</p><p>But I cloned the repository ( <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fknpuniversity%2Frest-ep2%2F%3A6rOPS89fqLCj-CXC9useaPTGxCQ&amp;cuid=1175718" rel="nofollow noopener">https://github.com/knpuniversi...</a> ) and ran the tests with Behat, and got not only one error, but three. To solve the 2 errors I have to do this:</p><p>### Application ###</p><p></p><pre>//$data['type'] = 'http://localhost:8000/api/docs/errors#'.$data['type'];<br><br>//from rest episode one<br><br>if ($data['type'] != 'about:blank') {<br>    $data['type'] = 'http://localhost:8000/api/docs/errors#'.$data['type'];<br>}<br></pre><p></p><p>### programmer.feature ###</p><p></p><pre>Scenario: Error response on invalid JSON<br>...<br>And the "type" property should equal "invalid_body_format" ????<br>And the "type" property should contain "/api/docs/errors#invalid_body_format" //from rest episode one, but reference is undefined<br></pre><p></p><p>So, i have to add the reference: <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fknpuniversity%2Frest%2Fblob%2Fmaster%2Ffeatures%2Fapi%2FApiFeatureContext.php%23L262%3ALO5Ayqodq0cHSfmVIX0u4YZtzUI&amp;cuid=1175718" rel="nofollow noopener">https://github.com/knpuniversi...</a></p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1773469741" id="dsq-comment-1773469741">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1773469741">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-05</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1773469741" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1773469741" class="dsq-comment-text">
	                                <p>Hey!</p><p>This is taking a bit longer (biggest screencast ever for us), which is why we released without the video download. But we're encoding things right now - the download should be available on a day or 2 :).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1770686191" id="dsq-comment-1770686191">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_FW6Q6X6KAe/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/12456/7555/avatar92.jpg?1417739154">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1770686191">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-04</span>
	                            <span class="dsq-commenter-name">Edison</span>
	                        </div>

	                        <div id="dsq-comment-message-1770686191" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1770686191" class="dsq-comment-text">
	                                <p>When is going to be possible to download videos of this screencast series?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1758567084" id="dsq-comment-1758567084">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="serializer">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1758567084">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-12-25</span>
	                            <span class="dsq-commenter-name">Guest</span>
	                        </div>

	                        <div id="dsq-comment-message-1758567084" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1758567084" class="dsq-comment-text">
	                                <p>no video download?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_serializer';var disqus_url = 'https://knpuniversity.com/screencast/rest-ep2/serializer';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="serializer-configuration#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/rest-ep2/serializer" addthis:title="RESTful APIs in the Real World Course 2">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"rest-ep2","courseIsOwned":false,"chapter":"The Serializer: Swiss-Army Knife of APIs","chapterNumber":1,"chapterIsFree":true}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'RESTful APIs in the Real World Course 2';
        Core.courseId = 48
        Core.courseIsOwned = false;
        Core.courseSlug = 'rest-ep2';
                    Core.chapterTitle = 'The Serializer: Swiss-Army Knife of APIs';
            Core.chapterNumber = 1;
            Core.chapterIsFree = true;
            Core.chapterSlug = 'serializer';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":487,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
