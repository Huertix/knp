<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Authorization via a Token > RESTful APIs in the Real World Course 2 | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 38768
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: Securing\x20More\x20Endpoints <i class="fa fa-play"></i>',
            'url': '/screencast/rest-ep2/securing-more-endpoints#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="Making RESTful APIs is hard, really hard. There are a lot of concepts
to know - resources, representations, HTTP methods, status codes, etc.

[Course 1](http://knpuniversity.com/screencast/rest) got us really comfortable
with all the terminology. So in episode 2, we&#039;re attacking the *hard*
stuff:

* Using a serializer
* Token Authentication System (Silex&#039;s security system)
* Hypermedia versus media
* The HAL hypermedia type
* The HATEOAS PHP library
* The HAL Browser
* Embedding resources (versus adding links)
* Tricks with Behat for testing API&#039;s
* Pagination and filtering
* A lot of other pieces in between!

This stuff is not easy. But if you make it through, you&#039;ll be armed to
attack whatever API need you have. And for documenting your API, see
[Course 3](http://knpuniversity.com/screencast/rest-ep3)
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Authorization via a Token">
<meta property="og:description" content="Making RESTful APIs is hard, really hard. There are a lot of concepts
to know - resources, representations, HTTP methods, status codes, etc">
<meta property="og:url" content="http://knpuniversity.com/screencast/rest-ep2/authentication-via-token">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/rest-ep2:3045e08e8fa65ec0d207e42cdf47bb2f02a3e490/rest2.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="authentication-via-token#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        5.
                            Authorization via a Token
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">RESTful APIs in the Real World Course 2</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="serializer" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        The Serializer: Swiss-Army Knife of APIs
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:58</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="serializer-configuration" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        Serializer Configuration (SerializationContext)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:46</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="serializer-annotations" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        Serializer Annotations
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:59</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="requiring-authentication" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Requiring Authentication
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:32</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="authentication-via-token" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Authorization via a Token
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:13</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="securing-more-endpoints" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        Securing More Endpoints
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:05</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="authentication-error-format" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Authentication Error Format
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:08</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="centralizing-error-response-creation" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Centralizing Error Response Creation
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:25</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="creating-tokens-in-the-api" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Creating Token Resources in the API
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 10:14</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="reuse-consistency" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        Reuse and Consistency
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:22</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="token-validation" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Validate that Token Resource
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:51</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="battle-resource-feature" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                12.
                        New Battle Resource (the Scenario)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:06</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="battle-resource-new" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                13.
                        Start (Create) an Epic Battle (Resource)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:42</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="get-one-battle" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                14.
                        GET Your (One) Battle On
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="link-battle-programmer" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                15.
                        Battles and Programmer - Link them!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:42</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="hateoas-installation" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                16.
                        I &lt;3 HATEOAS Installation
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:22</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="hateoas-router" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                17.
                        HATEOAS Loves Routers
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:12</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="hateoas-linking" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                18.
                        Adding Real Links with HATEOAS
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:08</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="hypermedia-media" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                19.
                        Hypermedia vs. Media (Buzzwords!)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:50</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="embedded-resources" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                20.
                        We can Embed Resources Too
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:58</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="hal-browser" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                21.
                        Fun with the HAL Browser!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:40</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="hal-collection" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                22.
                        Collections: The HAL Way
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:25</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="link-all-the-resources" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                23.
                        Link to a Subordinate Resource!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:23</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="api-homepage" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                24.
                        A Homepage for your API?
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:10</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="pagination" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                25.
                        API Pagination Done Easily
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 8:48</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="filtering" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                26.
                        Filtering and HATEOAS (The Buzzword)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:40</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/rest-ep2" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Authorization via a Token</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>RESTful APIs in the Real World Course 2 Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $12.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="securing-more-endpoints#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="authentication-via-token#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="authentication-via-token#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (12)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script script-content">
                                                                                        <a href="https://github.com/knpuniversity/rest/edit/master/knpu/episode2/authentication-via-token.rst" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    
  <div class="section" id="authorization-via-a-token">
<h1>Authorization via a Token<a class="headerlink" href="authentication-via-token#authorization-via-a-token" title="Permalink to this headline">¶</a></h1>
<p>So we can deny access and turn that into a nice response. Cool. Now we need
to create something that&#8217;ll look for a token on the request and authenticate
us so we can actually create programmers!</p>
<p>You should know where to start: in one of our feature files. We&#8217;re going
to modify an existing scenario. See the <tt class="docutils literal"><span class="pre">Background</span></tt> of our programmer
feature file? One of the things that we do before every single scenario is
to make sure the <tt class="docutils literal"><span class="pre">weaverryan</span></tt> user exists in the database. We aren&#8217;t sending
authentication headers, just guaranteeing that the user exists in the database:</p>
<div class="highlight-gherkin"><div class="highlight"><pre><span class="c"># features/api/programmer.feature</span><span class="nf"></span>
<span class="c"># ...</span><span class="nf"></span>

<span class="k">Background:</span><span class="nf"></span>
<span class="k">  Given </span><span class="nf">the user &quot;</span><span class="s">weaverryan</span><span class="nf">&quot; exists</span>

<span class="c"># ... scenarios</span><span class="nf"></span>
</pre></div>
</div>
<div class="section" id="sending-an-authorization-header-on-each-request">
<h2>Sending an Authorization Header on each Request<a class="headerlink" href="authentication-via-token#sending-an-authorization-header-on-each-request" title="Permalink to this headline">¶</a></h2>
<p>In the background, I already have a database table for tokens, and each token
has a foreign-key relation to one user. So I&#8217;m going to extend the <tt class="docutils literal"><span class="pre">Background</span></tt>
a little bit to create a token in that table that relates to <tt class="docutils literal"><span class="pre">weaverryan</span></tt>.
And this is the important part, this says that on whatever request we make
inside of our scenario, I want to send an <tt class="docutils literal"><span class="pre">Authorization</span></tt> header set to
token, a space then <tt class="docutils literal"><span class="pre">ABCD123</span></tt>:</p>
<div class="highlight-gherkin"><div class="highlight"><pre><span class="c"># features/api/programmer.feature</span><span class="nf"></span>
<span class="c"># ...</span><span class="nf"></span>

<span class="k">Background:</span><span class="nf"></span>
<span class="k">  Given </span><span class="nf">the user &quot;</span><span class="s">weaverryan</span><span class="nf">&quot; exists</span>
<span class="nf">  </span><span class="k">And </span><span class="nf">&quot;</span><span class="s">weaverryan</span><span class="nf">&quot; has an authentication token &quot;</span><span class="s">ABCD123</span><span class="nf">&quot;</span>
<span class="nf">  </span><span class="k">And </span><span class="nf">I set the &quot;</span><span class="s">Authorization</span><span class="nf">&quot; header to be &quot;</span><span class="s">token ABCD123</span><span class="nf">&quot;</span>

<span class="c"># ... scenarios</span><span class="nf"></span>
</pre></div>
</div>
<p>Why did I choose to set the <tt class="docutils literal"><span class="pre">Authorization</span></tt> header or this &#8220;token space&#8221;
format? Technically, none of this is important. In a second, you&#8217;ll see us
grab and parse this header. If you use OAuth, it has directions on the type
of names you should give these things. So I&#8217;m just using authorization header
and the word token, space and the actual authentication token that we&#8217;re sending.</p>
</div>
<div class="section" id="hey-you-use-https-no-excuses">
<h2>Hey You! Use HTTPS. No Excuses.<a class="headerlink" href="authentication-via-token#hey-you-use-https-no-excuses" title="Permalink to this headline">¶</a></h2>
<p>By the way, we aren&#8217;t doing it in this tutorial, but one thing that that&#8217;s
really important for authentication across your API is that you only do it
over HTTPS. The easiest way to do this is to require HTTPS across your entire
API.  Otherwise, these authentication tokens are flying through the internet via
plain text, and that&#8217;s a recipe for disaster.</p>
<p>If we rerun one of our tests right now, it&#8217;s not going to make any difference.
To prove it, let&#8217;s rerun the first scenario of <tt class="docutils literal"><span class="pre">programmer.feature</span></tt>, which
starts at line 11. So we say <tt class="docutils literal"><span class="pre">:11</span></tt> and it&#8217;s going to fail:</p>
<div class="highlight-bash"><div class="highlight"><pre>php vendor/bin/behat features/api/programmer.feature:11
</pre></div>
</div>
<p>It <em>is</em> setting that <tt class="docutils literal"><span class="pre">Authorization</span></tt> header, but we aren&#8217;t actually doing
anything with it yet in our app. So we&#8217;re getting that 401 authentication
required message.</p>
</div>
<div class="section" id="authenticating-a-user-via-a-token">
<h2>Authenticating a User via a Token<a class="headerlink" href="authentication-via-token#authenticating-a-user-via-a-token" title="Permalink to this headline">¶</a></h2>
<p>So let&#8217;s hook this up! Some of this is specific to Silex&#8217;s security system,
but in case you&#8217;re using something else, we&#8217;ll stay high level enough to see
what types of things you need to do in your system to make it happen. As always,
if you have questions, just ask them in the comments!</p>
<p>Inside this <tt class="docutils literal"><span class="pre">Security/</span></tt> directory here, I&#8217;ve already set up a bunch of
things for an API token authentication system</p>
<div class="section" id="apitokenlistener-gets-the-token-from-the-request">
<h3>1) ApiTokenListener: Gets the Token from the Request<a class="headerlink" href="authentication-via-token#apitokenlistener-gets-the-token-from-the-request" title="Permalink to this headline">¶</a></h3>
<p>The first thing we&#8217;re going to do is open this <tt class="docutils literal"><span class="pre">ApiTokenListener</span></tt>. I&#8217;ve
written some fake code in here as you can see:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Security/Authentication/ApiTokenListener.php</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">ApiTokenListener</span> <span class="k">implements</span> <span class="nx">ListenerInterface</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">handle</span><span class="p">(</span><span class="nx">GetResponseEvent</span> <span class="nv">$event</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// ...</span>
        <span class="nv">$request</span> <span class="o">=</span> <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getRequest</span><span class="p">();</span>

        <span class="c1">// there may not be authentication information on this request</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">headers</span><span class="o">-&gt;</span><span class="na">has</span><span class="p">(</span><span class="s1">&#39;Authorization&#39;</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">// TODO - remove this return statement and add real code!</span>
        <span class="k">return</span><span class="p">;</span>
        <span class="c1">// format should be &quot;Authorization: token ABCDEFG&quot;</span>
        <span class="nv">$tokenString</span> <span class="o">=</span> <span class="s1">&#39;HARDCODED&#39;</span><span class="p">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$tokenString</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">// there&#39;s no authentication info for us to process</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">// some code that sends the tokenString into the Silex security system</span>
        <span class="c1">// ...</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The job of the listener is to look at the request object and get the token
information off of it. And hey, since we&#8217;re sending the token on the <tt class="docutils literal"><span class="pre">Authorization</span></tt>
header, we are going to look for it there. So let&#8217;s get rid of this hard
coded text and instead go get that <tt class="docutils literal"><span class="pre">Authorization</span></tt> header.  You can say
<tt class="docutils literal"><span class="pre">$request-&gt;headers-&gt;get('Authorization')</span></tt>. That&#8217;s going to get you the actual
raw <tt class="docutils literal"><span class="pre">token</span> <span class="pre">ABCD123</span></tt> type of thing:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Security/Authentication/ApiTokenListener.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">handle</span><span class="p">(</span><span class="nx">GetResponseEvent</span> <span class="nv">$event</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
    <span class="nv">$request</span> <span class="o">=</span> <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getRequest</span><span class="p">();</span>

    <span class="nv">$authorizationHeader</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">headers</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;Authorization&#39;</span><span class="p">);</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Next, since the actual token is the second part of that, we need to parse
it out. I&#8217;ll say, <tt class="docutils literal"><span class="pre">$tokenString</span> <span class="pre">=</span> <span class="pre">$this-&gt;parseAuthorizationHeader()</span></tt>, which
is a function I’ve already created down here. It&#8217;s a private function that
expects a format of token space and gets the second part for you:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Security/Authentication/ApiTokenListener.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">handle</span><span class="p">(</span><span class="nx">GetResponseEvent</span> <span class="nv">$event</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
    <span class="nv">$request</span> <span class="o">=</span> <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getRequest</span><span class="p">();</span>

    <span class="nv">$authorizationHeader</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">headers</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;Authorization&#39;</span><span class="p">);</span>
    <span class="nv">$tokenString</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">parseAuthorizationHeader</span><span class="p">(</span><span class="nv">$authorizationHeader</span><span class="p">);</span>
    <span class="c1">// ...</span>
<span class="p">}</span>

<span class="sd">/**</span>
<span class="sd"> * Takes in &quot;token ABCDEFG&quot; and returns &quot;ABCDEFG&quot;</span>
<span class="sd"> */</span>
<span class="k">private</span> <span class="k">function</span> <span class="nf">parseAuthorizationHeader</span><span class="p">(</span><span class="nv">$authorizationHeader</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Perfect!</p>
<p>At this point the <tt class="docutils literal"><span class="pre">$tokenString</span></tt> is <tt class="docutils literal"><span class="pre">ABCD123</span></tt>. So that&#8217;s all I want to
talk about in this <tt class="docutils literal"><span class="pre">TokenListener</span></tt>, it&#8217;s the only job of this class.</p>
</div>
<div class="section" id="apitokenprovider-uses-the-token-to-find-a-user">
<h3>1) ApiTokenProvider: Uses the Token to find a User<a class="headerlink" href="authentication-via-token#apitokenprovider-uses-the-token-to-find-a-user" title="Permalink to this headline">¶</a></h3>
<p>Next, I&#8217;m going to open up the <tt class="docutils literal"><span class="pre">ApiTokenProvider</span></tt>. Its job is to take
the token string <tt class="docutils literal"><span class="pre">ABCD123</span></tt> and try to look up a valid <tt class="docutils literal"><span class="pre">User</span></tt> object
in the database for it. First, remember how I have an <tt class="docutils literal"><span class="pre">api_token</span></tt> table
in my database? Let me show you some of the behind-the-scenes magic:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/DataFixtures/FixturesManager.php</span>
<span class="c1">// this is an internal class that creates our database tables</span>

<span class="nv">$tokenTable</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Table</span><span class="p">(</span><span class="s1">&#39;api_token&#39;</span><span class="p">);</span>
<span class="nv">$tokenTable</span><span class="o">-&gt;</span><span class="na">addColumn</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span> <span class="s1">&#39;integer&#39;</span><span class="p">();</span>
<span class="nv">$tokenTable</span><span class="o">-&gt;</span><span class="na">addColumn</span><span class="p">(</span><span class="s1">&#39;token&#39;</span><span class="p">,</span> <span class="s1">&#39;string&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;length&#39;</span> <span class="o">=&gt;</span> <span class="mi">32</span><span class="p">));</span>
<span class="nv">$tokenTable</span><span class="o">-&gt;</span><span class="na">addColumn</span><span class="p">(</span><span class="s1">&#39;userId&#39;</span><span class="p">,</span> <span class="s1">&#39;integer&#39;</span><span class="p">);</span>
<span class="nv">$tokenTable</span><span class="o">-&gt;</span><span class="na">addColumn</span><span class="p">(</span><span class="s1">&#39;notes&#39;</span><span class="p">,</span> <span class="s1">&#39;string&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;length&#39;</span> <span class="o">=&gt;</span> <span class="mi">255</span><span class="p">));</span>
<span class="nv">$tokenTable</span><span class="o">-&gt;</span><span class="na">addColumn</span><span class="p">(</span><span class="s1">&#39;createdAt&#39;</span><span class="p">,</span> <span class="s1">&#39;datetime&#39;</span><span class="p">);</span>
<span class="c1">// ...</span>
</pre></div>
</div>
<p>You can see here I am creating an <tt class="docutils literal"><span class="pre">api_token</span></tt> table. It has a token column
which is the string and a <tt class="docutils literal"><span class="pre">user_id</span></tt> column which is the user it relates
to. So you can imagine a big table full of tokens and each token is related
to exactly one user. For example, if we look up the entry in the token table,
we can figure out &#8220;yes&#8221; this is a valid token and it is a valid token for a
user whose <tt class="docutils literal"><span class="pre">id</span></tt> is <tt class="docutils literal"><span class="pre">5</span></tt>.</p>
<p>So here, the first thing we&#8217;ll do is actually go and look up the token row.
I don&#8217;t want to get into the details of exactly how this all hooks up because
I want to focus on REST. But I&#8217;ve already configured this class and created
some code behind the scenes to take in a token string, which is the <tt class="docutils literal"><span class="pre">ABCD123</span></tt>
thing in our case and return to me an <tt class="docutils literal"><span class="pre">ApiToken</span></tt> object, which represents
a row in that table:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Security/Authentication/ApiTokenProvider.php</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">ApiTokenProvider</span> <span class="k">implements</span> <span class="nx">AuthenticationProviderInterface</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">authenticate</span><span class="p">(</span><span class="nx">TokenInterface</span> <span class="nv">$token</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// the actual token string value from the header - e.g. ABCDEFG</span>
        <span class="nv">$tokenString</span> <span class="o">=</span> <span class="nv">$token</span><span class="o">-&gt;</span><span class="na">getCredentials</span><span class="p">();</span>

        <span class="c1">// find the ApiToken object in the database based on the TokenString</span>
        <span class="nv">$apiToken</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">apiTokenRepository</span><span class="o">-&gt;</span><span class="na">findOneByToken</span><span class="p">(</span><span class="nv">$tokenString</span><span class="p">);</span>

        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$apiToken</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nx">BadCredentialsException</span><span class="p">(</span><span class="s1">&#39;Invalid token&#39;</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="c1">// ... finishing code that&#39;s already written ...</span>
    <span class="p">}</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>So we&#8217;ve taken the string and we&#8217;ve queried for a row in the table. If we
don&#8217;t have that row, we throw an exception which causes a 401 bad credentials
error.</p>
<p>Next, when we have that, we just need to look up the <tt class="docutils literal"><span class="pre">User</span></tt> object from it.
Remember, the job of this class is start with the token string and eventually
give us a <tt class="docutils literal"><span class="pre">User</span></tt> object. And it does that by going through the <tt class="docutils literal"><span class="pre">api_token</span></tt>
table:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Security/Authentication/ApiTokenProvider.php</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">ApiTokenProvider</span> <span class="k">implements</span> <span class="nx">AuthenticationProviderInterface</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">authenticate</span><span class="p">(</span><span class="nx">TokenInterface</span> <span class="nv">$token</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// the actual token string value from the header - e.g. ABCDEFG</span>
        <span class="nv">$tokenString</span> <span class="o">=</span> <span class="nv">$token</span><span class="o">-&gt;</span><span class="na">getCredentials</span><span class="p">();</span>

        <span class="c1">// find the ApiToken object in the database based on the TokenString</span>
        <span class="nv">$apiToken</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">apiTokenRepository</span><span class="o">-&gt;</span><span class="na">findOneByToken</span><span class="p">(</span><span class="nv">$tokenString</span><span class="p">);</span>

        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$apiToken</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nx">BadCredentialsException</span><span class="p">(</span><span class="s1">&#39;Invalid token&#39;</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">userRepository</span><span class="o">-&gt;</span><span class="na">find</span><span class="p">(</span><span class="nv">$apiToken</span><span class="o">-&gt;</span><span class="na">userId</span><span class="p">);</span>

        <span class="c1">// ... finishing code that&#39;s already written ...</span>
    <span class="p">}</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>And that&#8217;s the job of this <tt class="docutils literal"><span class="pre">ApiTokenProvider</span></tt> class. It&#8217;s technical and
at the core of Silex&#8217;s security system, so I just want you to internalize
what it does.</p>
</div>
</div>
<div class="section" id="it-works-get-the-logged-in-user">
<h2>It Works! Get the Logged-In User<a class="headerlink" href="authentication-via-token#it-works-get-the-logged-in-user" title="Permalink to this headline">¶</a></h2>
<p>At this point - between these two classes and a few other things I&#8217;ve setup -
if we send this <tt class="docutils literal"><span class="pre">Authorization</span></tt> header with a valid token, by the time we
get it to our <tt class="docutils literal"><span class="pre">ProgrammerController</span></tt>, <tt class="docutils literal"><span class="pre">$this-&gt;getLoggedInUser()</span></tt> will
actually return to us the <tt class="docutils literal"><span class="pre">User</span></tt> object that&#8217;s attached to the token that
was sent:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">newAction</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// will return the User related to the token form the Authorization header!</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">isUserLoggedIn</span><span class="p">())</span> <span class="p">{</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="nx">AccessDeniedException</span><span class="p">();</span>
    <span class="p">}</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>In the case of our scenario, since we&#8217;re sending a token of <tt class="docutils literal"><span class="pre">ABCD123</span></tt>,
it means that we&#8217;ll get a <tt class="docutils literal"><span class="pre">User</span></tt> object that represents this <tt class="docutils literal"><span class="pre">weaverryan</span></tt>
user. We will actually be logged in, except we&#8217;re logged in via the API
token. So, let&#8217;s try this out.</p>
<div class="highlight-bash"><div class="highlight"><pre>php vendor/bin/behat features/api/programmer.feature:11
</pre></div>
</div>
<p>And there it is!</p>
<p>The guts for getting this all working can be complicated, but the end result
is so simple: send an <tt class="docutils literal"><span class="pre">Authorization</span></tt> header with the api token and use
that to look in your database and figure out which <tt class="docutils literal"><span class="pre">User</span></tt> object if any
this token is attached to.</p>
<p>So now, in <tt class="docutils literal"><span class="pre">handleRequest()</span></tt>, I have this ugly hard-coded logic that assumed
that there is a user called <tt class="docutils literal"><span class="pre">weaverryan</span></tt>. Replace this garbage
with <tt class="docutils literal"><span class="pre">$this-&gt;getLoggedInUser()</span></tt> to get the real user object that&#8217;s
attached to our token:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php</span>
<span class="c1">// ...</span>

<span class="k">private</span> <span class="k">function</span> <span class="nf">handleRequest</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">,</span> <span class="nx">Programmer</span> <span class="nv">$programmer</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="nv">$programmer</span><span class="o">-&gt;</span><span class="na">userId</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getLoggedInUser</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">id</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
</div>


    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2183238656" id="dsq-comment-2183238656">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/jeanflixlaflamme/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2183238656">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-08-09</span>
	                            <span class="dsq-commenter-name">Jean-Félix Laflamme</span>
	                        </div>

	                        <div id="dsq-comment-message-2183238656" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2183238656" class="dsq-comment-text">
	                                <p>Hey,</p><p>Really like your videos. They are awesome! But they would be even better if you could remove hissing that occurs when you say an "s". Other than that keep up the good work !! :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1773260424" id="dsq-comment-1773260424">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/joanboixados/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11913/8926/avatar92.jpg?1412715871">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1773260424">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-05</span>
	                            <span class="dsq-commenter-name">Joan</span>
	                        </div>

	                        <div id="dsq-comment-message-1773260424" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1773260424" class="dsq-comment-text">
	                                <p>Adding that RewriteRule to the .htaccess works at the time to pass the Authorization header through. However, now other requests that do not require authentication do get an empty Authorization header that causes the code to  throw new BadAuthHeaderFormatException();.</p><p>I have modified it the code to look for empty authorization headers too:</p><p>// there may not be authentication information on this request<br>        if (!$request-&gt;headers-&gt;has('Authorization') || $request-&gt;headers-&gt;get('Authorization') == '') {<br>            return;<br>        }</p><p>EDIT:</p><p>Added the following condition in the .htaccess:</p><p>RewriteCond %{HTTP:Authorization} .+</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1771941331" id="dsq-comment-1771941331">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/joanboixados/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11913/8926/avatar92.jpg?1412715871">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1771941331">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-04</span>
	                            <span class="dsq-commenter-name">Joan</span>
	                        </div>

	                        <div id="dsq-comment-message-1771941331" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1771941331" class="dsq-comment-text">
	                                <p>One of the requests that made me ask this was the one about getting stats, which basically returns counts of the database for showing some numbers in the landing page, where noone is logged in. I guess that request can be public. However, what about a request to get all users? I realize that you don't have any UserController for your API and I am not sure if it is because you didn't need to do it for the purpose of this course or you didn't do it because you didn't want to. I have a UserController to create newUsers (when a user registers), to get all the users, etc but now I'm realizing that the app will only need,  the POST to create a user, the GET to for a user to see its own info, the PUT in case a user wants to edit the email or password, and the DELETE in case a user wants to delete their account. So the GET all users shouldn't probably exist as it would be giving info of other users away. How do you deal with user registration via API?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1771895585" id="dsq-comment-1771895585">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/joanboixados/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11913/8926/avatar92.jpg?1412715871">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1771895585">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-04</span>
	                            <span class="dsq-commenter-name">Joan</span>
	                        </div>

	                        <div id="dsq-comment-message-1771895585" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1771895585" class="dsq-comment-text">
	                                <p>Well, you are so damn right!!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1771877401" id="dsq-comment-1771877401">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1771877401">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-04</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1771877401" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1771877401" class="dsq-comment-text">
	                                <p>Hey Joan!</p><p>Before I try to give some ideas, let me make a quick point :). It will never be possible to allow JavaScript to be able to execute an endpoint that your logged in users cannot execute. If you think about it, even if you gave your JS some token it could pass back, that token will be exposed to the client (since JS is obviously client-side), and your users could always "steal" that and make those requests directly. And if you *stop* caring about trying to make your JS be able to do something that your logged in user cannot, then you *might* arrive at a very easy solution where you don't use any fancy API token stuff. Instead, you just let your JS use your user's session cookie and be done with it :).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1771869937" id="dsq-comment-1771869937">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/joanboixados/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11913/8926/avatar92.jpg?1412715871">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1771869937">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-04</span>
	                            <span class="dsq-commenter-name">Joan</span>
	                        </div>

	                        <div id="dsq-comment-message-1771869937" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1771869937" class="dsq-comment-text">
	                                <p>I'll just make a more conceptual question too: I am developing an API with the idea to be consumed by one js app. The API has some requests that only the app should have access to (and not the users logged in the app). Does it make sense to create an Api Token uniquely for the app itself? I guess that some logic should be done for Silex to give special app credentials to requests using that token and finally, the app would have access to execute certain requests. Or which would be the way to accomplish this?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1771864749" id="dsq-comment-1771864749">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/joanboixados/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11913/8926/avatar92.jpg?1412715871">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1771864749">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-04</span>
	                            <span class="dsq-commenter-name">Joan</span>
	                        </div>

	                        <div id="dsq-comment-message-1771864749" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1771864749" class="dsq-comment-text">
	                                <p>thanks I am getting the proper responses now :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1771859620" id="dsq-comment-1771859620">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1771859620">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-04</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1771859620" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1771859620" class="dsq-comment-text">
	                                <p>Ah, so happy you found it, but that's no fun! And yes, now that I'm looking into this, it looks like a well-known issue. We even have some docs about it for Symfony: <a href="http://disq.us/url?url=http%3A%2F%2Fsymfony.com%2Fdoc%2Fcurrent%2Fcookbook%2Fconfiguration%2Fweb_server_configuration.html%23apache2-with-mod-php-php-cgi%3AXu7qjew7Tgf8KAcO6w1rG_vCqcM&amp;cuid=1175718" rel="nofollow noopener">http://symfony.com/doc/current...</a> (scroll near the bottom of this section).</p><p>Thanks for posting your solution and now you can keep moving :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1771841472" id="dsq-comment-1771841472">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/joanboixados/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11913/8926/avatar92.jpg?1412715871">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1771841472">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-04</span>
	                            <span class="dsq-commenter-name">Joan</span>
	                        </div>

	                        <div id="dsq-comment-message-1771841472" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1771841472" class="dsq-comment-text">
	                                <p>apparently it's a symfony/apache issue removing the header: <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fdingo%2Fapi%2Fissues%2F54%3AYViCuoiGEw9WzwDL1bctAcKFmCE&amp;cuid=1175718" rel="nofollow noopener">https://github.com/dingo/api/i...</a> will update if I make it through</p><p>Yep, sorry for spamming here, if someone has issues with not getting the header you should add this to your .htaccess:</p><p>RewriteRule ^ - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1771836613" id="dsq-comment-1771836613">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/joanboixados/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11913/8926/avatar92.jpg?1412715871">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1771836613">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-04</span>
	                            <span class="dsq-commenter-name">Joan</span>
	                        </div>

	                        <div id="dsq-comment-message-1771836613" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1771836613" class="dsq-comment-text">
	                                <p>hey Ryan! thanks for the prompt response, I was about to edit my question hehe, I managed to narrow it down to the fact that apparently Postman isn't setting the Authorization header.</p><p>I have:</p><p>$request = $event-&gt;getRequest();</p><p>var_dump($request-&gt;headers-&gt;has('Authorization'));</p><p>// there may not be authentication information on this request<br>        if (!$request-&gt;headers-&gt;has('Authorization')) {<br>            return;<br>        }</p><p>in the handle(), the var_dump returns false. So yeah the security listener is being called but enters in that if returning nothing, and I guess that makes getLoggedInUser to return false and the whole request to return "auth required". Now I am trying to find out what could I be doing wrong, because Postman is relatively simple here, I mean I set the Authorization header to "token ABCD123"... also printing the whole $request crashes the app. Kinda stuck right now but don't really have a question this time :P</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1771827459" id="dsq-comment-1771827459">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1771827459">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-04</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1771827459" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1771827459" class="dsq-comment-text">
	                                <p>Hi Joan!</p><p>Don't worry about asking - it's kind of what I hoped for ;). We don't talk about the security stuff in great detail because it's complicated and implementing it isn't directly related to REST. Anyways, let me see if I can help :).</p><p>First, the ApiTokenListener should be called on *every* request to your app. Add a die('fooo'); in the handle() method and make a request to your app. Is this method being called? If you don't see "foo" and just see the response, then this method is *not* being called. You *should* be able to use var_dump (with die) to debug things. If the method is not being called. the first thing to check is that this is all configured in the Application.php file - specifically, there should be a 'api_token' =&gt; true, line (not commented) under the "api" firewall in the configureSecurity method. In theory, if that line is there, then your security listener should be called.</p><p>You can also take a look at the "finish" code in the code download and see if you spot any differences related to security.</p><p>Let me know how it goes!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1771617439" id="dsq-comment-1771617439">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/joanboixados/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11913/8926/avatar92.jpg?1412715871">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1771617439">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-04</span>
	                            <span class="dsq-commenter-name">Joan</span>
	                        </div>

	                        <div id="dsq-comment-message-1771617439" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1771617439" class="dsq-comment-text">
	                                <p>well, I made it this far. I'm afraid I'll have to ask... sorry :P</p><p>So I brought all the Security part into my project and I am trying authentication for a specific request. If I don't send the authorization header I get the same error you got in the previous chapter, the API returns:</p><p>{<br>"detail": "Authentication Required",<br>"status": 401,<br>"type": "http:\/\/localhost:8000\/docs\/errors#authentication_error",<br>"title": "Invalid or missing authentication"}</p><p>which is alright.</p><p>However, now I am trying to get the request to execute properly, by adding an Authorization header with the content "token ABCD123" using Postman. I have defined the ApiToken table with the same fields (I just changed userId for user_id in the entire project for consistency with my other classes) and of course added a row with ABCD123 and user_id pointing to the user who should've access.</p><p>At this point, I keep getting "Authentication Required". My first question would be, how can I debug from here? I cannot use var_dumps because the api will just return the response. I don't even know if the ApiTokenListener is executing at all. I guess I broke something with the Silex Security. If I get Authentication Required it means that either ApiTokenListener was not executed, or that there was no authentication information on the request (which would mean postman fails) or there's no match in the database (there is!!)... I need to get closer to the problem but I'm unsure on how to debug this with postman alone. How would you proceed? Thanks!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_authentication-via-token';var disqus_url = 'https://knpuniversity.com/screencast/rest-ep2/authentication-via-token';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="securing-more-endpoints#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/rest-ep2/authentication-via-token" addthis:title="RESTful APIs in the Real World Course 2">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"rest-ep2","courseIsOwned":false,"chapter":"Authorization via a Token","chapterNumber":5,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'RESTful APIs in the Real World Course 2';
        Core.courseId = 48
        Core.courseIsOwned = false;
        Core.courseSlug = 'rest-ep2';
                    Core.chapterTitle = 'Authorization via a Token';
            Core.chapterNumber = 5;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'authentication-via-token';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":606,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
