<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Symfony Security Voters (free cookies!) > Symfony Security Voters (free cookies!) | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: true,
            courseChapterId: 11407
        };

            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="
**Tutorial has been updated!** See https://knpuniversity.com/screencast/new-in-symfony3/voter

Symfony Voters are the work horses of authorization.
But they&#039;re not well-understood and are totally under-utilized.
So let&#039;s take our wild security business logic and
see how a customer voter can centralize things and
make your controller and templates dead simple.
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Symfony Security Voters (free cookies!)">
<meta property="og:description" content="
**Tutorial has been updated!** See https://knpuniversity.com/screencast/new-in-symfony3/voter

Symfony Voters are the work horses of authorization">
<meta property="og:url" content="http://knpuniversity.com/screencast/symfony-voters/voters">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/symfony-voters:e3f812674232129c5a4d35e314edbb9575f4865d/sf-voters.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="voters#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        1.
                            Symfony Security Voters (free co...
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">Symfony Security Voters (free cookies!)</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


                                <p class="one-tut-warning">
                      <i class="fa fa-lightbulb-o"></i> This course has only one video
                  </p>
              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="voters" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Symfony Security Voters (free cookies!)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 14:28</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <div class="dropdown download-buy-buttons">
              <button class="btn btn-success dropdown-toggle" type="button" id="downloadDropdown" data-toggle="dropdown" aria-expanded="true">
                  <span><i class="fa fa-download"></i></span>
                  <span class="hidden-xs">Download</span>
                  <span class="caret"></span>
              </button>
              <ul class="list-unstyled dropdown-menu pull-right" role="menu" aria-labelledby="downloadDropdown">
                  
                  <li><a href="../get/symfony-voters/code/e3f812674232129c5a4d35e314edbb9575f4865d" class="js-analytics-download" data-download-type="code"><i class="fa fa-code"></i> Course Code</a></li>

                                        <li><a href="http://knpuniversity.com/screencast/symfony-voters/voters/download/video" class="js-analytics-download" data-download-type="video"><i class="fa fa-video-camera"></i> This Video</a></li>
                                        <li><a href="../get/symfony-voters/script/e3f812674232129c5a4d35e314edbb9575f4865d" class="js-analytics-download" data-download-type="script"><i class="fa fa-book"></i> Course Script</a></li>              </ul>
          </div>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Symfony Security Voters (free cookies!)</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>Symfony Security Voters (free cookies!) Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                        <div class="hidden alert alert-danger js-video-not-supported" style="margin-bottom: 10px;">
        <h4>Video not working?</h4>
        It looks like your browser may not support the H264 codec.
        If you're using Linux+Firefox, try a different browser or try
        installing the
        <code>gstreamer0.10-ffmpeg</code>
        <code>gstreamer0.10-plugins-good</code> packages.
        <br/><br/>
        Thanks! This saves us
        from needing to use Flash or encode videos in multiple formats. And that
        let's us get back to making more videos :). But as always, please feel
        free to <a href="../../contact">message us</a>.
    </div>

    <video id="js-video-player" class="video-js vjs-default-skin vjs-big-play-centered "
            controls preload="auto" width="auto" height="auto"
            poster="http://i.vimeocdn.com/video/536617842_960x600.jpg?r=pad">
        <source src="http://player.vimeo.com/external/140213221.hd.mp4?s=0e1822c909e102b00ab139dff8b346c5a7dfa3b7&amp;profile_id=113&amp;oauth2_token_id=308801954" type="video/mp4" data-res="HD" data-default="true" />
        <source src="http://player.vimeo.com/external/140213221.sd.mp4?s=1b2849ac651b5f0ffc451d4772683f0619c44593&amp;profile_id=112&amp;oauth2_token_id=308801954" type="video/mp4" data-res="SD" />
        <p class="vjs-no-js">
            To view this video please enable JavaScript, and consider upgrading to a web browser that
            <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
        </p>
    </video>


                            <div class="end-show js-post-play-wrapper" style="display: none;">
                                <p class="end-show-header">You're Killing it!</p>

                                <div class="text-center overlay-btn">
                                    <!-- This is filled in via JS -->
                                    <a href="voters#" class="btn btn-lg btn-warning js-next-item-anchor"></a>
                                    <div class="js-all-finished-holder" style="display: none; color: #fff;">
                                        Another Tutorial down!<br/><br/>
                                                                                    <a href="../tag/symfony" class="btn btn-lg btn-success">Back to the <i>Symfony 3</i> Track</a>
                                                                            </div>
                                </div>

                                <p class="end-show-link js-video-repeat"><a class="knp-color-white link-no-underline" href="voters#">
                                    <i class="fa fa-repeat"></i> Watch again
                                </a></p>
                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="resume">
            Finish Course <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="voters#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="voters#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (22)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script script-content">
                                                                                        <a href="https://github.com/knpuniversity/symfony-voters/edit/master/knpu/voters.rst" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    
  <div class="section" id="symfony-security-voters-free-cookies">
<h1>Symfony Security Voters (free cookies!)<a class="headerlink" href="voters#symfony-security-voters-free-cookies" title="Permalink to this headline">¶</a></h1>
<div class="admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last">Voters have been updated in Symfony 2.8! Check out our updated tutorial
about them: <a class="reference external" href="https://knpuniversity.com/screencast/new-in-symfony3/voter">The new Voter Class</a>.</p>
</div>
<p>Hey guys! It&#8217;s getting a little colder in Michigan, Leanna and I are doing
a little bit of baking, and baking makes me think of security. Specifically
the kind of security that says: &#8220;no you can&#8217;t eat my cookie because I baked it&#8221;.
And it actually has use inside of our applications because a lot of times
we need to figure out whether the current user has access to edit, delete
or view something. It&#8217;s because of this we&#8217;ve cooked up a delicious little
application which is going to show you one of my favorite and most underutilized
features in Symfony: security voters.</p>
<div class="section" id="today-s-application-deliciouscookie">
<h2>Today&#8217;s Application: DeliciousCookie<a class="headerlink" href="voters#today-s-application-deliciouscookie" title="Permalink to this headline">¶</a></h2>
<p>So I&#8217;ll login using username <tt class="docutils literal"><span class="pre">ryan</span></tt> password <tt class="docutils literal"><span class="pre">cookie</span></tt> and basically we
only have one page in this app which shows us all of these cookies that Ryan
and Leanna have baked. Each of those has a &#8220;nom&#8221; button which allows me to
eat the cookie, shows me a nice message and deletes it from the database. Really
high-tech stuff.</p>
<p>The application is pretty straight forward: we have an <tt class="docutils literal"><span class="pre">AppBundle</span></tt> of course
and inside of there we have a single entity called <tt class="docutils literal"><span class="pre">DeliciousCookie</span></tt>. The
most important thing about <tt class="docutils literal"><span class="pre">DeliciousCookie</span></tt> is that there&#8217;s a <tt class="docutils literal"><span class="pre">bakerUsername</span></tt>
property which stores who actually baked this cookie. To keep this application
simple I don&#8217;t have a <tt class="docutils literal"><span class="pre">User</span></tt> entity so I&#8217;m just using a username string
there:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Entity/DeliciousCookie.php</span>
<span class="c1">// ...</span>

<span class="sd">/** @ORM\Entity */</span>
<span class="k">class</span> <span class="nc">DeliciousCookie</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="sd">/**</span>
<span class="sd">     * @ORM\Column()</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$flavor</span><span class="p">;</span>

    <span class="sd">/**</span>
<span class="sd">     * @ORM\Column(name=&quot;baker_username&quot;)</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$bakerUsername</span><span class="p">;</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Right now, anybody can eat any cookie no matter who baked it. But our goal
is to make it so that you can only eat cookies that you&#8217;ve baked. The
<tt class="docutils literal"><span class="pre">CookieController</span></tt> holds the page that actually lists the cookies and then
there&#8217;s one POST-only endpoint which handles actually deleting the cookie
in the database and setting that nice flash message:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Controller/CookieController.php</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">CookieController</span> <span class="k">extends</span> <span class="nx">Controller</span>
<span class="p">{</span>
    <span class="sd">/** @Route(&quot;/cookies&quot;, name=&quot;cookie_list&quot;) */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">indexAction</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$cookies</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDoctrine</span><span class="p">()</span>
            <span class="o">-&gt;</span><span class="na">getRepository</span><span class="p">(</span><span class="s1">&#39;AppBundle:DeliciousCookie&#39;</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">findAll</span><span class="p">();</span>

        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;Cookie/index.html.twig&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
            <span class="s1">&#39;cookies&#39;</span> <span class="o">=&gt;</span> <span class="nv">$cookies</span><span class="p">,</span>
        <span class="p">));</span>
    <span class="p">}</span>

    <span class="sd">/**</span>
<span class="sd">     * @Route(&quot;/cookies/nom/{id}&quot;, name=&quot;cookie_nom&quot;)</span>
<span class="sd">     * @Method(&quot;POST&quot;)</span>
<span class="sd">     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">nomAction</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$id</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$em</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDoctrine</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getManager</span><span class="p">();</span>
        <span class="nv">$cookie</span> <span class="o">=</span> <span class="nv">$em</span><span class="o">-&gt;</span><span class="na">getRepository</span><span class="p">(</span><span class="s1">&#39;AppBundle:DeliciousCookie&#39;</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">find</span><span class="p">(</span><span class="nv">$id</span><span class="p">);</span>

        <span class="c1">// ...</span>

        <span class="nv">$em</span><span class="o">-&gt;</span><span class="na">remove</span><span class="p">(</span><span class="nv">$cookie</span><span class="p">);</span>
        <span class="nv">$em</span><span class="o">-&gt;</span><span class="na">flush</span><span class="p">();</span>

        <span class="c1">// some flash-setting stuff...</span>

        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$url</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The only other interesting thing is <tt class="docutils literal"><span class="pre">security.yml</span></tt>. We have two hard-coded
users: <tt class="docutils literal"><span class="pre">ryan</span></tt> and <tt class="docutils literal"><span class="pre">leanna</span></tt>, and I also have an <tt class="docutils literal"><span class="pre">access_control</span></tt> which
requires login for everything under <tt class="docutils literal"><span class="pre">/cookies</span></tt>, which is why we had to
login before we saw our cookie list. We take cookie security very seriously:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># app/config/security.yml</span>
<span class="l-Scalar-Plain">security</span><span class="p-Indicator">:</span>
    <span class="c1"># ...</span>

    <span class="l-Scalar-Plain">providers</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">in_memory</span><span class="p-Indicator">:</span>
            <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span>
                <span class="l-Scalar-Plain">users</span><span class="p-Indicator">:</span>
                    <span class="l-Scalar-Plain">ryan</span><span class="p-Indicator">:</span>  <span class="p-Indicator">{</span> <span class="nv">password</span><span class="p-Indicator">:</span> <span class="nv">cookie</span><span class="p-Indicator">,</span> <span class="nv">roles</span><span class="p-Indicator">:</span> <span class="s">&#39;ROLE_COOKIE_ENJOYER&#39;</span> <span class="p-Indicator">}</span>
                    <span class="l-Scalar-Plain">leanna</span><span class="p-Indicator">:</span> <span class="p-Indicator">{</span> <span class="nv">password</span><span class="p-Indicator">:</span> <span class="nv">cookie</span><span class="p-Indicator">,</span> <span class="nv">roles</span><span class="p-Indicator">:</span> <span class="s">&#39;ROLE_COOKIE_MONSTER&#39;</span> <span class="p-Indicator">}</span>


    <span class="l-Scalar-Plain">firewalls</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">default</span><span class="p-Indicator">:</span>
            <span class="l-Scalar-Plain">pattern</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">^/</span>
            <span class="l-Scalar-Plain">anonymous</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">~</span>
            <span class="l-Scalar-Plain">form_login</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">~</span>
            <span class="l-Scalar-Plain">logout</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">~</span>

    <span class="l-Scalar-Plain">access_control</span><span class="p-Indicator">:</span>
        <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">path</span><span class="p-Indicator">:</span> <span class="nv">^/cookies</span><span class="p-Indicator">,</span> <span class="nv">roles</span><span class="p-Indicator">:</span> <span class="nv">IS_AUTHENTICATED_FULLY</span> <span class="p-Indicator">}</span>
</pre></div>
</div>
</div>
<div class="section" id="preventing-access-the-easy-way">
<h2>Preventing Access: The Easy Way<a class="headerlink" href="voters#preventing-access-the-easy-way" title="Permalink to this headline">¶</a></h2>
<p>Preventing me from eating a cookie baked by someone else is actually pretty
simple. And what we should do first is just put the logic into our controller.
So I&#8217;ll do that here: if the baker&#8217;s username does not equal the current user&#8217;s
username, we&#8217;re going to throw that <tt class="docutils literal"><span class="pre">AccessDeniedException</span></tt> and say: &#8220;Hey
you didn&#8217;t bake this!&#8221;:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Controller/CookieController.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">nomAction</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$id</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$em</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDoctrine</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getManager</span><span class="p">();</span>
    <span class="nv">$cookie</span> <span class="o">=</span> <span class="nv">$em</span><span class="o">-&gt;</span><span class="na">getRepository</span><span class="p">(</span><span class="s1">&#39;AppBundle:DeliciousCookie&#39;</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">find</span><span class="p">(</span><span class="nv">$id</span><span class="p">);</span>

    <span class="c1">// ...</span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$cookie</span><span class="o">-&gt;</span><span class="na">getBakerUsername</span><span class="p">()</span> <span class="o">!=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getUser</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getUsername</span><span class="p">())</span> <span class="p">{</span>
        <span class="k">throw</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createAccessDeniedException</span><span class="p">(</span>
            <span class="s1">&#39;You did not bake this delicious cookie!&#39;</span>
        <span class="p">);</span>
    <span class="p">}</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Now if we try to eat one of Leanna&#8217;s cookies she catches us with a nice clear
message. And of course in the production environment, this would be your 403
error page.</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">See <a class="reference external" href="https://knpuniversity.com/screencast/symfony2-ep3/error-pages">Error Pages</a> for how to customize your 404, 403 and 500 error
pages in production.</p>
</div>
<p>So what&#8217;s the problem with this? The problem is that we also need to go into
our Twig template and repeat the logic there:</p>
<div class="highlight-html+jinja"><div class="highlight"><pre><span class="c">{# app/Resources/views/Cookie/index.html.twig #}</span>
<span class="c">{# ... #}</span>

<span class="cp">{%</span> <span class="k">for</span> <span class="nv">cookie</span> <span class="k">in</span> <span class="nv">cookies</span> <span class="cp">%}</span>
    <span class="c">{# ... #}</span>

    <span class="cp">{%</span> <span class="k">if</span> <span class="nv">cookie.bakerUsername</span> <span class="o">==</span> <span class="nv">app.user.username</span> <span class="cp">%}</span>
        <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">path</span><span class="o">(</span><span class="s1">&#39;cookie_nom&#39;</span><span class="o">,</span> <span class="o">{</span><span class="s1">&#39;id&#39;</span><span class="o">:</span> <span class="nv">cookie.id</span><span class="o">})</span> <span class="cp">}}</span><span class="s">&quot;</span> <span class="na">method=</span><span class="s">&quot;POST&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">class=</span><span class="s">&quot;btn&quot;</span><span class="nt">&gt;</span>NOM! <span class="nt">&lt;i</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-cutlery&quot;</span><span class="nt">&gt;&lt;/i&gt;&lt;/button&gt;</span>
        <span class="nt">&lt;/form&gt;</span>
    <span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span>

    <span class="c">{# ... #}</span>
<span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>
</pre></div>
</div>
<p>And when it comes to security logic, especially security logic that protects
cookies, we don&#8217;t want to repeat it across your application. If you change
something later and forget to update part of your security, you&#8217;re going
to have a big problem. But for now, I&#8217;ll do it manually and we can see that
the nom button hides or shows based on which cookies I actually baked.</p>
</div>
<div class="section" id="creating-a-voter">
<h2>Creating a Voter<a class="headerlink" href="voters#creating-a-voter" title="Permalink to this headline">¶</a></h2>
<p>So the goal of a voter is to allow us to centralize that logic so we only
have it in one spot. I&#8217;ll create a <tt class="docutils literal"><span class="pre">Security</span></tt> directory which is purely
for organization and then put a <tt class="docutils literal"><span class="pre">CookieVoter</span></tt> inside of it. I&#8217;m using Symfony 2.6
for this project, which comes with a fantastic new <a class="reference external" href="http://symfony.com/blog/new-in-symfony-2-6-simpler-security-voters">AbstractVoter</a> class
which I&#8217;m going to use. If you&#8217;re using Symfony 2.5 or lower, you can actually
<a class="reference external" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Security/Core/Authorization/Voter/AbstractVoter.php">find this class on the internet</a> and just use it in your project today.
Just update the namespace to match your project and then extend it. This
class doesn&#8217;t have any external dependencies so it&#8217;s going to work just fine
in whatever Symfony version you have.</p>
<p>So I&#8217;ll extend it and then use a really nice feature in PHPstorm to tell
me the three abstract methods that I need to fill in:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Security/CookieVoter.php</span>
<span class="k">namespace</span> <span class="nx">AppBundle\Security</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Security\Core\Authorization\Voter\AbstractVoter</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Security\Core\User\UserInterface</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">CookieVoter</span> <span class="k">extends</span> <span class="nx">AbstractVoter</span>
<span class="p">{</span>
    <span class="k">protected</span> <span class="k">function</span> <span class="nf">getSupportedClasses</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// todo</span>
    <span class="p">}</span>

    <span class="k">protected</span> <span class="k">function</span> <span class="nf">getSupportedAttributes</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// todo</span>
    <span class="p">}</span>

    <span class="k">protected</span> <span class="k">function</span> <span class="nf">isGranted</span><span class="p">(</span><span class="nv">$attribute</span><span class="p">,</span> <span class="nv">$object</span><span class="p">,</span> <span class="nv">$user</span> <span class="o">=</span> <span class="k">null</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// todo</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="but-what-does-a-voter-do">
<h2>But What does a Voter Do?<a class="headerlink" href="voters#but-what-does-a-voter-do" title="Permalink to this headline">¶</a></h2>
<p>So let me back up because I haven&#8217;t actually told you what these voters do.
First let me show you how I want our code to look when we&#8217;re finished. Instead
of doing the logic manually I&#8217;m going to use the <tt class="docutils literal"><span class="pre">isGranted</span></tt> function, pass
it a  string: <tt class="docutils literal"><span class="pre">NOM</span></tt> which is something I&#8217;m making up &#8211; you&#8217;ll see why
it&#8217;s important in a second &#8211; and then pass the <tt class="docutils literal"><span class="pre">$cookie</span></tt> object as the
second argument to  <tt class="docutils literal"><span class="pre">isGranted</span></tt>:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Controller/CookieController.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">nomAction</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$id</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$em</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDoctrine</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getManager</span><span class="p">();</span>
    <span class="nv">$cookie</span> <span class="o">=</span> <span class="nv">$em</span><span class="o">-&gt;</span><span class="na">getRepository</span><span class="p">(</span><span class="s1">&#39;AppBundle:DeliciousCookie&#39;</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">find</span><span class="p">(</span><span class="nv">$id</span><span class="p">);</span>

    <span class="c1">// ...</span>

    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">isGranted</span><span class="p">(</span><span class="s1">&#39;NOM&#39;</span><span class="p">,</span> <span class="nv">$cookie</span><span class="p">))</span> <span class="p">{</span>
        <span class="k">throw</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createAccessDeniedException</span><span class="p">(</span>
            <span class="s1">&#39;You did not bake this delicious cookie!&#39;</span>
        <span class="p">);</span>
    <span class="p">}</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The <tt class="docutils literal"><span class="pre">isGranted</span></tt> shortcut is new to 2.6 but all it does is go out to the
<tt class="docutils literal"><span class="pre">security.context</span></tt> service and call <tt class="docutils literal"><span class="pre">isGranted</span></tt> on it. So this is exactly
what you&#8217;re using in earlier projects. If you don&#8217;t have the shortcut method
just  go out to the <tt class="docutils literal"><span class="pre">security.context</span></tt> service manually.</p>
<p>Behind the scenes, whenever you use the <tt class="docutils literal"><span class="pre">isGranted</span></tt> function, Symfony calls
out to a bunch of voters and asks each of them if they can figure out whether
or not we should have access. For example, whenever you pass <tt class="docutils literal"><span class="pre">ROLE_SOMETHING</span></tt>
to <tt class="docutils literal"><span class="pre">`isGranted`</span></tt> like <tt class="docutils literal"><span class="pre">`ROLE_USER</span></tt>, there&#8217;s a <tt class="docutils literal"><span class="pre">RoleVoter`</span></tt> class which
tries to figure out whether the current user has whatever role you&#8217;re asking
about.</p>
<p>What most people don&#8217;t realize is that you can invent these strings. So in
this case I&#8217;m just inventing <tt class="docutils literal"><span class="pre">NOM</span></tt> and we&#8217;re going to add a new voter into
that system that says: &#8220;Hey Symfony! Whenever the <tt class="docutils literal"><span class="pre">NOM</span></tt> attribute is passed
to <tt class="docutils literal"><span class="pre">isGranted</span></tt>, call me!&#8221; To get that to work we just need to fill in the
<tt class="docutils literal"><span class="pre">getSupportedClasses</span></tt> and the <tt class="docutils literal"><span class="pre">getSupportedAttributes</span></tt> functions.</p>
</div>
<div class="section" id="filling-in-cookievoter">
<h2>Filling in CookieVoter<a class="headerlink" href="voters#filling-in-cookievoter" title="Permalink to this headline">¶</a></h2>
<p>First, in <tt class="docutils literal"><span class="pre">getSupportedClasses</span></tt>, were going to return the <tt class="docutils literal"><span class="pre">DeliciousCookie</span></tt>
class  string:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Security/CookieVoter.php</span>
<span class="c1">// ...</span>

<span class="k">protected</span> <span class="k">function</span> <span class="nf">getSupportedClasses</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;AppBundle\Entity\DeliciousCookie&#39;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This tells Symfony that when we pass a <tt class="docutils literal"><span class="pre">DeliciousCookie</span></tt> object to <tt class="docutils literal"><span class="pre">isGranted</span></tt>,
our voter should be called. We&#8217;ll do the same thing in <tt class="docutils literal"><span class="pre">getSupportedAttributes</span></tt>
and we&#8217;ll return an array with the <tt class="docutils literal"><span class="pre">NOM</span></tt> string:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Security/CookieVoter.php</span>
<span class="c1">// ...</span>

<span class="k">protected</span> <span class="k">function</span> <span class="nf">getSupportedAttributes</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;NOM&#39;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This tells Symfony that when we pass <tt class="docutils literal"><span class="pre">NOM</span></tt> to <tt class="docutils literal"><span class="pre">isGranted</span></tt> that <em>our</em>
voter should be called. Whenever both of these functions return <tt class="docutils literal"><span class="pre">true</span></tt>,
the <tt class="docutils literal"><span class="pre">`isGranted`</span></tt> function at the bottom of this class is going to be called.</p>
<p>For now I&#8217;ll just use the glorious <tt class="docutils literal"><span class="pre">var_dump</span></tt> to print the attribute object
and  user and I&#8217;m going to put a die after that:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Security/CookieVoter.php</span>
<span class="c1">// ...</span>

<span class="k">protected</span> <span class="k">function</span> <span class="nf">isGranted</span><span class="p">(</span><span class="nv">$attribute</span><span class="p">,</span> <span class="nv">$object</span><span class="p">,</span> <span class="nv">$user</span> <span class="o">=</span> <span class="k">null</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nb">var_dump</span><span class="p">(</span><span class="nv">$attribute</span><span class="p">,</span> <span class="nv">$object</span><span class="p">,</span> <span class="nv">$user</span><span class="p">);</span><span class="k">die</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="registering-and-tagging-your-voter">
<h2>Registering and Tagging your Voter<a class="headerlink" href="voters#registering-and-tagging-your-voter" title="Permalink to this headline">¶</a></h2>
<p>At this point, other than the crazy debug code I have at the bottom, our
voter class is ready to go. But Symfony is not going to automatically find
it. To tell Symfony about our new voter we&#8217;re going to need to register it
as a service and give it a special tag.</p>
<p>I have an <tt class="docutils literal"><span class="pre">app/config/services.yml</span></tt> file which I&#8217;m importing from my <tt class="docutils literal"><span class="pre">config.yml</span></tt>
file, so we&#8217;ll put the service there:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># app/config/services.yml</span>
<span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
    <span class="l-Scalar-Plain">app_cookie_voter</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">class</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">AppBundle\Security\CookieVoter</span>
        <span class="l-Scalar-Plain">tags</span><span class="p-Indicator">:</span>
            <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">name</span><span class="p-Indicator">:</span> <span class="nv">security.voter</span> <span class="p-Indicator">}</span>
</pre></div>
</div>
<p>The name doesn&#8217;t matter but try to keep it relatively short. And the autocompleting
I&#8217;m getting is from the nice <a class="reference external" href="http://confluence.jetbrains.com/display/PhpStorm/Getting+Started+-+Symfony+Development+using+PhpStorm">Symfony2 plugin for PHPStorm</a>. Our class
doesn&#8217;t have any constructor arguments yet so I&#8217;m just leaving that key off.</p>
<p>The really important part is <tt class="docutils literal"><span class="pre">tags</span></tt>. You need to add one tag whose name
is <tt class="docutils literal"><span class="pre">security.voter</span></tt>. This is like raising our hand for our voter and saying:
&#8220;Hey Symfony, whenever somebody calls <tt class="docutils literal"><span class="pre">isGranted</span></tt> I want <em>our</em> voter to
actually be called.&#8221;</p>
<p>So we have the voter, we have the service with the tag so let&#8217;s try it out!
When we refresh... Bam! We see things dumped out: proof that our voter is
being called.</p>
</div>
<div class="section" id="adding-your-cookie-protecting-biz-logic">
<h2>Adding your Cookie-Protecting Biz Logic<a class="headerlink" href="voters#adding-your-cookie-protecting-biz-logic" title="Permalink to this headline">¶</a></h2>
<p>Now here&#8217;s where things get really really cool. Now in theory because of
my <tt class="docutils literal"><span class="pre">access_control</span></tt>, this voter should never be called unless the user
is logged in. But just in case it is let&#8217;s use <tt class="docutils literal"><span class="pre">is_object</span></tt> to check to
see if the  user is actually logged in:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Security/CookieVoter.php</span>
<span class="c1">// ...</span>

<span class="k">protected</span> <span class="k">function</span> <span class="nf">isGranted</span><span class="p">(</span><span class="nv">$attribute</span><span class="p">,</span> <span class="nv">$object</span><span class="p">,</span> <span class="nv">$user</span> <span class="o">=</span> <span class="k">null</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">is_object</span><span class="p">(</span><span class="nv">$user</span><span class="p">))</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// ... todo</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Remember we need to do this because in Symfony 2 if you&#8217;re anonymous the
user is actually set to a string. From here it&#8217;s pure business logic: if
the Baker&#8217;s username equals the user&#8217;s username let&#8217;s give them access.
Otherwise let&#8217;s not give them access:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Security/CookieVoter.php</span>
<span class="c1">// ...</span>

<span class="k">protected</span> <span class="k">function</span> <span class="nf">isGranted</span><span class="p">(</span><span class="nv">$attribute</span><span class="p">,</span> <span class="nv">$object</span><span class="p">,</span> <span class="nv">$user</span> <span class="o">=</span> <span class="k">null</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">is_object</span><span class="p">(</span><span class="nv">$user</span><span class="p">))</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$object</span><span class="o">-&gt;</span><span class="na">getBakerUsername</span><span class="p">()</span> <span class="o">==</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">getUsername</span><span class="p">())</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>So let&#8217;s refresh the &#8220;nom&#8221; request ... and it works! We&#8217;re logged in as Ryan
and we are actually nomming a Ryan cookie so this make sense. Remember the
goal of this was to centralize our logic. So now we can go into our Twig
template and do the exact same thing there. We&#8217;ll use the <tt class="docutils literal"><span class="pre">is_granted</span></tt>
function, pass it nom and pass it the <tt class="docutils literal"><span class="pre">cookie</span></tt> object:</p>
<div class="highlight-html+jinja"><div class="highlight"><pre><span class="c">{# app/Resources/views/Cookie/index.html.twig #}</span>
<span class="c">{# ... #}</span>

<span class="cp">{%</span> <span class="k">for</span> <span class="nv">cookie</span> <span class="k">in</span> <span class="nv">cookies</span> <span class="cp">%}</span>
    <span class="c">{# ... #}</span>

    <span class="cp">{%</span> <span class="k">if</span> <span class="nv">is_granted</span><span class="o">(</span><span class="s1">&#39;NOM&#39;</span><span class="o">,</span> <span class="nv">cookie</span><span class="o">)</span> <span class="cp">%}</span>
        <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">path</span><span class="o">(</span><span class="s1">&#39;cookie_nom&#39;</span><span class="o">,</span> <span class="o">{</span><span class="s1">&#39;id&#39;</span><span class="o">:</span> <span class="nv">cookie.id</span><span class="o">})</span> <span class="cp">}}</span><span class="s">&quot;</span> <span class="na">method=</span><span class="s">&quot;POST&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">class=</span><span class="s">&quot;btn&quot;</span><span class="nt">&gt;</span>NOM! <span class="nt">&lt;i</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-cutlery&quot;</span><span class="nt">&gt;&lt;/i&gt;&lt;/button&gt;</span>
        <span class="nt">&lt;/form&gt;</span>
    <span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span>

    <span class="c">{# ... #}</span>
<span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>
</pre></div>
</div>
<p>And as you might expect, when we refresh, we see the exact same results as
before except everything is pulling from that central voter.</p>
</div>
<div class="section" id="giving-a-role-cookie-monster-user-special-access">
<h2>Giving a <tt class="docutils literal"><span class="pre">ROLE_COOKIE_MONSTER</span></tt> User Special Access<a class="headerlink" href="voters#giving-a-role-cookie-monster-user-special-access" title="Permalink to this headline">¶</a></h2>
<p>Now with everything centralized I want to make things a little bit more
difficult. In <tt class="docutils literal"><span class="pre">security.yml</span></tt> I&#8217;ve given the <tt class="docutils literal"><span class="pre">leanna</span></tt> user a special role
called <tt class="docutils literal"><span class="pre">ROLE_COOKIE_MONSTER</span></tt>:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># app/config/security.yml</span>
<span class="l-Scalar-Plain">security</span><span class="p-Indicator">:</span>
    <span class="c1"># ...</span>

    <span class="l-Scalar-Plain">providers</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">in_memory</span><span class="p-Indicator">:</span>
            <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span>
                <span class="l-Scalar-Plain">users</span><span class="p-Indicator">:</span>
                    <span class="l-Scalar-Plain">ryan</span><span class="p-Indicator">:</span>  <span class="p-Indicator">{</span> <span class="nv">password</span><span class="p-Indicator">:</span> <span class="nv">cookie</span><span class="p-Indicator">,</span> <span class="nv">roles</span><span class="p-Indicator">:</span> <span class="s">&#39;ROLE_COOKIE_ENJOYER&#39;</span> <span class="p-Indicator">}</span>
                    <span class="l-Scalar-Plain">leanna</span><span class="p-Indicator">:</span> <span class="p-Indicator">{</span> <span class="nv">password</span><span class="p-Indicator">:</span> <span class="nv">cookie</span><span class="p-Indicator">,</span> <span class="nv">roles</span><span class="p-Indicator">:</span> <span class="s">&#39;ROLE_COOKIE_MONSTER&#39;</span> <span class="p-Indicator">}</span>
</pre></div>
</div>
<p>If you have this role, I want to make it so you can eat any cookie even if
you didn&#8217;t bake it. Seems like a jerk thing to do but let&#8217;s try it out.</p>
<p>To do this, we basically want to call the <tt class="docutils literal"><span class="pre">isGranted</span></tt> function on the security
system from inside of our voter. Now, out-of-the-box we don&#8217;t have access
to do this, so we&#8217;re going to need to do a little bit of dependency injection.
If you&#8217;re thinking that we&#8217;ll inject the <tt class="docutils literal"><span class="pre">security.context</span></tt>, you&#8217;re
basically right. The only issue is that because we&#8217;re inside of the security
system if we try to inject the security system into here we&#8217;re going to get a
circular dependency. Instead, I&#8217;m going to inject the entire container, which,
yes is typically a bad practice, but in this case we can&#8217;t avoid it and it&#8217;s
not going to kill us:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Security/CookieVoter.php</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">CookieVoter</span> <span class="k">extends</span> <span class="nx">AbstractVoter</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$container</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">(</span><span class="nx">ContainerInterface</span> <span class="nv">$container</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">container</span> <span class="o">=</span> <span class="nv">$container</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Head back to <tt class="docutils literal"><span class="pre">services.yml</span></tt> add an arguments key now that we have a
<tt class="docutils literal"><span class="pre">__construct</span></tt> function and use <tt class="docutils literal"><span class="pre">&#64;service_container</span></tt> to inject the entire
container:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># app/config/services.yml</span>
<span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
    <span class="l-Scalar-Plain">app_cookie_voter</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">class</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">AppBundle\Security\CookieVoter</span>
        <span class="l-Scalar-Plain">arguments</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="s">&quot;@service_container&quot;</span><span class="p-Indicator">]</span>
        <span class="l-Scalar-Plain">tags</span><span class="p-Indicator">:</span>
            <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">name</span><span class="p-Indicator">:</span> <span class="nv">security.voter</span> <span class="p-Indicator">}</span>
</pre></div>
</div>
<p>Back down in <tt class="docutils literal"><span class="pre">isGranted</span></tt> we can easily add the logic we need:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Security/CookieVoter.php</span>
<span class="c1">// ...</span>

<span class="k">protected</span> <span class="k">function</span> <span class="nf">isGranted</span><span class="p">(</span><span class="nv">$attribute</span><span class="p">,</span> <span class="nv">$object</span><span class="p">,</span> <span class="nv">$user</span> <span class="o">=</span> <span class="k">null</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">is_object</span><span class="p">(</span><span class="nv">$user</span><span class="p">))</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// in 2.5 and earlier, use this:</span>
    <span class="c1">// $this-&gt;container-&gt;get(&#39;security.context&#39;);</span>
    <span class="c1">// security.context exists in 2.6, but is deprecated</span>
    <span class="nv">$authChecker</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">container</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;security.authorization_checker&#39;</span><span class="p">);</span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$authChecker</span><span class="o">-&gt;</span><span class="na">isGranted</span><span class="p">(</span><span class="s1">&#39;ROLE_COOKIE_MONSTER&#39;</span><span class="p">))</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$object</span><span class="o">-&gt;</span><span class="na">getBakerUsername</span><span class="p">()</span> <span class="o">==</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">getUsername</span><span class="p">())</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Now I&#8217;m using Symfony 2.6 which gives us a brand-new service called <tt class="docutils literal"><span class="pre">security.authorization_checker</span></tt>.
This is actually a new service for Symfony 2.6. Before it was known as
<tt class="docutils literal"><span class="pre">security.context</span></tt>. Now don&#8217;t worry because <tt class="docutils literal"><span class="pre">security.context</span></tt> still
exists and will still exist until Symfony 3.0. So if you&#8217;re on Symfony 2.6
use the new service name. If you&#8217;re on 2.5 or earlier just use <tt class="docutils literal"><span class="pre">security.context</span></tt>.
The nice thing is that both of them have the same <tt class="docutils literal"><span class="pre">isGranted</span></tt> function
on it which we can use now to check to see if the user has the <tt class="docutils literal"><span class="pre">ROLE_COOKIE_MONSTER</span></tt>
role. If they do, let&#8217;s give them access.</p>
<p>When we try it out there&#8217;s no difference and that&#8217;s a good thing. I&#8217;m logged
in as <tt class="docutils literal"><span class="pre">ryan</span></tt> so I don&#8217;t actually have this role. So I&#8217;ll logout. Let&#8217;s
login as <tt class="docutils literal"><span class="pre">leanna</span></tt>, password <tt class="docutils literal"><span class="pre">cookie</span></tt>, and.....COOKIES FOR EVERYBODY!</p>
</div>
<div class="section" id="adding-multiple-actions-nom-donate-to-1-voter">
<h2>Adding Multiple Actions (NOM, DONATE) to 1 Voter<a class="headerlink" href="voters#adding-multiple-actions-nom-donate-to-1-voter" title="Permalink to this headline">¶</a></h2>
<p>I want to do one more crazy thing. Let&#8217;s pretend like we want to be able
to donate our cookies to friends. Now I know that&#8217;s crazy why would you donate
cookies to other people? But let&#8217;s just try it out. I don&#8217;t actually have the
logic for this but that&#8217;s okay. Let&#8217;s go into <tt class="docutils literal"><span class="pre">index.html.twig</span></tt> and add
a link for this. We&#8217;re just going to see if we can get the link to hide and
show correctly:</p>
<div class="highlight-html+jinja"><div class="highlight"><pre><span class="c">{# app/Resources/views/Cookie/index.html.twig #}</span>
<span class="c">{# ... #}</span>

<span class="cp">{%</span> <span class="k">for</span> <span class="nv">cookie</span> <span class="k">in</span> <span class="nv">cookies</span> <span class="cp">%}</span>
    <span class="c">{# ... #}</span>

    <span class="nt">&lt;td&gt;</span>
        <span class="cp">{%</span> <span class="k">if</span> <span class="nv">is_granted</span><span class="o">(</span><span class="s1">&#39;DONATE&#39;</span><span class="o">,</span> <span class="nv">cookie</span><span class="o">)</span> <span class="cp">%}</span>
            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;</span>Donate<span class="nt">&lt;/a&gt;</span>
        <span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span>
    <span class="nt">&lt;/td&gt;</span>

    <span class="c">{# ... #}</span>
<span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>
</pre></div>
</div>
<p>Just like before I&#8217;m inventing this <tt class="docutils literal"><span class="pre">DONATE</span></tt> string. If we don&#8217;t do anything
else and refresh, we&#8217;ll actually see that the link doesn&#8217;t show up. If no
voters vote on our attribute, then by default it&#8217;s going to return false.
Now why is our voter not voting on it? Because of the <tt class="docutils literal"><span class="pre">getSupportedAttributes</span></tt>
function.</p>
<p>Let&#8217;s update that to return true for both <tt class="docutils literal"><span class="pre">NOM</span></tt> and <tt class="docutils literal"><span class="pre">DONUT</span></tt>...I mean
<tt class="docutils literal"><span class="pre">DONATE</span></tt>:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Security/CookieVoter.php</span>
<span class="c1">// ...</span>

<span class="k">protected</span> <span class="k">function</span> <span class="nf">getSupportedAttributes</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;NOM&#39;</span><span class="p">,</span> <span class="s1">&#39;DONATE&#39;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Now <tt class="docutils literal"><span class="pre">isGranted</span></tt> is going to be handling two different attributes, <tt class="docutils literal"><span class="pre">NOM</span></tt>
and <tt class="docutils literal"><span class="pre">DONATE</span></tt>. This is the perfect situation for everyone&#8217;s beloved switch
case statement. So let&#8217;s set that up, and we have two cases one for <tt class="docutils literal"><span class="pre">NOM</span></tt>
and one for <tt class="docutils literal"><span class="pre">DONATE</span></tt>. And the logic for <tt class="docutils literal"><span class="pre">NOM</span></tt> is exactly what we had before
so I&#8217;ll just copy that, paste that up and if it doesn&#8217;t get into either those
if statements we&#8217;ll return false:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">protected</span> <span class="k">function</span> <span class="nf">isGranted</span><span class="p">(</span><span class="nv">$attribute</span><span class="p">,</span> <span class="nv">$object</span><span class="p">,</span> <span class="nv">$user</span> <span class="o">=</span> <span class="k">null</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">is_object</span><span class="p">(</span><span class="nv">$user</span><span class="p">))</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="nv">$authChecker</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">container</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;security.authorization_checker&#39;</span><span class="p">);</span>

    <span class="k">switch</span> <span class="p">(</span><span class="nv">$attribute</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">case</span> <span class="s1">&#39;NOM&#39;</span><span class="o">:</span>
            <span class="k">if</span> <span class="p">(</span><span class="nv">$authChecker</span><span class="o">-&gt;</span><span class="na">isGranted</span><span class="p">(</span><span class="s1">&#39;ROLE_COOKIE_MONSTER&#39;</span><span class="p">))</span> <span class="p">{</span>
                <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">if</span> <span class="p">(</span><span class="nv">$object</span><span class="o">-&gt;</span><span class="na">getBakerUsername</span><span class="p">()</span> <span class="o">==</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">getUsername</span><span class="p">())</span> <span class="p">{</span>
                <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
        <span class="k">case</span> <span class="s1">&#39;DONATE&#39;</span><span class="o">:</span>
            <span class="c1">// todo ...</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>For the <tt class="docutils literal"><span class="pre">DONATE</span></tt> case, again, we can do literally anything we want to inside
of this. If we want to go out and make crazy database queries to figure out
something we can do that. In our case since chocolate cookies are the most
delicious, let&#8217;s only give away cookies that aren&#8217;t chocolate. So, for my crazy
business logic I&#8217;m just going to see if the word chocolate appears in the name
of the cookie. If it does I&#8217;m not going to give it away. But if it doesn&#8217;t you
can have it:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">switch</span> <span class="p">(</span><span class="nv">$attribute</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">case</span> <span class="s1">&#39;NOM&#39;</span><span class="o">:</span>
        <span class="c1">// ...</span>
    <span class="k">case</span> <span class="s1">&#39;DONATE&#39;</span><span class="o">:</span>
        <span class="k">return</span> <span class="nb">stripos</span><span class="p">(</span><span class="nv">$object</span><span class="o">-&gt;</span><span class="na">getFlavor</span><span class="p">(),</span> <span class="s1">&#39;chocolate&#39;</span><span class="p">)</span> <span class="o">===</span> <span class="k">false</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>At the bottom of this function, I still have this false here. This should
technically never get hit. Even if we pass something other than <tt class="docutils literal"><span class="pre">NOM</span></tt> or
<tt class="docutils literal"><span class="pre">DONATE</span></tt> to <tt class="docutils literal"><span class="pre">isGranted</span></tt> Symfony is not going to call our voter because
of the  <tt class="docutils literal"><span class="pre">getSupportedAttributes</span></tt>.</p>
<p>So, you can put anything down here I like to throw an exception just incase
something insane happens. But you&#8217;re going to be fine either way:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">protected</span> <span class="k">function</span> <span class="nf">isGranted</span><span class="p">(</span><span class="nv">$attribute</span><span class="p">,</span> <span class="nv">$object</span><span class="p">,</span> <span class="nv">$user</span> <span class="o">=</span> <span class="k">null</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">switch</span> <span class="p">(</span><span class="nv">$attribute</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// ...</span>
    <span class="p">}</span>

    <span class="k">throw</span> <span class="k">new</span> <span class="nx">\LogicException</span><span class="p">(</span><span class="s1">&#39;How did we get here!?&#39;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Cool, let&#8217;s see which cookies we can giveaway. This time we see the donate
link only next to the cookies that aren&#8217;t chocolate. That&#8217;s perfect.</p>
</div>
<div class="section" id="let-s-use-some-constants">
<h2>Let&#8217;s use some Constants<a class="headerlink" href="voters#let-s-use-some-constants" title="Permalink to this headline">¶</a></h2>
<p>Now, some of you may be thinking that I&#8217;m crazy for having these strings
like <tt class="docutils literal"><span class="pre">NOM</span></tt> and <tt class="docutils literal"><span class="pre">DONATE</span></tt> all over my application. And actually, I agree
with you. Normally whenever I have a naked string somewhere I make it a constant
instead. So in this case I&#8217;ll create two constants: <tt class="docutils literal"><span class="pre">ATTRIBUTE_NOM</span></tt> and
<tt class="docutils literal"><span class="pre">ATTRIBUTE_DONATE</span></tt>:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Security/CookieVoter.php</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">CookieVoter</span> <span class="k">extends</span> <span class="nx">AbstractVoter</span>
<span class="p">{</span>
    <span class="k">const</span> <span class="no">ATTRIBUTE_NOM</span> <span class="o">=</span> <span class="s1">&#39;NOM&#39;</span><span class="p">;</span>
    <span class="k">const</span> <span class="no">ATTRIBUTE_DONATE</span> <span class="o">=</span> <span class="s1">&#39;DONATE&#39;</span><span class="p">;</span>

    <span class="c1">// ...</span>

    <span class="k">protected</span> <span class="k">function</span> <span class="nf">getSupportedAttributes</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="k">array</span><span class="p">(</span><span class="nx">self</span><span class="o">::</span><span class="na">ATTRIBUTE_NOM</span><span class="p">,</span> <span class="nx">self</span><span class="o">::</span><span class="na">ATTRIBUTE_DONATE</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>

    <span class="k">protected</span> <span class="k">function</span> <span class="nf">isGranted</span><span class="p">(</span><span class="nv">$attribute</span><span class="p">,</span> <span class="nv">$object</span><span class="p">,</span> <span class="nv">$user</span> <span class="o">=</span> <span class="k">null</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// ...</span>

        <span class="k">switch</span> <span class="p">(</span><span class="nv">$attribute</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">case</span> <span class="nx">self</span><span class="o">::</span><span class="na">ATTRIBUTE_NOM</span><span class="o">:</span>
                <span class="c1">// ...</span>
            <span class="k">case</span> <span class="nx">self</span><span class="o">::</span><span class="na">ATTRIBUTE_DONATE</span><span class="o">:</span>
                <span class="c1">// ...</span>
        <span class="p">}</span>

        <span class="k">throw</span> <span class="k">new</span> <span class="nx">\LogicException</span><span class="p">(</span><span class="s1">&#39;How did we get here!?&#39;</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Then we can use these inside of <tt class="docutils literal"><span class="pre">getSupportedAttributes</span></tt> and later we can
use it inside of the <tt class="docutils literal"><span class="pre">isGranted</span></tt> function. This helps out with typos but
it also  allows us, if we want to, to put some PHP documentation above those
constants so  future us can come and read what nom and donate actually mean.</p>
<p>We can also go into our <tt class="docutils literal"><span class="pre">CookieController</span></tt> and use the constant there:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Controller/CookieController.php</span>
<span class="c1">// ...</span>

<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">isGranted</span><span class="p">(</span><span class="nx">CookieVoter</span><span class="o">::</span><span class="na">ATTRIBUTE_NOM</span><span class="p">,</span> <span class="nv">$cookie</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">throw</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createAccessDeniedException</span><span class="p">(</span>
        <span class="s1">&#39;You did not bake this delicious cookie!&#39;</span>
    <span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>And yes  we can also use the constants inside of the twig template with twig&#8217;s
<tt class="docutils literal"><span class="pre">constant()</span></tt> function, but honestly it&#8217;s kind of ugly so for me I just
keep the strings here.</p>
</div>
<div class="section" id="go-security-voters-go">
<h2>Go Security Voters Go!<a class="headerlink" href="voters#go-security-voters-go" title="Permalink to this headline">¶</a></h2>
<p>So security voters are all about solving that case when you need figure out
if a user has access to do something to a specific object. They help to keep
your template logic and your controller logic really simple and they&#8217;re
one of my favorite features. So try them out and let me know what you think.</p>
<p>Symfony also has an ACL system but it&#8217;s incredibly complex and I only recommend
that you use it if you have really complex authorization requirements.
If you can somehow write a few lines of code to figure out if a user has
access to do something do that in a voter don&#8217;t worry about ACL.</p>
<p>Alright see you guys next time!</p>
</div>
</div>


    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2530936717" id="dsq-comment-2530936717">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/danielnv18/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/7323/4506/avatar92.jpg?1464233238">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2530936717">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-23</span>
	                            <span class="dsq-commenter-name">Daniel Noyola</span>
	                        </div>

	                        <div id="dsq-comment-message-2530936717" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2530936717" class="dsq-comment-text">
	                                <p>I love documentation <a href="http://disq.us/url?url=http%3A%2F%2Fsymfony.com%2Fdoc%2Fcurrent%2Fcookbook%2Fsecurity%2Fvoters.html%3AEPiIhkjNH9q5Grpd5Ra-hEnssys&amp;cuid=1175718" rel="nofollow noopener">http://symfony.com/doc/current...</a></p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2530740210" id="dsq-comment-2530740210">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2530740210">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-23</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2530740210" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2530740210" class="dsq-comment-text">
	                                <p>Yes, it's called Voter now! And we made it *even* a little bit easier to use. For people using Symfony 3, that's it's definitely important to know what the class is called now.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2530059523" id="dsq-comment-2530059523">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/danielnv18/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/7323/4506/avatar92.jpg?1464233238">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2530059523">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-23</span>
	                            <span class="dsq-commenter-name">Daniel Noyola</span>
	                        </div>

	                        <div id="dsq-comment-message-2530059523" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2530059523" class="dsq-comment-text">
	                                <p>it might be worth mentioning that the class AbstractVoter doesn't exits in Symfony 3 :(</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2455272019" id="dsq-comment-2455272019">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/tomhv/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/18095/2640/avatar92.jpg?1452695314">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2455272019">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-01-13</span>
	                            <span class="dsq-commenter-name">tomhv</span>
	                        </div>

	                        <div id="dsq-comment-message-2455272019" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2455272019" class="dsq-comment-text">
	                                <p>Thanks, Ryan.  That makes a lot of sense.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2455246253" id="dsq-comment-2455246253">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2455246253">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-01-13</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2455246253" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2455246253" class="dsq-comment-text">
	                                <p>Hmm, yea, I see what you're asking - I have had this urge before too :). So, *maybe*. The question is: will the user (by taking normal actions - e.g. clicking a link) be taken to a page where the cookie will not be ready to be eaten? If so, then if you include this logic in a voter, then if the user hits this page while navigating, they will see the 403 Access Denied page... which isn't a great user experience. So if it would be normal for a user to access this page and you want to display a nice message like "Hey, this cookie is still baking!", then I would not use voters. But if it is quite abnormal for the user to access this page (maybe they are getting clever and manually changing the URL to a cookie that is not ready yet), then yea - user a voter!</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2453768226" id="dsq-comment-2453768226">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/tomhv/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/18095/2640/avatar92.jpg?1452695314">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2453768226">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-01-12</span>
	                            <span class="dsq-commenter-name">tomhv</span>
	                        </div>

	                        <div id="dsq-comment-message-2453768226" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2453768226" class="dsq-comment-text">
	                                <p>Could/would you include non-security logic in a voter?</p><p></p><pre><code><br>    if (!$cookie-&gt;isReadyToBeEaten()) {<br>        return false;<br>    }<br></code></pre>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2412718530" id="dsq-comment-2412718530">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_QSrxF2CnM7/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2412718530">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-12-16</span>
	                            <span class="dsq-commenter-name">Joe Holland</span>
	                        </div>

	                        <div id="dsq-comment-message-2412718530" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2412718530" class="dsq-comment-text">
	                                <p>Great! Thanks for your help and thanks for the lesson.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2411569415" id="dsq-comment-2411569415">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2411569415">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-12-15</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2411569415" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2411569415" class="dsq-comment-text">
	                                <p>Hey Joe!</p><p>If you use the Download button on this page and "Download Course Code", you'll get the starting and ending version of the code. If you're familiar with Symfony, you can get either codebase working quickly by opening a terminal, moving into the directory (e.g. start), then running:</p><p><code><pre>composer install<br>./app/console doctrine:database:create<br>./app/console doctrine:schema:create<br>./app/console doctrine:fixtures:load<br></pre></code></p><p>But the last command loads up the database by using the fixture files you see here: <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fknpuniversity%2Fsymfony-voters%2Ftree%2Fmaster%2Fsrc%2FAppBundle%2FDataFixtures%2FORM%3AeuCqLWm1hlP7ZE9vF78dYB-dh1k&amp;cuid=1175718" rel="nofollow noopener">https://github.com/knpuniversi...</a></p><p>Let me know if that helps!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2411544846" id="dsq-comment-2411544846">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_QSrxF2CnM7/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2411544846">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-12-15</span>
	                            <span class="dsq-commenter-name">Joe Holland</span>
	                        </div>

	                        <div id="dsq-comment-message-2411544846" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2411544846" class="dsq-comment-text">
	                                <p>Do you provide a download for the script to create the sf2_voters database?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2234569280" id="dsq-comment-2234569280">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/aguidis/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/4655/2894/avatar92.jpg?1455197367">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2234569280">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-09-03</span>
	                            <span class="dsq-commenter-name">aguidis</span>
	                        </div>

	                        <div id="dsq-comment-message-2234569280" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2234569280" class="dsq-comment-text">
	                                <p>Thanks for your clarification. I get it :) This new service sounds great, I'm looking forward to use this one !</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2234516594" id="dsq-comment-2234516594">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2234516594">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-09-03</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2234516594" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2234516594" class="dsq-comment-text">
	                                <p>Hey Adrien!</p><p>Yes! But... also no :). Your solution works just fine, unless you're taking advantage of the "role hierarchy" in security.yml. But if you aren't, then you can keep it simple and do this. In Symfony 2.8, we made a change that allows injecting the "security.access.decision_manager" service directly, which has a decide() method you can call on it (<a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fsymfony%2Fsymfony%2Fblob%2F2.8%2Fsrc%2FSymfony%2FComponent%2FSecurity%2FCore%2FAuthorization%2FAccessDecisionManager.php%23L70%29%3A4s15L-GHB89PKpxVO30OLHnEG-w&amp;cuid=1175718" rel="nofollow noopener">https://github.com/symfony/sym...</a> - similar to isGranted(), but you pass it the token and not the user. We still need one small change, however, to make this useable with the AbstractVoter (i.e. the problem is that you're not given the token).</p><p>Long way to say again, YES! But no... but in 2.8, you should be able to do it the "right" way without injecting the container.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2233717584" id="dsq-comment-2233717584">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/aguidis/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/4655/2894/avatar92.jpg?1455197367">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2233717584">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-09-03</span>
	                            <span class="dsq-commenter-name">aguidis</span>
	                        </div>

	                        <div id="dsq-comment-message-2233717584" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2233717584" class="dsq-comment-text">
	                                <p>Hi Ryan,</p><p>Thanks for this tutorial. I just have a suggestion about the way to check the current user's role in the voter, I tested another way to do it :</p><p>if (in_array('ROLE_ADMIN', $user-&gt;getRoles())) {<br>    return true;<br>        }</p><p>So we don't need to inject the container right ?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2096701122" id="dsq-comment-2096701122">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2096701122">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-06-24</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2096701122" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2096701122" class="dsq-comment-text">
	                                <p>Hi there!</p><p>Phew, good quest - this can be a confusing issue, because *a lot* of what you should do depends on your exact situation. I'll make some points :)</p><p>1) The easiest way to assign roles to users if via a User.roles field. I don't think creating a Role entity makes sense - because it doesn't make sense for an admin to be able to create a new role (e.g. if they created ROLE_MANAGE_BLOG,  that wouldn't be used in the code anywhere).</p><p>2) Normally, there is in fact no single source for roles - you just kind of use them in your controller with isGranted() or in access_control. If you want a single source (not a bad idea), I like creating a class - e.g. SecurityRoles - that has nothing on it but some constants for each role: const ROLE_MANAGE_BLOG = 'ROLE_MANAGE_BLOG'. Then at least you can reference these within your code and you have one spot to look at for all the roles. You *are* right that eventually, you could have roles stored in a user that aren't used in your codebase. But I don't think that's a problem - it's just a little bit of extra data stored in the user. And if the user's roles were ever updated by the admin, it would correctly save *without* the old roles.</p><p>3) Assuming you have a User.roles field, this would *only* store things like ROLE_USER, ROLE_MANAGE_BLOG, ROLE_*, etc. It would NOT store things like ALLOW_EDIT. Why? Because when you say isGranted('ALLOW_EDIT', $blogPost), this does not check to see if the user has the ALLOW_EDIT role. Instead, it calls your custom voter that handles ALLOW_EDIT and then you perform whatever logic you need. In technical terms, "roles" are only those things that start with ROLE_ (and are handled by the RoleVoter, which checks to see if the user has this role). Anything else you pass to isGranted is called an "attribute" - and your custom handler takes care of those.</p><p>Does that help? :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2095554937" id="dsq-comment-2095554937">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/Theravadan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/5551/4058/avatar92.jpg?1435098106">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2095554937">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-06-23</span>
	                            <span class="dsq-commenter-name">Theravadan</span>
	                        </div>

	                        <div id="dsq-comment-message-2095554937" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2095554937" class="dsq-comment-text">
	                                <p>If you wanted an admin to be able to dynamically grant user with a role how would you go about it?<br>I meant there would be several problems:<br>- creating a roles entity that would store all available roles in the database, but now there is no single source for roles - after some time you would end up with some roles that exist in the code base but do not exist in the database and the other way around.<br>- should user roles and other strings that are to have the same functionality - ROLE_USER, ALLOW_EDIT be stored in the same column - roles of the user?<br>Thanks for your time guys, you are awesome! :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1804709260" id="dsq-comment-1804709260">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1804709260">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-20</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-1804709260" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1804709260" class="dsq-comment-text">
	                                <p>It's very cool when you *focus* on new features in latest version like `Simpler Security Voters`, `security.authorization_checker`, `$this-&gt;isGranted()`, etc. in your screencasts. Thanks for this!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1801210105" id="dsq-comment-1801210105">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/sergey_smirnov/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/5457/7337/avatar92.jpg?1463430305">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1801210105">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-19</span>
	                            <span class="dsq-commenter-name">Sergey Smirnov</span>
	                        </div>

	                        <div id="dsq-comment-message-1801210105" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1801210105" class="dsq-comment-text">
	                                <p>Thank you very much for ths tutorial! This tutorial is incredibly simple and informative, I appreciate it!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1679180947" id="dsq-comment-1679180947">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="voters">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1679180947">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-11-06</span>
	                            <span class="dsq-commenter-name">Guest</span>
	                        </div>

	                        <div id="dsq-comment-message-1679180947" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1679180947" class="dsq-comment-text">
	                                <p>Thanks for taking the time to come out with this great tutorial. I've run into an issue where the var_dump(...);die; from the CookieVoter/isGranted function is not appearing, instead I get the 403 error in it's place.</p><p>- Using the following in the CookieController/NomAction: if (!$this-&gt;get('security.context')-&gt;isGranted('NOM', $cookie)) as I'm not running Symfony 2.6 (running 2.5.2).</p><p>- I've registered the services.yml as shown in the video in the config.yml but it doesn't appear to be calling the voter?</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1675832465" id="dsq-comment-1675832465">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1675832465">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-11-04</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1675832465" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1675832465" class="dsq-comment-text">
	                                <p>Woot! Do it up - yay voters!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1675822366" id="dsq-comment-1675822366">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/keganvansickle/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/9634/2950/avatar92.jpg?1476647346">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1675822366">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-11-04</span>
	                            <span class="dsq-commenter-name">Kegan VanSickle</span>
	                        </div>

	                        <div id="dsq-comment-message-1675822366" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1675822366" class="dsq-comment-text">
	                                <p>This is awesome. I am going to update my project to reflect these changes, much cleaner and efficient. Thanks Ryan!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1654138207" id="dsq-comment-1654138207">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/tonivdv/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/8696/5559/avatar92.jpg?1458725354">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1654138207">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-10-26</span>
	                            <span class="dsq-commenter-name">Toni Van de Voorde</span>
	                        </div>

	                        <div id="dsq-comment-message-1654138207" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1654138207" class="dsq-comment-text">
	                                <p>Thanks Ryan. Great Post.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1652819286" id="dsq-comment-1652819286">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="voters">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1652819286">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-10-25</span>
	                            <span class="dsq-commenter-name">Dreepto</span>
	                        </div>

	                        <div id="dsq-comment-message-1652819286" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1652819286" class="dsq-comment-text">
	                                <p>Great one, much appreciated !</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1650454978" id="dsq-comment-1650454978">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_d1bpMeJBQg/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1650454978">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-10-23</span>
	                            <span class="dsq-commenter-name">Sergio</span>
	                        </div>

	                        <div id="dsq-comment-message-1650454978" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1650454978" class="dsq-comment-text">
	                                <p>Thank you guys, nice video, again =)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_voters';var disqus_url = 'https://knpuniversity.com/screencast/symfony-voters/voters';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="resume">
            Finish Course <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/symfony-voters/voters" addthis:title="Symfony Security Voters (free cookies!)">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"symfony-voters","courseIsOwned":true,"chapter":"Symfony Security Voters (free cookies!)","chapterNumber":1,"chapterIsFree":true}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Symfony Security Voters (free cookies!)';
        Core.courseId = 51
        Core.courseIsOwned = true;
        Core.courseSlug = 'symfony-voters';
                    Core.chapterTitle = 'Symfony Security Voters (free cookies!)';
            Core.chapterNumber = 1;
            Core.chapterIsFree = true;
            Core.chapterSlug = 'voters';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":564,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
