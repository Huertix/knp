<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Service Autowiring > The new Awesome of Symfony 3.0 | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 11446
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: Form\x20Updates <i class="fa fa-play"></i>',
            'url': '/screencast/new-in-symfony3/form-updates#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="HELLLOOO Symfony3!!!

Symfony 3, ahem, Symfony 2.8, comes with *a lot* of sweet new stuff. Hey, we
should totally take a tour through all the best stuff.
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Service Autowiring">
<meta property="og:description" content="HELLLOOO Symfony3!!!

Symfony 3, ahem, Symfony 2.8, comes with *a lot* of sweet new stuff">
<meta property="og:url" content="http://knpuniversity.com/screencast/new-in-symfony3/autowiring">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/new-in-symfony3:db3a3117e34e87b57d8e1b1332e760760fcc2692/new-sf3.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="autowiring#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        5.
                            Service Autowiring
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="../new-in-symfony3.1">The new Awesome of Symfony 3.0</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="new-dir-structure" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Shiny new Directory Structure
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:21</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="guard-authentication" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        Guard: Joyful Authentication
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 10:53</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="micro-kernel" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        Micro Symfony via MicroKernelTrait
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 9:06</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="profiler" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        New Profiler
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:06</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="autowiring" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Service Autowiring
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:52</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="form-updates" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        Form Updates
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:35</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="console-styling" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Console Styling
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:28</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="voter" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        The new Voter Class
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:54</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/new-in-symfony3" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Service Autowiring</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="../new-in-symfony3.1"><em>The new Awesome of Symfony 3.0 Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $6.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="form-updates#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="autowiring#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="autowiring#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (4)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script markdown-content">
                                                                                        <a href="https://github.com/knpuniversity/whats-new-symfony3/edit/master/knpu/autowiring.md" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    <p>The next new feature is called <code>autowiring</code>. And yes, it <em>is</em> magic. And yes, it's
super controversial - it's like the celebrity gossip of the Symfony world, right
along side annotations.</p>
<p>Autowiring makes registering services easier. Normally, a service needs a name, a
class <em>and</em> its constructor arguments:</p>
<p><div class="code-block-wrapper" data-code-block-guid="aaa35b265c">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-10" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            10 lines <span class="meta-divider"></span> <span title="app/config/services.yml">app/config/services.yml</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-5" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 5
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="6"></td>
            <td class="blob-code"><span class="hljs-attr">services:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="7"></td>
            <td class="blob-code"><span class="hljs-attr">    weird_authenticator:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="8"></td>
            <td class="blob-code"><span class="hljs-attr">        class:</span> AppBundle\Security\WeirdFormAuthenticator</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="9"></td>
            <td class="blob-code"><span class="hljs-attr">        arguments:</span> [<span class="hljs-string">'@doctrine.orm.entity_manager'</span>, <span class="hljs-string">'@router'</span>]</td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>What autowiring says is, "maybe we don't need to give it the arguments?". So remove
the <code>arguments</code> key and instead type <code>autowire: true</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="6a74406008">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-11" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            11 lines <span class="meta-divider"></span> <span title="app/config/services.yml">app/config/services.yml</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-5" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 5
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="6"></td>
            <td class="blob-code"><span class="hljs-attr">services:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="7"></td>
            <td class="blob-code"><span class="hljs-attr">    weird_authenticator:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="8"></td>
            <td class="blob-code"><span class="hljs-attr">        class:</span> AppBundle\Security\WeirdFormAuthenticator</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="9"></td>
            <td class="blob-code">        <span class="hljs-comment"># arguments: ['@doctrine.orm.entity_manager', '@router']</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="10"></td>
            <td class="blob-code"><span class="hljs-attr">        autowire:</span> <span class="hljs-literal">true</span></td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Head back to the browser, refresh the login page and press the login button. It doesn't
explode! How was it able to create the <code>WeirdFormAuthenticator</code>!!!??? That's autowiring.</p>
<h2 id="how-does-it-work">How does it Work? <a class="headerlink" href="autowiring#how-does-it-work" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>It works via type-hints. In <code>WeirdFormAuthenticator</code> we're type-hinting the first argument 
with <code>EntityManager</code> and the second argument with <code>RouterInterface</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="36e46f3030">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-108" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            108 lines <span class="meta-divider"></span> <span title="src/AppBundle/Security/WeirdFormAuthenticator.php">src/AppBundle/Security/WeirdFormAuthenticator.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-2" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 2
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="3"></td>
            <td class="blob-code"><span class="hljs-keyword">namespace</span> <span class="hljs-title">AppBundle</span>\<span class="hljs-title">Security</span>;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="4-18" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 4 - 18
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="19"></td>
            <td class="blob-code"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WeirdFormAuthenticator</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AbstractGuardAuthenticator</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="20"></td>
            <td class="blob-code"></span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="21-23" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 21 - 23
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="24"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span><span class="hljs-params">(EntityManager $em, RouterInterface $router)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="25"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="26-27" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 26 - 27
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="28"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="29-106" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 29 - 106
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="107"></td>
            <td class="blob-code">}</td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Behind the scenes, well, in a "compiler pass" if you're super geeky and curious, autowiring
looks in the container and says "could you please show me all the services type-hinted with
<code>EntityManager</code>?". Since there is only one, it auto-wires that service as the first
argument.</p>
<p>The same is true for <code>RouterInterface</code>: it sees that there is only one service whose
class implements <code>RouterInterface</code>, so it injects the <code>router</code> service.</p>
<h2 id="what-if-there-are-multiple-services-with-the-class">What if there are Multiple Services with the Class? <a class="headerlink" href="autowiring#what-if-there-are-multiple-services-with-the-class" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>But what if there are <em>multiple</em> services that implement an interface or match a class?
Well, frankly, your computer will catch on fire....</p>
<p>I'm kidding! Autowiring won't work, but it <em>will</em> throw a clear exception. Autowiring
is magical... but not completely <em>magical</em>: it won't try to guess <em>which</em> entity manager
you want. It's the Symfony-spin on auto-wiring.</p>
<p>If you do hit this problem, there is a way for you to tell the container <em>which</em>
service you want to inject for the type-hinted class. </p>
<p>But the real beauty of autowiring is when it just works. The <em>whole</em> point is to
save time so you can rapidly develop.</p>
<h2 id="moar-magic-injecting-non-existent-services">Moar Magic: Injecting Non-Existent Services <a class="headerlink" href="autowiring#moar-magic-injecting-non-existent-services" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Autowiring has one more interesting trick. In the <code>Security</code> directory, create a new
super important class called <code>EvilSecurityRobot</code>. Give it one method:
<code>public function doesRobotAllowAccess()</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="d10a8a6ff7">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-12" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            12 lines <span class="meta-divider"></span> <span title="src/AppBundle/Security/EvilSecurityRobot.php">src/AppBundle/Security/EvilSecurityRobot.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-2" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 2
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="3"></td>
            <td class="blob-code"><span class="hljs-keyword">namespace</span> <span class="hljs-title">AppBundle</span>\<span class="hljs-title">Security</span>;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="4"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="5"></td>
            <td class="blob-code"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">EvilSecurityRobot</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="6"></td>
            <td class="blob-code"></span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="7"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">doesRobotAllowAccess</span><span class="hljs-params">()</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="8"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="9"></td>
            <td class="blob-code">        <span class="hljs-keyword">return</span> rand(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>) &gt;= <span class="hljs-number">5</span>;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="10"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="11"></td>
            <td class="blob-code">}</td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Basically, the evil robot will decide, randomly, whether or not we can login. So even if
I enter <em>all</em> the login fields correctly, the evil security robot could still say "NOPE!
You're not getting in and I'm not sorry. &lt;3 The Evil Robot".</p>
<p>The <code>EvilSecurityRobot</code> is ready. To use this in <code>WeirdFormAuthenticator</code>, pass it
as the third argument to the constructor: <code>EvilSecurityRobot $robot</code>. Now create
a <code>$robot</code> property and set it:</p>
<p><div class="code-block-wrapper" data-code-block-guid="ef5d9ce5c9">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-116" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            116 lines <span class="meta-divider"></span> <span title="src/AppBundle/Security/WeirdFormAuthenticator.php">src/AppBundle/Security/WeirdFormAuthenticator.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-18" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 18
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="19"></td>
            <td class="blob-code"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WeirdFormAuthenticator</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AbstractGuardAuthenticator</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="20"></td>
            <td class="blob-code"></span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="21-22" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 21 - 22
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="23"></td>
            <td class="blob-code">    <span class="hljs-keyword">private</span> $robot;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="24-24" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... line 24
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="25"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span><span class="hljs-params">(EntityManager $em, RouterInterface $router, EvilSecurityRobot $robot)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="26"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="27-28" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 27 - 28
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="29"></td>
            <td class="blob-code">        <span class="hljs-keyword">$this</span>-&gt;robot = $robot;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="30"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="31-114" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 31 - 114
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="115"></td>
            <td class="blob-code">}</td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>In <code>checkCredentials()</code>, <code>if (!$this-&gt;robot-&gt;doesRobotAllowAccess())</code> then throw a
really clear new <code>CustomUserMessageAuthenticationException()</code> that says "RANDOM 
SECURITY ROBOT SAYS NO!":</p>
<p><div class="code-block-wrapper" data-code-block-guid="6c1bfc61bf">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-116" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            116 lines <span class="meta-divider"></span> <span title="src/AppBundle/Security/WeirdFormAuthenticator.php">src/AppBundle/Security/WeirdFormAuthenticator.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-60" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 60
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="61"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkCredentials</span><span class="hljs-params">($credentials, UserInterface $user)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="62"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="63"></td>
            <td class="blob-code">        <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">$this</span>-&gt;robot-&gt;doesRobotAllowAccess()) {</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="64"></td>
            <td class="blob-code">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> CustomUserMessageAuthenticationException(</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="65"></td>
            <td class="blob-code">                <span class="hljs-string">'RANDOM SECURITY ROBOT SAYS NO!'</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="66"></td>
            <td class="blob-code">            );</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="67"></td>
            <td class="blob-code">        }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="68-85" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 68 - 85
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="86"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="87-116" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 87 - 116
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>And I'll even put quotes around that. </p>
<p>This is when we would <em>normally</em> go to <code>services.yml</code> and update the <code>arguments</code>
key to inject the <code>EvilSecurityRobot</code>. But wait! Before we do that, we need to register
the <code>EvilSecurityRobot</code> as a service first.</p>
<p>Resist the urge! Instead, do nothing: absolutely nothing. Refresh the page. Fill in
<code>weaverryan</code> and try to login until you se the error. Bam!</p>
<blockquote><p>RANDOM SECURITY ROBOT SAYS NO!</p>
</blockquote>
<p>It works! What the heck is going on?</p>
<p>Remember,  <code>weird_authenticator</code> is autowired. Because of that, Symfony sees that
the third argument is type-hinted with <code>EvilSecurityRobot</code>. Next, it looks in the
container, but finds <em>no</em> services with this class. But instead of failing, it
creates a <em>private</em> service in the container automatically and injects that. This
actually works pretty well: <code>EvilSecurityRobot</code> itself is created with autowiring.
So if <em>it</em> had a couple of constructor arguments, it would try to autowire those
automatically.</p>
<p>Oh, and if you have multiple autowired services that need an <code>EvilSecurityRobot</code>,
the container will create just <em>one</em> private service and re-use it.</p>
<p>Some people will <em>love</em> this new feature and some people will <em>hate</em> it and complain
on Twitter. But it's cool: like most things, you're not forced to use it. But, if
you're doing some rapid application development, try it! It won't work in all cases,
and isn't able to inject configuration yet, but when it works, it can save time,
just like it did here for us.</p>
<p>Wield this new weapon wisely.</p>

    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2466995474" id="dsq-comment-2466995474">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2466995474">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-01-19</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2466995474" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2466995474" class="dsq-comment-text">
	                                <p>Hey James!</p><p>Yea, I'm definitely interested in this :). So, the stuff in Kernel is private on purpose (which I'm sure you suspected already). Symfony uses call_use_func_array(), but you can hook into both the functionality that determines the controller callable and the functionality that determines that callable's arguments. So, if Auryn is able to give you back the arguments it determines, but *not* actually call the callable, then you'll be able to hook in without any issues. You would do that either by overriding the ControllerResolver or (preferably, cause it's easier to hook into existing projects) by using my previous recommendation. Basically, if you register a listener on kernel.controller, then whatever "stuff" you add to $request-&gt;attributes becomes available as a controller arg. For example, if I say `$request-&gt;attributes-&gt;set('router', $myRouter)`, then this $myRouter will be passed to a $router argument of my controller method (if it has one). That matching is done by name, but you could have originally figured out the object to pass to the $router argument by using Auryn to "guess" based on the type-hint etc.</p><p>So, as I said, non-trivial - but all the hook points should be there :).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2466554435" id="dsq-comment-2466554435">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/J7mbo/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/1018/4752/avatar92.jpg?1464954446">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2466554435">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-01-19</span>
	                            <span class="dsq-commenter-name">J7mbo</span>
	                        </div>

	                        <div id="dsq-comment-message-2466554435" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2466554435" class="dsq-comment-text">
	                                <p>Hey Ryan,</p><p>There's already an injector I use called Auryn that provides a couple of methods that provide similar functionality. It has make() which creates an object and its dependencies recursively, and execute() which, given a callable, object + method etc, uses the same introspective logic to recursively instantiate dependencies of the given object's method. I've been using this in a microframework for a while for my controllers and, for me, it's really the only thing that's missing for jumping over to the full Symfomy framework.</p><p>I've done some research into the kernel and, short of rewriting the whole thing, it doesn't look like I can override the controller calling. As awesome and modular as Symfony and its Kernel is, that call_user_func() for the controller + method combo is in a private method! Of all the things! If only that call could be placed in another protected method so it can be overriden, perhaps this is something we could collaborate on if it still piques your interest?</p><p>Relevant research in my SO question: <a href="http://disq.us/url?url=http%3A%2F%2Fstackoverflow.com%2Fquestions%2F34875323%2Fsymfony-changing-how-controllers-are-instantiated-and-executed%2F%3AO_txdGmd-DHE5IBIK3Go-c4NTyw&amp;cuid=1175718" rel="nofollow noopener">http://stackoverflow.com/quest...</a></p><p>I'll take a look at the framework bundle and ParamConverter. As developers tend to start working on a new feature in the controller layer, the ability to get working with it quickly in controller actions (although as you said, being an edge case, is still a common one) would be awesome.</p><p>Thanks for the quick and in depth response! I enjoy following how KNP is doing and looking forward to checking out the Symfony 3 tuts!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2466508228" id="dsq-comment-2466508228">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2466508228">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-01-19</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2466508228" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2466508228" class="dsq-comment-text">
	                                <p>Hey James!</p><p>Yea, great conversation question. First, the reason auto-wiring isn't available for method calls is simply that you (other than the controller) call your methods directly - there's no information about method arguments in the service container itself. The service container only cares about instantiating your objects.</p><p>The only time that Symfony calls your method automatically is in the case of the controller. And in this special case, you can take a different route to accomplish what you need. Specifically, you could register a listener (on kernel.controller), read the type-hints from your arguments, fetch services out for those type-hinted classes, and inject them as arguments. This is a non-trivial task of course, and you probably won't want to loop over *every* service to find which match your type-hint. Instead, you'll probably need some configuration that says "type hint Foo\Bar goes to service foo_bar". For people defining controllers as services, it's actually a pretty rad idea... and if done well, could maybe be introduced into SensioFWExtraBundle.</p><p>Anyways, you can kind of get an idea on how to make something like this from SensioFrameworkExtraBundle - it's ParamConverter does exactly this (i.e. it looks at the type-hint of arguments and uses that to automatically query for an entity of that type).</p><p>Let me know how it goes :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2466276244" id="dsq-comment-2466276244">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/J7mbo/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/1018/4752/avatar92.jpg?1464954446">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2466276244">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-01-19</span>
	                            <span class="dsq-commenter-name">J7mbo</span>
	                        </div>

	                        <div id="dsq-comment-message-2466276244" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2466276244" class="dsq-comment-text">
	                                <p>What about auto-wiring for method calls?</p><p>Imagine I'm defining a controller a service, and I'm not going down the route of creating an individual class for each controller - so we can agree that a controller doesn't adhere closely to SRP. Controllers have multiple methods, indexAction, postAction etc, for example.</p><p>Can I type hint for something in one of those methods, and have it auto wired for me? Or is it just constructor injection that's provided? If so, why is method injection not available? I'm not asking for setter injection, just obvious, basic method injection like the constructor has.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_autowiring';var disqus_url = 'https://knpuniversity.com/screencast/new-in-symfony3/autowiring';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="form-updates#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/new-in-symfony3/autowiring" addthis:title="The new Awesome of Symfony 3.0">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"new-in-symfony3","courseIsOwned":false,"chapter":"Service Autowiring","chapterNumber":5,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'The new Awesome of Symfony 3.0';
        Core.courseId = 72
        Core.courseIsOwned = false;
        Core.courseSlug = 'new-in-symfony3';
                    Core.chapterTitle = 'Service Autowiring';
            Core.chapterNumber = 5;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'autowiring';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

</body>
</html>
