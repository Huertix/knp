<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Custom Validation, Callback and Constraints > Question and Answer Day: March 27th, 2013 | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: true,
            courseChapterId: 12720
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: How\x20to\x20\x28dynamically\x29\x20remove\x20a\x20Form\x20Field <i class="fa fa-play"></i>',
            'url': '/screencast/question-answer-day/remove-form-field#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="Woh! KnpUniversity Question &amp; Answer Day is **March 27th, 2013**!

Submit all your Symfony, Behat and PHP questions by March 26th, 2013 and
we&#039;ll answer them. We&#039;re calling it KnpU Question/Answer Day - we&#039;re
finally shutting up and doing the listening!
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Custom Validation, Callback and Constraints">
<meta property="og:description" content="Woh! KnpUniversity Question &amp;amp; Answer Day is **March 27th, 2013**!

Submit all your Symfony, Behat and PHP questions by March 26th, 2013 and
we&amp;#039;ll answer them. We&amp;#039;re calling it KnpU Question/Answer Day - we&amp;#039;re
finally shutting up and doing the listening!
">
<meta property="og:url" content="http://knpuniversity.com/screencast/question-answer-day/custom-validation-property-path">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/question-answer-day:83f99eb1080324347a1ede667a2e334cd750028d/qa-day.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="custom-validation-property-path#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        9.
                            Custom Validation, Callback and...
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="../question-answer-day.1">Question and Answer Day: March 27th, 2013</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="questions" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Ask Questions!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> :55</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="routing-parameter-pattern" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        More on Routing And Dependency Injection Parameters
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="travis-ci" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        How to use Behat and Selenium on Travis CI
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="create-composer-package" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Creating your very own Composer Package
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="swiftmailer-spooling" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Swiftmailer Spooling and Handling Failures
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony2-dynamic-subdomains" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        How to handle dynamic Subdomains in Symfony
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 11:43</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="controllers-services" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Symfony2: Make my Controllers Services?
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="less-with-assetic" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        How to compile .less styles into .css (on any OS)
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="custom-validation-property-path" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Custom Validation, Callback and Constraints
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="remove-form-field" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        How to (dynamically) remove a Form Field
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony2-rad" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Symfony2: Setup, Configuration, Rad?
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony2-users-menu-cms" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                12.
                        Complex Symfony2 Examples: Users, Menus, CMS Features
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="model-organization" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                13.
                        Symfony2: Organizing your Business Logic into Models
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony2-conditionally-required-field" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                14.
                        Conditionally Requiring a Form Field in Symfony2
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony2-security-firewalls-dinos" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                15.
                        Symfony2 Security, Firewalls and Dinosaurs
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="training" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                16.
                        Training: The Hardest Part
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <div class="dropdown download-buy-buttons">
              <button class="btn btn-success dropdown-toggle" type="button" id="downloadDropdown" data-toggle="dropdown" aria-expanded="true">
                  <span><i class="fa fa-download"></i></span>
                  <span class="hidden-xs">Download</span>
                  <span class="caret"></span>
              </button>
              <ul class="list-unstyled dropdown-menu pull-right" role="menu" aria-labelledby="downloadDropdown">
                  
                  <li><a href="../get/question-answer-day/code/83f99eb1080324347a1ede667a2e334cd750028d" class="js-analytics-download" data-download-type="code"><i class="fa fa-code"></i> Course Code</a></li>

                                        <li><a href="../get/question-answer-day/script/83f99eb1080324347a1ede667a2e334cd750028d" class="js-analytics-download" data-download-type="script"><i class="fa fa-book"></i> Course Script</a></li>              </ul>
          </div>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Custom Validation, Callback and Constraints</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="../question-answer-day.1"><em>Question and Answer Day: March 27th, 2013 Tutorial</em></a>                    </p>
                            </div>
        </div>

         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="remove-form-field#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="custom-validation-property-path#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="custom-validation-property-path#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (5)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script script-content">
                                                                                        <a href="https://github.com/knpuniversity/question-answer-day/edit/master/knpu/custom-validation-property-path.rst" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    
  <div class="section" id="custom-validation-callback-and-constraints">
<h1>Custom Validation, Callback and Constraints<a class="headerlink" href="custom-validation-property-path#custom-validation-callback-and-constraints" title="Permalink to this headline">¶</a></h1>
<p>From <a class="reference external" href="https://twitter.com/dextervip">Rafael</a>:</p>
<blockquote>
<div>Hi, I am coding one events calendar, It is adding events however how can
I validate if the event I am placing does not conflict time with another
one event? I was thinking about entity validation callback but should it
be in entity? or repository? I don&#8217;t want to lose symfony validation that
display errors on the forms</div></blockquote>
<div class="section" id="answer">
<h2>Answer<a class="headerlink" href="custom-validation-property-path#answer" title="Permalink to this headline">¶</a></h2>
<p>This is a great question because it touches on a few interesting and related
concepts: custom validation, assigning errors, and the best practices around
all of this.</p>
<p>Let&#8217;s follow along with your example. Suppose we have an <tt class="docutils literal"><span class="pre">Event</span></tt> entity
that looks like this (with some extras, like getter and setter methods):</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Entity/Event.php</span>
<span class="k">namespace</span> <span class="nx">KnpU\QADayBundle\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Doctrine\ORM\Mapping</span> <span class="k">as</span> <span class="nx">ORM</span><span class="p">;</span>

<span class="sd">/**</span>
<span class="sd"> * @ORM\Entity(repositoryClass=&quot;KnpU\QADayBundle\Entity\EventRepository&quot;)</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">Event</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @ORM\Column(name=&quot;id&quot;, type=&quot;integer&quot;)</span>
<span class="sd">     * @ORM\Id</span>
<span class="sd">     * @ORM\GeneratedValue(strategy=&quot;AUTO&quot;)</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$id</span><span class="p">;</span>

    <span class="sd">/** @ORM\Column(name=&quot;name&quot;, type=&quot;string&quot;, length=255) */</span>
    <span class="k">private</span> <span class="nv">$name</span><span class="p">;</span>

    <span class="sd">/** @ORM\Column(name=&quot;startDate&quot;, type=&quot;datetime&quot;) */</span>
    <span class="k">private</span> <span class="nv">$startDate</span><span class="p">;</span>

    <span class="sd">/** @ORM\Column(name=&quot;endDate&quot;, type=&quot;datetime&quot;) */</span>
    <span class="k">private</span> <span class="nv">$endDate</span><span class="p">;</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>I also have a really basic route, controller and form setup which allows
the user to create a new Event (check out the code download to see this).
Ok, let&#8217;s get to work!</p>
<div class="section" id="the-callback-constraint">
<h3>The Callback Constraint<a class="headerlink" href="custom-validation-property-path#the-callback-constraint" title="Permalink to this headline">¶</a></h3>
<p>The goal is to throw a validation error if the event will conflict with the
start and end times of some existing event. There are a few ways to add custom
validation, including the <a class="reference external" href="http://symfony.com/doc/current/reference/constraints/Callback.html">Callback</a> constraint, which executes an arbitrary
method in your model/entity class and lets you apply any custom logic you
want:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Entity/Event.php</span>
<span class="c1">// ...</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\ExecutionContextInterface</span><span class="p">;</span>

<span class="sd">/**</span>
<span class="sd"> * @Assert\Callback(methods={&quot;checkCustomValidation&quot;})</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">Event</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">checkCustomValidation</span><span class="p">(</span><span class="nx">ExecutionContextInterface</span> <span class="nv">$context</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$context</span><span class="o">-&gt;</span><span class="na">addViolationAt</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;Pick a cooler name!&#39;</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This is my favorite way to handle custom validation because it&#8217;s so easy.
The problem is that the method lives in your entity. This means that you
don&#8217;t have access to the entity manager or any other services. In this case,
there&#8217;s no way to query to see if any other event has a conflicting date.</p>
</div>
<div class="section" id="a-bit-ugly-but-easy-callback-constraints">
<h3>A bit Ugly, but Easy: Callback + constraints<a class="headerlink" href="custom-validation-property-path#a-bit-ugly-but-easy-callback-constraints" title="Permalink to this headline">¶</a></h3>
<p>Normally, we add validation constraints to our model class (i.e. <tt class="docutils literal"><span class="pre">Event</span></tt>).
However, as of Symfony 2.1, additional constraints can be added directly
to the form key using a <tt class="docutils literal"><span class="pre">constraints</span></tt> option. Like with annotations, you can
apply constraints to the whole object, or individual properties.</p>
<p>For simplicity, I&#8217;ve built my form in the controller instead of using a
<a class="reference external" href="http://symfony.com/doc/current/book/forms.html#creating-form-classes">form type class</a>. Let&#8217;s re-use the <tt class="docutils literal"><span class="pre">Callback</span></tt> validator, but now tell
it to execute a method on my controller when called:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Controller/EventController.php</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraints</span> <span class="k">as</span> <span class="nx">Assert</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\ExecutionContextInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">KnpU\QADayBundle\Entity\Event</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">newAction</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$form</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createFormBuilder</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">&#39;data_class&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;KnpU\QADayBundle\Entity\Event&#39;</span><span class="p">,</span>
        <span class="s1">&#39;constraints&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
            <span class="k">new</span> <span class="nx">Assert\Callback</span><span class="p">(</span><span class="k">array</span><span class="p">(</span><span class="nv">$this</span><span class="p">,</span> <span class="s1">&#39;validateEventDates&#39;</span><span class="p">))</span>
        <span class="p">)</span>
    <span class="p">))</span>
        <span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;text&#39;</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;startDate&#39;</span><span class="p">,</span> <span class="s1">&#39;datetime&#39;</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="s1">&#39;endDate&#39;</span><span class="p">,</span> <span class="s1">&#39;datetime&#39;</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">getForm</span><span class="p">()</span>
    <span class="p">;</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>And for now, I&#8217;ve just put some dummy code into the <tt class="docutils literal"><span class="pre">validateEventDates</span></tt>
function, which lives right inside this same class:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Entity/EventController.php</span>
<span class="k">public</span> <span class="k">function</span> <span class="nf">validateEventDates</span><span class="p">(</span><span class="nx">Event</span> <span class="nv">$event</span><span class="p">,</span> <span class="nx">ExecutionContextInterface</span> <span class="nv">$context</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$context</span><span class="o">-&gt;</span><span class="na">addViolationAt</span><span class="p">(</span><span class="s1">&#39;startDate&#39;</span><span class="p">,</span> <span class="s1">&#39;There is already an event during this time!&#39;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Phew! Let&#8217;s walk through this step-by-step:</p>
<p>1) We eventually want to validate our object based on multiple pieces of
data (the <tt class="docutils literal"><span class="pre">startDate</span></tt> and <tt class="docutils literal"><span class="pre">endDate</span></tt>). So instead of applying a validator
to a single field, we apply it to the whole object. This means that when
the <tt class="docutils literal"><span class="pre">validateEventDates</span></tt> is called, the whole <tt class="docutils literal"><span class="pre">Event</span></tt> object is passed
to it.</p>
<p>2) To attach validation constraints directly to the form, we use the <tt class="docutils literal"><span class="pre">constraints</span></tt>
key and create a new instance of the constraint. Whether you realized it
or not, all those <tt class="docutils literal"><span class="pre">Callback</span></tt>, <tt class="docutils literal"><span class="pre">NotBlank</span></tt>, etc keys that you use every
day for validation are each a real class.</p>
<p>3) When the <tt class="docutils literal"><span class="pre">Callback</span></tt> constraint is executed, it detects that we&#8217;re no
longer inside the <tt class="docutils literal"><span class="pre">Event</span></tt> class. To help us out, it now passes our method
two arguments: the <tt class="docutils literal"><span class="pre">Event</span></tt> object and the execution context.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">The <tt class="docutils literal"><span class="pre">Callback</span></tt> constraint - or any other constraint - can also be applied
to just an individual field by adding a third argument to the <tt class="docutils literal"><span class="pre">add</span></tt>
function, which would be an array with a <tt class="docutils literal"><span class="pre">constraints</span></tt> key.</p>
</div>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">If your form lives in a <a class="reference external" href="http://symfony.com/doc/current/book/forms.html#creating-form-classes">form type class</a>, simply add the <tt class="docutils literal"><span class="pre">constraints</span></tt>
key to the <tt class="docutils literal"><span class="pre">setDefaulOptions</span></tt> method.</p>
</div>
<p>This solution is a bit ugly because it lives in our Controller, so we can&#8217;t
re-use it or unit test it. We&#8217;ll improve that in a second, but let&#8217;s get
it working first!</p>
</div>
<div class="section" id="applying-the-validation-logic">
<h3>Applying the Validation Logic<a class="headerlink" href="custom-validation-property-path#applying-the-validation-logic" title="Permalink to this headline">¶</a></h3>
<p>Now that the callback method lives in the controller, we can easily access
the entity manager (or any other service) and run the queries we need to.
And since we are going to be executing some queries, the best place for that
logic is in the <tt class="docutils literal"><span class="pre">EventRepository</span></tt> class:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Entity/EventRepository.php</span>
<span class="k">namespace</span> <span class="nx">KnpU\QADayBundle\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Doctrine\ORM\EntityRepository</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">EventRepository</span> <span class="k">extends</span> <span class="nx">EntityRepository</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">findOverlappingWithRange</span><span class="p">(</span><span class="nx">\DateTime</span> <span class="nv">$startDate</span><span class="p">,</span> <span class="nx">\DateTime</span> <span class="nv">$endDate</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$qb</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createQueryBuilder</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">);</span>

        <span class="k">return</span> <span class="nv">$qb</span><span class="o">-&gt;</span><span class="na">andWhere</span><span class="p">(</span><span class="s1">&#39;e.startDate &lt; :endDate AND e.endDate &gt; :startDate&#39;</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">setParameter</span><span class="p">(</span><span class="s1">&#39;startDate&#39;</span><span class="p">,</span> <span class="nv">$startDate</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">setParameter</span><span class="p">(</span><span class="s1">&#39;endDate&#39;</span><span class="p">,</span> <span class="nv">$endDate</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">getQuery</span><span class="p">()</span>
            <span class="o">-&gt;</span><span class="na">execute</span><span class="p">()</span>
        <span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Great! Now use this function in the callback method in the controller:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Controller/EventController.php</span>
<span class="k">public</span> <span class="k">function</span> <span class="nf">validateEventDates</span><span class="p">(</span><span class="nx">Event</span> <span class="nv">$event</span><span class="p">,</span> <span class="nx">ExecutionContextInterface</span> <span class="nv">$context</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$conflicts</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDoctrine</span><span class="p">()</span>
        <span class="o">-&gt;</span><span class="na">getRepository</span><span class="p">(</span><span class="s1">&#39;QADayBundle:Event&#39;</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">findOverlappingWithRange</span><span class="p">(</span><span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getStartDate</span><span class="p">(),</span> <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getEndDate</span><span class="p">())</span>
    <span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="nb">count</span><span class="p">(</span><span class="nv">$conflicts</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$context</span><span class="o">-&gt;</span><span class="na">addViolationAt</span><span class="p">(</span>
            <span class="s1">&#39;startDate&#39;</span><span class="p">,</span>
            <span class="s1">&#39;There is already an event during this time!&#39;</span>
        <span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p>If this method lives in your form type class, then you don&#8217;t have the
entity manager! One option is to pass it in as an option when creating
your form:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="nv">$form</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createForm</span><span class="p">(</span><span class="k">new</span> <span class="nx">EventType</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">&#39;em&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDoctrine</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getManager</span><span class="p">()</span>
<span class="p">))</span>
</pre></div>
</div>
<p>The <tt class="docutils literal"><span class="pre">em</span></tt> option is then available in the <tt class="docutils literal"><span class="pre">buildForm</span></tt> method of the
form type class:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">buildForm</span><span class="p">(</span><span class="nx">FormBuilderInterface</span> <span class="nv">$builder</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$options</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$em</span> <span class="o">=</span> <span class="nv">$options</span><span class="p">[</span><span class="s1">&#39;em&#39;</span><span class="p">];</span>
<span class="p">}</span>
</pre></div>
</div>
<p class="last">For this to work, make sure to add <tt class="docutils literal"><span class="pre">em</span></tt> to the &#8220;defaults&#8221; in your form
type&#8217;s <tt class="docutils literal"><span class="pre">setDefaultOptions</span></tt> method.</p>
</div>
<p>If you try it, it works! It&#8217;s a bit dirty, but at least our query logic lives
in <tt class="docutils literal"><span class="pre">EventRepository</span></tt>. If you were also handling &#8220;edits&#8221;, you&#8217;d also need
to make sure that the result isn&#8217;t the exact object being saved. But I&#8217;ll
leave that to you!</p>
</div>
</div>
<div class="section" id="creating-a-proper-custom-validation-constraint">
<h2>Creating a Proper Custom Validation Constraint<a class="headerlink" href="custom-validation-property-path#creating-a-proper-custom-validation-constraint" title="Permalink to this headline">¶</a></h2>
<p>There&#8217;s nothing wrong with what we have so far, but for the sake of reusability,
clean code and unit testing, it can be much better.</p>
<p>The ultimate solution to custom validation is to create your own constraint.
Fortunately, we&#8217;ve already done most of the work. Start by creating a new
<tt class="docutils literal"><span class="pre">UniqueEventDate</span></tt> class:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Validator/UniqueEventDate.php</span>
<span class="k">namespace</span> <span class="nx">KnpU\QADayBundle\Validator</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraint</span><span class="p">;</span>

<span class="sd">/** @Annotation */</span>
<span class="k">class</span> <span class="nc">UniqueEventDate</span> <span class="k">extends</span> <span class="nx">Constraint</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">validatedBy</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="s1">&#39;unique_event_date&#39;</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">getTargets</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nx">self</span><span class="o">::</span><span class="na">CLASS_CONSTRAINT</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Yep, this class is so simple it&#8217;s silly. Each custom validation constraint
is actually two classes: one &#8220;Constraint&#8221; (seen here) that holds some options
and another &#8220;Constraint Validator&#8221; (shown next) which does all the work. In
fact, you can find these for the built-in constraints, for example <tt class="docutils literal"><span class="pre">NotBlank</span></tt>
and <tt class="docutils literal"><span class="pre">NotBlankValidator</span></tt>.</p>
<p>There are 3 interesting parts to this class:</p>
<p>1) The <tt class="docutils literal"><span class="pre">&#64;Annotation</span></tt> will eventually allow us to reference this constraints
in the Event class via, well, annotations.</p>
<p>2) The <tt class="docutils literal"><span class="pre">validatedBy</span></tt> tells Symfony about the &#8220;Constraint Validator&#8221; that
will actually do the heavy lifting. The <tt class="docutils literal"><span class="pre">unique_event_date</span></tt> string shouldn&#8217;t
make sense yet - but it&#8217;ll be more obvious in a minute.</p>
<p>3) The <tt class="docutils literal"><span class="pre">getTargets</span></tt> method defines whether this constraint can be applied
to an entire class, a property, or both. Again, since we need multiple values
on <tt class="docutils literal"><span class="pre">Event</span></tt> in order to make our validation decision, we will apply the
constraint to the entire class.</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">This example doesn&#8217;t use any constraint options. If you do want to see what
it looks like to have a constraint that has configurable options, see
the core <a class="reference external" href="https://github.com/symfony/symfony/blob/2.2/src/Symfony/Component/Validator/Constraints/Email.php">Email</a> and <a class="reference external" href="https://github.com/symfony/symfony/blob/2.2/src/Symfony/Component/Validator/Constraints/EmailValidator.php">EmailValidator</a> classes.</p>
</div>
<p>Next, create the &#8220;Constraint Validator&#8221; class:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Validator/UniqueEventDateValidator.php</span>
<span class="k">namespace</span> <span class="nx">KnpU\QADayBundle\Validator</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\Validator\ConstraintValidator</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Doctrine\ORM\EntityManager</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Validator\Constraint</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">UniqueEventDateValidator</span> <span class="k">extends</span> <span class="nx">ConstraintValidator</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$em</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">(</span><span class="nx">EntityManager</span> <span class="nv">$em</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">em</span> <span class="o">=</span> <span class="nv">$em</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">validate</span><span class="p">(</span><span class="nv">$object</span><span class="p">,</span> <span class="nx">Constraint</span> <span class="nv">$constraint</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">die</span><span class="p">(</span><span class="s1">&#39;hold on, we\&#39;ll fill finish this in a second...&#39;</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>In a second, we&#8217;ll fill this class in and have it do all the validation work.
But first, register it as a service and tag it with a special <a class="reference external" href="http://symfony.com/doc/current/reference/dic_tags.html#validator-constraint-validator">validator.constraint_validator</a>
tag:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># src/KnpU/QADayBundle/Resources/config/services.yml</span>
<span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
    <span class="l-Scalar-Plain">unique_event_date_validator</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">class</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">KnpU\QADayBundle\Validator\UniqueEventDateValidator</span>
        <span class="l-Scalar-Plain">arguments</span><span class="p-Indicator">:</span>
            <span class="p-Indicator">-</span> <span class="s">&quot;@doctrine.orm.entity_manager&quot;</span>
        <span class="l-Scalar-Plain">tags</span><span class="p-Indicator">:</span>
            <span class="p-Indicator">-</span>
                <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">validator.constraint_validator</span>
                <span class="l-Scalar-Plain">alias</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">unique_event_date</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Make sure this <tt class="docutils literal"><span class="pre">services.yml</span></tt> file is being imported, either by using
an <a class="reference external" href="http://symfony.com/doc/current/book/service_container.html#importing-configuration-with-imports">imports key</a> in <tt class="docutils literal"><span class="pre">app/config/config.yml</span></tt> or via a
<a class="reference external" href="http://symfony.com/doc/current/book/service_container.html#importing-configuration-via-container-extensions">Dependency Injection Extension</a> class (see <a class="reference external" href="../starting-in-symfony2-episode-3-2-1">Episode 3</a> for more on this).</p>
</div>
<p>Notice that the <tt class="docutils literal"><span class="pre">alias</span></tt> we use with the tag corresponds with the value
that the Constraint class returns in <tt class="docutils literal"><span class="pre">validateBy</span></tt>. This is how Symfony
knows that the <tt class="docutils literal"><span class="pre">UniqueEventDateValidator</span></tt> is the real muscle behind the
<tt class="docutils literal"><span class="pre">UniqueEventDate</span></tt> constraint.</p>
<p>Ok! Before we fill in the logic in the <tt class="docutils literal"><span class="pre">validate</span></tt> method, let&#8217;s try this
out! The new constraint isn&#8217;t magically activated - we activate it like any
other constraint, with annotations (or YAML, if you prefer):</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Entity/Event.php</span>
<span class="c1">// ...</span>

<span class="k">use</span> <span class="nx">KnpU\QADayBundle\Validator\UniqueEventDate</span><span class="p">;</span>

<span class="sd">/**</span>
<span class="sd"> * @ORM\Entity(repositoryClass=&quot;KnpU\QADayBundle\Entity\EventRepository&quot;)</span>
<span class="sd"> * @UniqueEventDate()</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">Event</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>When you submit the form, the <tt class="docutils literal"><span class="pre">UniqueEventDate</span></tt> constraint is triggered,
and ultimately the <tt class="docutils literal"><span class="pre">UniqueEventDateValidator::validate</span></tt> method is called.
In other words, you&#8217;ll see our <tt class="docutils literal"><span class="pre">die</span></tt> statement print.</p>
<p>Ok, let&#8217;s finish this! Copy the logic from the controller <tt class="docutils literal"><span class="pre">validateEventDates</span></tt>
method and remove it and the <tt class="docutils literal"><span class="pre">constraints</span></tt> option while you&#8217;re there.
Paste it into <tt class="docutils literal"><span class="pre">UniqueEventDateValidator::validate</span></tt> and adjust it accordingly:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Validator/UniqueEventDateValidator.php</span>
<span class="k">public</span> <span class="k">function</span> <span class="nf">validate</span><span class="p">(</span><span class="nv">$object</span><span class="p">,</span> <span class="nx">Constraint</span> <span class="nv">$constraint</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$conflicts</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">em</span>
        <span class="o">-&gt;</span><span class="na">getRepository</span><span class="p">(</span><span class="s1">&#39;QADayBundle:Event&#39;</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">findOverlappingWithRange</span><span class="p">(</span><span class="nv">$object</span><span class="o">-&gt;</span><span class="na">getStartDate</span><span class="p">(),</span> <span class="nv">$object</span><span class="o">-&gt;</span><span class="na">getEndDate</span><span class="p">())</span>
    <span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="nb">count</span><span class="p">(</span><span class="nv">$conflicts</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">context</span><span class="o">-&gt;</span><span class="na">addViolationAt</span><span class="p">(</span><span class="s1">&#39;startDate&#39;</span><span class="p">,</span> <span class="s1">&#39;There is already an event during this time!&#39;</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Let&#8217;s walk through the differences:</p>
<p>1) Since we&#8217;ve injected Doctrine&#8217;s Entity Manager, we can access it and get
the <tt class="docutils literal"><span class="pre">EventRepository</span></tt> through <tt class="docutils literal"><span class="pre">$this-&gt;em</span></tt>.</p>
<p>2) Since we applied the <tt class="docutils literal"><span class="pre">UniqueEventDate</span></tt> constraint to the <tt class="docutils literal"><span class="pre">Event</span></tt> class,
the entire <tt class="docutils literal"><span class="pre">Event</span></tt> object is passed as the first argument to this method
(i.e. <tt class="docutils literal"><span class="pre">$object</span></tt>).</p>
<p>3) The <tt class="docutils literal"><span class="pre">ExecutionContext</span></tt> is stored automatically on the <tt class="docutils literal"><span class="pre">$this-&gt;context</span></tt>
property.</p>
<p>That&#8217;s it! When you re-submit the form, the <tt class="docutils literal"><span class="pre">UniqueEventDate</span></tt> constraint
on <tt class="docutils literal"><span class="pre">Event</span></tt> activates this method, which does all the work.</p>
<p>Through all of this, one nice thing is that we were always in complete control
of which field our error was attached to. I chose to attach the error to
the <tt class="docutils literal"><span class="pre">startDate</span></tt> field, but you can use whatever makes sense to you. If
you use the <tt class="docutils literal"><span class="pre">addViolation</span></tt> method instead, the error will be attached to
the whole form and displayed at the top:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">context</span><span class="o">-&gt;</span><span class="na">addViolation</span><span class="p">(</span><span class="s1">&#39;There is already an event during this time!&#39;</span><span class="p">);</span>
</pre></div>
</div>
<p>Ok, start validating!</p>
</div>
</div>


    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2747466838" id="dsq-comment-2747466838">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2747466838">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-24</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2747466838" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2747466838" class="dsq-comment-text">
	                                <p>Hi there!</p><p>Sorry for the slow reply - for some reason your comment was put into the spam filter!</p><p>I don't know why it's not working, but using the "constraints" option is still as valid in Symfony 2.8, as it was in Symfony 2.3 - and the option *is* called "constraints". So, I'm not sure what could be going wrong :/</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2718399080" id="dsq-comment-2718399080">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/razvandp/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/17005/2574/avatar92.jpg?1482510461">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2718399080">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-08</span>
	                            <span class="dsq-commenter-name">rddro</span>
	                        </div>

	                        <div id="dsq-comment-message-2718399080" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2718399080" class="dsq-comment-text">
	                                <p>Hello , I'm trying this in symfony 2.8 but apparently it's not working anymore ?? <br>I want to set constraints with a collection in a form class like so</p><p>    public function configureOptions(OptionsResolver $resolver)</p><p>    {</p><p>        //TODO move constraints in the entity</p><p>        $collectionConstraint = new Collection(array(</p><p>            'titre' =&gt; array(</p><p>                new Assert\NotNull(),</p><p>                new Assert\Length(array('min'=&gt;2, 'max'=&gt;255))</p><p>                ),</p><p>            'livre' =&gt; array(</p><p>                new Assert\NotBlank()</p><p>            ),</p><p>            'type' =&gt; array(</p><p>                new Assert\NotBlank(),</p><p>            ),</p><p>            'prix' =&gt; array(</p><p>                new Assert\NotNull(),</p><p>                new Assert\Type('numeric')</p><p>            ),</p><p>            'ordre' =&gt; array(</p><p>                new Assert\NotNull(),</p><p>                new Assert\Type('integer')</p><p>            )</p><p>        ));</p><p>        return array(</p><p>            'data_class' =&gt; 'DP\SkoazellBundle\Entity\Chapitres',</p><p>            'constraints' =&gt; $collectionConstraint //or validation_constraint  ?? was this removed ??</p><p>        );</p><p>    }</p><p>    public function getBlockPrefix()</p><p>    {</p><p>        return 'add_chapitre';</p><p>    }</p><p>But it's not working ? I think this option might have been removed in favour of validation constraints on the entity class somewhere around symfony 2.3 ?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2367675457" id="dsq-comment-2367675457">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/shairyarbaig/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10592/9062/avatar92.jpg?1469787361">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2367675457">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-11-19</span>
	                            <span class="dsq-commenter-name">Shairyar Baig</span>
	                        </div>

	                        <div id="dsq-comment-message-2367675457" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2367675457" class="dsq-comment-text">
	                                <p>Thanks Ryan,</p><p>I was trying to do the validation via custom Validator, this helped alot. Thanks</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2363006505" id="dsq-comment-2363006505">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2363006505">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-11-16</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2363006505" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2363006505" class="dsq-comment-text">
	                                <p>Hey Shairyar!</p><p>My goto for this situation is exactly what I'm talking about this post: the Callback constraint. The callback function will be passed your object (e.g. Event) and you can get the values from the two fields and compare them.</p><p>Is that what you're looking for?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2362182138" id="dsq-comment-2362182138">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/shairyarbaig/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10592/9062/avatar92.jpg?1469787361">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2362182138">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-11-16</span>
	                            <span class="dsq-commenter-name">Shairyar Baig</span>
	                        </div>

	                        <div id="dsq-comment-message-2362182138" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2362182138" class="dsq-comment-text">
	                                <p>Hi Ryan,</p><p>What if I want to validate two form fields against each other?</p><p>For example there are two fields on a form number 1 and number 2, i want to check if number 2 is not greater than number 1, how would I do this?</p><p>Regards,<br>Baig</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_custom-validation-property-path';var disqus_url = 'https://knpuniversity.com/screencast/question-answer-day/custom-validation-property-path';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="remove-form-field#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/question-answer-day/custom-validation-property-path" addthis:title="Question and Answer Day: March 27th, 2013">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"question-answer-day","courseIsOwned":true,"chapter":"Custom Validation, Callback and Constraints","chapterNumber":9,"chapterIsFree":true}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Question and Answer Day: March 27th, 2013';
        Core.courseId = 36
        Core.courseIsOwned = true;
        Core.courseSlug = 'question-answer-day';
                    Core.chapterTitle = 'Custom Validation, Callback and Constraints';
            Core.chapterNumber = 9;
            Core.chapterIsFree = true;
            Core.chapterSlug = 'custom-validation-property-path';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":405,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
