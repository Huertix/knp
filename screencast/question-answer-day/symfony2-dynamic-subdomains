<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>How to handle dynamic Subdomains in Symfony > Question and Answer Day: March 27th, 2013 | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: true,
            courseChapterId: 12717
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: Symfony2\x3A\x20Make\x20my\x20Controllers\x20Services\x3F <i class="fa fa-play"></i>',
            'url': '/screencast/question-answer-day/controllers-services#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="Woh! KnpUniversity Question &amp; Answer Day is **March 27th, 2013**!

Submit all your Symfony, Behat and PHP questions by March 26th, 2013 and
we&#039;ll answer them. We&#039;re calling it KnpU Question/Answer Day - we&#039;re
finally shutting up and doing the listening!
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="How to handle dynamic Subdomains in Symfony">
<meta property="og:description" content="Woh! KnpUniversity Question &amp;amp; Answer Day is **March 27th, 2013**!

Submit all your Symfony, Behat and PHP questions by March 26th, 2013 and
we&amp;#039;ll answer them. We&amp;#039;re calling it KnpU Question/Answer Day - we&amp;#039;re
finally shutting up and doing the listening!
">
<meta property="og:url" content="http://knpuniversity.com/screencast/question-answer-day/symfony2-dynamic-subdomains">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/question-answer-day:83f99eb1080324347a1ede667a2e334cd750028d/qa-day.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="symfony2-dynamic-subdomains#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        6.
                            How to handle dynamic Subdomains...
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="../question-answer-day.1">Question and Answer Day: March 27th, 2013</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="questions" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Ask Questions!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> :55</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="routing-parameter-pattern" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        More on Routing And Dependency Injection Parameters
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="travis-ci" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        How to use Behat and Selenium on Travis CI
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="create-composer-package" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Creating your very own Composer Package
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="swiftmailer-spooling" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Swiftmailer Spooling and Handling Failures
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="symfony2-dynamic-subdomains" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        How to handle dynamic Subdomains in Symfony
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 11:43</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="controllers-services" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Symfony2: Make my Controllers Services?
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="less-with-assetic" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        How to compile .less styles into .css (on any OS)
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="custom-validation-property-path" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Custom Validation, Callback and Constraints
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="remove-form-field" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        How to (dynamically) remove a Form Field
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony2-rad" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Symfony2: Setup, Configuration, Rad?
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony2-users-menu-cms" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                12.
                        Complex Symfony2 Examples: Users, Menus, CMS Features
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="model-organization" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                13.
                        Symfony2: Organizing your Business Logic into Models
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony2-conditionally-required-field" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                14.
                        Conditionally Requiring a Form Field in Symfony2
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony2-security-firewalls-dinos" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                15.
                        Symfony2 Security, Firewalls and Dinosaurs
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="training" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                16.
                        Training: The Hardest Part
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <div class="dropdown download-buy-buttons">
              <button class="btn btn-success dropdown-toggle" type="button" id="downloadDropdown" data-toggle="dropdown" aria-expanded="true">
                  <span><i class="fa fa-download"></i></span>
                  <span class="hidden-xs">Download</span>
                  <span class="caret"></span>
              </button>
              <ul class="list-unstyled dropdown-menu pull-right" role="menu" aria-labelledby="downloadDropdown">
                  
                  <li><a href="../get/question-answer-day/code/83f99eb1080324347a1ede667a2e334cd750028d" class="js-analytics-download" data-download-type="code"><i class="fa fa-code"></i> Course Code</a></li>

                                        <li><a href="http://knpuniversity.com/screencast/question-answer-day/symfony2-dynamic-subdomains/download/video" class="js-analytics-download" data-download-type="video"><i class="fa fa-video-camera"></i> This Video</a></li>
                                        <li><a href="../get/question-answer-day/script/83f99eb1080324347a1ede667a2e334cd750028d" class="js-analytics-download" data-download-type="script"><i class="fa fa-book"></i> Course Script</a></li>              </ul>
          </div>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">How to handle dynamic Subdomains in Symfony</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="../question-answer-day.1"><em>Question and Answer Day: March 27th, 2013 Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                        <div class="hidden alert alert-danger js-video-not-supported" style="margin-bottom: 10px;">
        <h4>Video not working?</h4>
        It looks like your browser may not support the H264 codec.
        If you're using Linux+Firefox, try a different browser or try
        installing the
        <code>gstreamer0.10-ffmpeg</code>
        <code>gstreamer0.10-plugins-good</code> packages.
        <br/><br/>
        Thanks! This saves us
        from needing to use Flash or encode videos in multiple formats. And that
        let's us get back to making more videos :). But as always, please feel
        free to <a href="../../contact">message us</a>.
    </div>

    <video id="js-video-player" class="video-js vjs-default-skin vjs-big-play-centered "
            controls preload="auto" width="auto" height="auto"
            poster="http://i.vimeocdn.com/video/536464499_960x600.jpg?r=pad">
        <source src="http://player.vimeo.com/external/140212672.hd.mp4?s=95145983e2a5b665d93680b98dff68202b615947&amp;profile_id=113&amp;oauth2_token_id=308801954" type="video/mp4" data-res="HD" data-default="true" />
        <source src="http://player.vimeo.com/external/140212672.sd.mp4?s=9002870c2470939ee04586c78aa06a5afac1f5ee&amp;profile_id=112&amp;oauth2_token_id=308801954" type="video/mp4" data-res="SD" />
        <p class="vjs-no-js">
            To view this video please enable JavaScript, and consider upgrading to a web browser that
            <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
        </p>
    </video>


                            <div class="end-show js-post-play-wrapper" style="display: none;">
                                <p class="end-show-header">You're Killing it!</p>

                                <div class="text-center overlay-btn">
                                    <!-- This is filled in via JS -->
                                    <a href="symfony2-dynamic-subdomains#" class="btn btn-lg btn-warning js-next-item-anchor"></a>
                                    <div class="js-all-finished-holder" style="display: none; color: #fff;">
                                        Another Tutorial down!<br/><br/>
                                                                            </div>
                                </div>

                                <p class="end-show-link js-video-repeat"><a class="knp-color-white link-no-underline" href="symfony2-dynamic-subdomains#">
                                    <i class="fa fa-repeat"></i> Watch again
                                </a></p>
                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="controllers-services#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="symfony2-dynamic-subdomains#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="symfony2-dynamic-subdomains#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (11)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script script-content">
                                                                                        <a href="https://github.com/knpuniversity/question-answer-day/edit/master/knpu/symfony2-dynamic-subdomains.rst" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    
  <div class="section" id="how-to-handle-dynamic-subdomains-in-symfony">
<h1>How to handle dynamic Subdomains in Symfony<a class="headerlink" href="symfony2-dynamic-subdomains#how-to-handle-dynamic-subdomains-in-symfony" title="Permalink to this headline">¶</a></h1>
<p>From <a class="reference external" href="https://twitter.com/dextervip">Rafael</a>:</p>
<blockquote>
<div>Hi, Symfony 2.2 has released hostname pattern for urls, I would like to
know how can I create a url pattern that match domains loaded from a database?
where should I put the code to load the domains and how should I pass this
to a routing config file?</div></blockquote>
<p>And from <a class="reference external" href="https://twitter.com/zaherg">zaherg</a>:</p>
<blockquote>
<div>How can I handle auto generated subdomains routing with symfony 2?</div></blockquote>
<div class="section" id="answer">
<h2>Answer<a class="headerlink" href="symfony2-dynamic-subdomains#answer" title="Permalink to this headline">¶</a></h2>
<p>Symfony 2.2 comes with <a class="reference external" href="https://knpuniversity.com/screencast/new-symfony-2.2/host-routing">hostname handling</a> out of the box, which lets you
create two routes that have the same path, but respond to two different sub-domains:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="l-Scalar-Plain">homepage</span><span class="p-Indicator">:</span>
    <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/</span>
    <span class="l-Scalar-Plain">defaults</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">_controller</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">QADayBundle:Default:index</span>

<span class="l-Scalar-Plain">homepage_admin</span><span class="p-Indicator">:</span>
    <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/</span>
    <span class="l-Scalar-Plain">defaults</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">_controller</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">QADayBundle:Admin:index</span>
    <span class="l-Scalar-Plain">host</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">admin.%base_host%</span>
</pre></div>
</div>
<p>The <tt class="docutils literal"><span class="pre">base_host</span></tt> comes from a value in <tt class="docutils literal"><span class="pre">parameters.yml</span></tt>, which makes this
all even more flexible.</p>
<p>But what if you&#8217;re creating a site that has dynamic sub-domains, where each
subdomain is a row in a &#8220;site&#8221; database table? In this case, the new <tt class="docutils literal"><span class="pre">host</span></tt>
routing feature won&#8217;t help us: it&#8217;s really meant for handling a finite number
of concrete subdomains.</p>
<p>So how could this be handled? Let&#8217;s find out together!</p>
</div>
<div class="section" id="the-virtualhost">
<h2>1) The VirtualHost<a class="headerlink" href="symfony2-dynamic-subdomains#the-virtualhost" title="Permalink to this headline">¶</a></h2>
<p>Before you go anywhere, make sure you have an Apache VirtualHost or Nginx
site that sends all the subdomains of your host to your application. Since
we&#8217;re using <tt class="docutils literal"><span class="pre">lolnimals.l</span></tt> locally, we&#8217;ll want <tt class="docutils literal"><span class="pre">*.lolnimals.l</span></tt> to be handled by
the VHost.</p>
<div class="highlight-apache"><div class="highlight"><pre><span class="nt">&lt;VirtualHost</span> <span class="s">*:80</span><span class="nt">&gt;</span>
  <span class="nb">ServerName</span> qaday.l
  <span class="nb">ServerAlias</span> *.qaday.l

  <span class="nb">DocumentRoot</span> <span class="s2">&quot;/Users/leannapelham/Sites/qa/web&quot;</span>
  <span class="nt">&lt;Directory</span> <span class="s">&quot;/Users/leannapelham/Sites/qa/web&quot;</span><span class="nt">&gt;</span>
    <span class="nb">AllowOverride</span> <span class="k">All</span>
    <span class="nb">Allow</span> from <span class="k">All</span>
  <span class="nt">&lt;/Directory&gt;</span>
<span class="nt">&lt;/VirtualHost&gt;</span>
</pre></div>
</div>
<p>Next, add a few entries to your <tt class="docutils literal"><span class="pre">/etc/hosts</span></tt> file for subdomains that
we can play with:</p>
<div class="highlight-text"><div class="highlight"><pre># /etc/hosts
127.0.0.1       lolnimals.l kittens.lolnimals.l alpacas.lolnimals.l dinos.lolnimals.l
</pre></div>
</div>
<p>Great! Restart or reload your web server and then at least check that you
can hit your application from any of these sub-domains. So far our application
isn&#8217;t actually doing any logic with these subdomains, but we&#8217;ll get there!</p>
</div>
<div class="section" id="create-the-site-entity">
<h2>2) Create the Site Entity<a class="headerlink" href="symfony2-dynamic-subdomains#create-the-site-entity" title="Permalink to this headline">¶</a></h2>
<p>Next, let&#8217;s use Doctrine to generate a new <tt class="docutils literal"><span class="pre">Site</span></tt> entity, which will store
all the information about each individual subdomain:</p>
<div class="highlight-bash"><div class="highlight"><pre>php app/console doctrine:generate:entity
</pre></div>
</div>
<p>Give the entity a name of <tt class="docutils literal"><span class="pre">QADayBundle:Site</span></tt>, which uses a <tt class="docutils literal"><span class="pre">QADayBundle</span></tt>
that I already created. For fields, add one called <tt class="docutils literal"><span class="pre">subdomain</span></tt> and two others
called <tt class="docutils literal"><span class="pre">name</span></tt> and <tt class="docutils literal"><span class="pre">description</span></tt>, so we at least have some basic information
about this site.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Press tab to take advantage of the command autocompletion. This is the
brand new <a class="reference external" href="../new-symfony-2.2/dialog-progress-autocomplete">2.2 autocomplete feature</a> in action.</p>
</div>
<p>Finish up the wizard then immediately create the database and schema. Be
sure to customize your <tt class="docutils literal"><span class="pre">app/config/parameters.yml</span></tt> file first:</p>
<div class="highlight-bash"><div class="highlight"><pre>php app/console doctrine:database:create
php app/console doctrine:schema:create
</pre></div>
</div>
<p>Finally, to make things interesting, I&#8217;ll bring in a little data file that
will add two site records into the database:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// load_sites.php</span>
<span class="k">require</span> <span class="nx">__DIR__</span><span class="o">.</span><span class="s1">&#39;/vendor/autoload.php&#39;</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Request</span><span class="p">;</span>
<span class="nv">$loader</span> <span class="o">=</span> <span class="k">require_once</span> <span class="nx">__DIR__</span><span class="o">.</span><span class="s1">&#39;/app/bootstrap.php.cache&#39;</span><span class="p">;</span>
<span class="k">require_once</span> <span class="nx">__DIR__</span><span class="o">.</span><span class="s1">&#39;/app/AppKernel.php&#39;</span><span class="p">;</span>
<span class="nv">$kernel</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">AppKernel</span><span class="p">(</span><span class="s1">&#39;dev&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
<span class="nv">$request</span> <span class="o">=</span> <span class="nx">Request</span><span class="o">::</span><span class="na">createFromGlobals</span><span class="p">();</span>
<span class="nv">$kernel</span><span class="o">-&gt;</span><span class="na">boot</span><span class="p">();</span>
<span class="nv">$container</span> <span class="o">=</span> <span class="nv">$kernel</span><span class="o">-&gt;</span><span class="na">getContainer</span><span class="p">();</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">enterScope</span><span class="p">(</span><span class="s1">&#39;request&#39;</span><span class="p">);</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">set</span><span class="p">(</span><span class="s1">&#39;request&#39;</span><span class="p">,</span> <span class="nv">$request</span><span class="p">);</span>

<span class="c1">// start loading things</span>
<span class="k">use</span> <span class="nx">KnpU\QADayBundle\Entity\Site</span><span class="p">;</span>

<span class="sd">/** @var $em \Doctrine\ORM\EntityManager */</span>
<span class="nv">$em</span> <span class="o">=</span> <span class="nv">$container</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;doctrine&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">getManager</span><span class="p">();</span>
<span class="nv">$em</span><span class="o">-&gt;</span><span class="na">createQuery</span><span class="p">(</span><span class="s1">&#39;DELETE FROM QADayBundle:Site&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">execute</span><span class="p">();</span>

<span class="nv">$site1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Site</span><span class="p">();</span>
<span class="nv">$site1</span><span class="o">-&gt;</span><span class="na">setSubdomain</span><span class="p">(</span><span class="s1">&#39;kittens&#39;</span><span class="p">);</span>
<span class="nv">$site1</span><span class="o">-&gt;</span><span class="na">setName</span><span class="p">(</span><span class="s1">&#39;Cute Kittens&#39;</span><span class="p">);</span>
<span class="nv">$site1</span><span class="o">-&gt;</span><span class="na">setDescription</span><span class="p">(</span><span class="s1">&#39;I\&#39;m peerrrrfect!&#39;</span><span class="p">);</span>

<span class="nv">$site2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Site</span><span class="p">();</span>
<span class="nv">$site2</span><span class="o">-&gt;</span><span class="na">setSubdomain</span><span class="p">(</span><span class="s1">&#39;alpacas&#39;</span><span class="p">);</span>
<span class="nv">$site2</span><span class="o">-&gt;</span><span class="na">setName</span><span class="p">(</span><span class="s1">&#39;Funny Alpacas&#39;</span><span class="p">);</span>
<span class="nv">$site2</span><span class="o">-&gt;</span><span class="na">setDescription</span><span class="p">(</span><span class="s1">&#39;Alpaca my bags!&#39;</span><span class="p">);</span>

<span class="nv">$em</span><span class="o">-&gt;</span><span class="na">persist</span><span class="p">(</span><span class="nv">$site1</span><span class="p">);</span>
<span class="nv">$em</span><span class="o">-&gt;</span><span class="na">persist</span><span class="p">(</span><span class="nv">$site2</span><span class="p">);</span>
<span class="nv">$em</span><span class="o">-&gt;</span><span class="na">flush</span><span class="p">();</span>
</pre></div>
</div>
<p>A better way to do this is with some real fixture files, but this will work
for now. This script bootstraps Symfony, but then lets us write custom code
beneath it. If you&#8217;re curious about this script or fixtures, check out our
<a class="reference external" href="http://knpuniversity.com/screencast/getting-started-in-symfony2-2-1">Starting in Symfony2</a> series where we cover all this goodness and a ton
more.</p>
<p>Execute the script from the command line.</p>
<div class="highlight-bash"><div class="highlight"><pre>php load_sites.php
</pre></div>
</div>
<p>I&#8217;ll use the built-in <cite>doctrine:query:sql</cite> command to double-check that things
work.</p>
<div class="highlight-bash"><div class="highlight"><pre>php app/console doctrine:query:sql <span class="s2">&quot;SELECT * FROM Site&quot;</span>
</pre></div>
</div>
<p>Great, let&#8217;s get to the good stuff!</p>
</div>
<div class="section" id="finding-the-current-site-the-easy-way">
<h2>3) Finding the current Site the &#8220;Easy&#8221; Way<a class="headerlink" href="symfony2-dynamic-subdomains#finding-the-current-site-the-easy-way" title="Permalink to this headline">¶</a></h2>
<p>Because of our VirtualHost, our application already responds to every subdomain
of <tt class="docutils literal"><span class="pre">lolnimals.l</span></tt>. The goal in our code is to be able to determine, based on
the host name, which Site record in the database is being used.</p>
<p>First, let&#8217;s use a homepage route and controller that I&#8217;ve already created.
This will seem simple, but for now, let&#8217;s determine which Site record is
being used by querying directly here. I&#8217;ll add the <tt class="docutils literal"><span class="pre">$request</span></tt> as an argument
to the method to get the request object, then use <tt class="docutils literal"><span class="pre">getHost</span></tt> to grab the
host name. Dump the value to see that it&#8217;s working:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Controller/DefaultController.php</span>

<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Request</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">indexAction</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$currentHost</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">getHttpHost</span><span class="p">();</span>
    <span class="nb">var_dump</span><span class="p">(</span><span class="nv">$currentHost</span><span class="p">);</span><span class="k">die</span><span class="p">;</span>

    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;QADayBundle:Default:index.html.twig&#39;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The value stored in the database is actually <em>only</em> the subdomain part, not
the whole host name. In other words, we need to transform <tt class="docutils literal"><span class="pre">alpacas.lolnimals.l</span></tt>
into simply <tt class="docutils literal"><span class="pre">alpacas</span></tt> before querying. Fortunately, I&#8217;ve already stored my
base host as a parameter in <tt class="docutils literal"><span class="pre">parameters.yml</span></tt>:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># /app/config/parameters.yml</span>
<span class="l-Scalar-Plain">parameters</span><span class="p-Indicator">:</span>
    <span class="c1"># ...</span>
    <span class="l-Scalar-Plain">base_host</span><span class="p-Indicator">:</span>         <span class="l-Scalar-Plain">qaday.l</span>
</pre></div>
</div>
<p>By grabbing this value out of the container and doing some simple string
manipulation, we can get the current subdomain key:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Controller/DefaultController.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">indexAction</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$currentHost</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">getHttpHost</span><span class="p">();</span>
    <span class="nv">$baseHost</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">container</span><span class="o">-&gt;</span><span class="na">getParameter</span><span class="p">(</span><span class="s1">&#39;base_host&#39;</span><span class="p">);</span>

    <span class="nv">$subdomain</span> <span class="o">=</span> <span class="nb">str_replace</span><span class="p">(</span><span class="s1">&#39;.&#39;</span><span class="o">.</span><span class="nv">$baseHost</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nv">$currentHost</span><span class="p">);</span>
    <span class="nb">var_dump</span><span class="p">(</span><span class="nv">$subdomain</span><span class="p">);</span><span class="k">die</span><span class="p">;</span>

    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;QADayBundle:Default:index.html.twig&#39;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Perfect! Now querying for the current Site is pretty easy. We&#8217;ll also assume
that we <em>need</em> a valid subdomain - so let&#8217;s show a 404 page if we can&#8217;t find
the Site:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Controller/DefaultController.php</span>
<span class="c1">// ...</span>

<span class="nv">$site</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDoctrine</span><span class="p">()</span>
    <span class="o">-&gt;</span><span class="na">getRepository</span><span class="p">(</span><span class="s1">&#39;QADayBundle:Site&#39;</span><span class="p">)</span>
    <span class="o">-&gt;</span><span class="na">findOneBy</span><span class="p">(</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;subdomain&#39;</span> <span class="o">=&gt;</span> <span class="nv">$subdomain</span><span class="p">))</span>
<span class="p">;</span>
<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$site</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">throw</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createNotFoundException</span><span class="p">(</span><span class="nb">sprintf</span><span class="p">(</span>
        <span class="s1">&#39;No site for host &quot;%s&quot;, subdomain &quot;%s&quot;&#39;</span><span class="p">,</span>
        <span class="nv">$baseHost</span><span class="p">,</span>
        <span class="nv">$subdomain</span>
    <span class="p">));</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Finally, pass the <tt class="docutils literal"><span class="pre">$site</span></tt> into the template so we can prove we&#8217;re matching
the right one:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Controller/DefaultController.php</span>
<span class="c1">// ...</span>

<span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;QADayBundle:Default:index.html.twig&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">&#39;site&#39;</span> <span class="o">=&gt;</span> <span class="nv">$site</span><span class="p">,</span>
<span class="p">));</span>
</pre></div>
</div>
<p>Dump some basic information out in the template to celebrate:</p>
<div class="highlight-html+jinja"><div class="highlight"><pre><span class="c">{# src/KnpU/QADayBundle/Resources/views/Default/index.html.twig #}</span>
<span class="cp">{%</span>  <span class="k">extends</span> <span class="s1">&#39;::base.html.twig&#39;</span> <span class="cp">%}</span>

<span class="cp">{%</span> <span class="k">block</span> <span class="nv">body</span> <span class="cp">%}</span>
    <span class="nt">&lt;h1&gt;</span>Welcome to <span class="cp">{{</span> <span class="nv">site.name</span> <span class="cp">}}</span><span class="nt">&lt;/h1&gt;</span>

    <span class="nt">&lt;p&gt;</span><span class="cp">{{</span> <span class="nv">site.description</span> <span class="cp">}}</span><span class="nt">&lt;/p&gt;</span>
<span class="cp">{%</span> <span class="k">endblock</span> <span class="cp">%}</span>
</pre></div>
</div>
<p>Ok, try it out! The <tt class="docutils literal"><span class="pre">alpacas</span></tt> and <tt class="docutils literal"><span class="pre">kittens</span></tt> subdomains work perfectly, and the
<tt class="docutils literal"><span class="pre">dinos</span></tt> subdomain causes a 404, since there&#8217;s no entry in the database for
it.</p>
<p>This is simple and functional, but let&#8217;s do better!</p>
</div>
<div class="section" id="the-site-manager">
<h2>4) The Site Manager<a class="headerlink" href="symfony2-dynamic-subdomains#the-site-manager" title="Permalink to this headline">¶</a></h2>
<p>We&#8217;ve met our requirements of dynamic sub-domains, but it&#8217;s not very pretty
yet. We&#8217;ll probably need to know what the current Site is all over the
place in our code - in every controller and in other places like services.
And we certainly don&#8217;t want to repeat all of this code, that would be crazy!</p>
<p>Let&#8217;s fix this, step by step. First, create a new class called <tt class="docutils literal"><span class="pre">SiteManager</span></tt>,
which will be responsible for always knowing what the current Site is. The
class is very simple - just a property with a get/set method:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Site/SiteManager.php</span>
<span class="k">namespace</span> <span class="nx">KnpU\QADayBundle\Site</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">KnpU\QADayBundle\Entity\Site</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">SiteManager</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$currentSite</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">getCurrentSite</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">currentSite</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">setCurrentSite</span><span class="p">(</span><span class="nx">Site</span> <span class="nv">$currentSite</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">currentSite</span> <span class="o">=</span> <span class="nv">$currentSite</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Next, register this as a service. If services are a newer concept for you,
we cover them extensively in <a class="reference external" href="../starting-in-symfony2-episode-3-2-1">Episode 3 of our Symfony2 Series</a>. I&#8217;ll create
a new <tt class="docutils literal"><span class="pre">services.yml</span></tt> file in my bundle. The actual service configuration
couldn&#8217;t be simpler:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># src/KnpU/QADayBundle/Resources/config/services.yml</span>
<span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
    <span class="l-Scalar-Plain">site_manager</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">class</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">KnpU\QADayBundle\Site\SiteManager</span>
</pre></div>
</div>
<p>This file is new, so make sure it&#8217;s imported. I&#8217;ll import it by adding a
new <tt class="docutils literal"><span class="pre">imports</span></tt> entry to <tt class="docutils literal"><span class="pre">config.yml</span></tt>:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># app/config/config.yml</span>
<span class="l-Scalar-Plain">imports</span><span class="p-Indicator">:</span>
    <span class="c1"># ...</span>
    <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">resource</span><span class="p-Indicator">:</span> <span class="s">&quot;@QADayBundle/Resources/config/services.yml&quot;</span> <span class="p-Indicator">}</span>
</pre></div>
</div>
<p>Sweet! Run <tt class="docutils literal"><span class="pre">container:debug</span></tt> to make sure things are working:</p>
<div class="highlight-bash"><div class="highlight"><pre>php app/console container:debug | grep site
</pre></div>
</div>
<div class="highlight-text"><div class="highlight"><pre>site_manager   container KnpU\QADayBundle\Site\SiteManager
</pre></div>
</div>
<p>Perfect! So.... how does this help us? First, let&#8217;s set the current site on
the <tt class="docutils literal"><span class="pre">SiteManager</span></tt> from within our controller:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/Controller/DefaultController.php</span>
<span class="c1">// ...</span>

<span class="sd">/** @var $siteManager \KnpU\QADayBundle\Site\SiteManager */</span>
<span class="nv">$siteManager</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">container</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;site_manager&#39;</span><span class="p">);</span>
<span class="nv">$siteManager</span><span class="o">-&gt;</span><span class="na">setCurrentSite</span><span class="p">(</span><span class="nv">$site</span><span class="p">);</span>

<span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;QADayBundle:Default:index.html.twig&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">&#39;site&#39;</span> <span class="o">=&gt;</span> <span class="nv">$siteManager</span><span class="o">-&gt;</span><span class="na">getCurrentSite</span><span class="p">(),</span>
<span class="p">));</span>
</pre></div>
</div>
<p>Don&#8217;t let this step confuse you, because it&#8217;s pretty underwhelming.
This sets the current site on the <tt class="docutils literal"><span class="pre">SiteManager</span></tt>, which we use immediately
to pass to the template. If this looks kinda dumb to you, it is! Getting the
current site from the <tt class="docutils literal"><span class="pre">SiteManager</span></tt> is cool, but the problem is that we
still need to set this manually.</p>
<p>In other words, the <tt class="docutils literal"><span class="pre">SiteManager</span></tt> is only one piece of the solution. Now,
let&#8217;s add an event listener to fix the rest.</p>
</div>
<div class="section" id="determining-the-site-automatically-with-an-event-listener">
<h2>5) Determining the Site automatically with an Event Listener<a class="headerlink" href="symfony2-dynamic-subdomains#determining-the-site-automatically-with-an-event-listener" title="Permalink to this headline">¶</a></h2>
<p>Somehow, we need to be able to move the logic that determines the current
Site out of our controller and to some central location. To do this, we&#8217;ll
leverage an event listener. Again, if this is new to you, we cover it in
<a class="reference external" href="../starting-in-symfony2-episode-3-2-1">Episode 3 of our Symfony2 Series</a>.</p>
<p>First, create the listener class, let&#8217;s call it <tt class="docutils literal"><span class="pre">CurrentSiteListener</span></tt> and
set it to have the <tt class="docutils literal"><span class="pre">SiteManager</span></tt> and Doctrine&#8217;s <tt class="docutils literal"><span class="pre">EntityManager</span></tt> injected
as dependencies. Let&#8217;s also inject the <tt class="docutils literal"><span class="pre">base_host</span></tt> parameter, we&#8217;ll need
it here as well:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/EventListener/CurrentSiteListener.php</span>
<span class="k">namespace</span> <span class="nx">KnpU\QADayBundle\EventListener</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">KnpU\QADayBundle\Site\SiteManager</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Doctrine\ORM\EntityManager</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">CurrentSiteListener</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$siteManager</span><span class="p">;</span>

    <span class="k">private</span> <span class="nv">$em</span><span class="p">;</span>

    <span class="k">private</span> <span class="nv">$baseHost</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">(</span><span class="nx">SiteManager</span> <span class="nv">$siteManager</span><span class="p">,</span> <span class="nx">EntityManager</span> <span class="nv">$em</span><span class="p">,</span> <span class="nv">$baseHost</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">siteManager</span> <span class="o">=</span> <span class="nv">$siteManager</span><span class="p">;</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">em</span> <span class="o">=</span> <span class="nv">$em</span><span class="p">;</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">baseHost</span> <span class="o">=</span> <span class="nv">$baseHost</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The goal of this class is to determine and set the current site at the very
beginning of every request, before your controller is executed. Create a
method called <tt class="docutils literal"><span class="pre">onKernelRequest</span></tt> with a single <tt class="docutils literal"><span class="pre">$event</span></tt> argument, which
is an instance of <tt class="docutils literal"><span class="pre">GetResponseEvent</span></tt>:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/KnpU/QADayBundle/EventListener/CurrentSiteListener.php</span>

<span class="c1">// ...</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpKernel\Event\GetResponseEvent</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">CurrentSiteListener</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">onKernelRequest</span><span class="p">(</span><span class="nx">GetResponseEvent</span> <span class="nv">$event</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">die</span><span class="p">(</span><span class="s1">&#39;test!&#39;</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">The Symfony.com documentation has a full list of the events and event
objects in the <a class="reference external" href="http://symfony.com/doc/current/components/http_kernel/introduction.html#creating-an-event-listener">HttpKernel</a> section.</p>
</div>
<p>Before we fill in the rest of this method, register the listener as a service
and tag it so that it&#8217;s an event listener on the <tt class="docutils literal"><span class="pre">kernel.request</span></tt> event:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="l-Scalar-Plain">services</span><span class="p-Indicator">:</span>
    <span class="c1"># ...</span>

    <span class="l-Scalar-Plain">current_site_listener</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">class</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">KnpU\QADayBundle\EventListener\CurrentSiteListener</span>
        <span class="l-Scalar-Plain">arguments</span><span class="p-Indicator">:</span>
            <span class="p-Indicator">-</span> <span class="s">&quot;@site_manager&quot;</span>
            <span class="p-Indicator">-</span> <span class="s">&quot;@doctrine.orm.entity_manager&quot;</span>
            <span class="p-Indicator">-</span> <span class="s">&quot;%base_host%&quot;</span>
        <span class="l-Scalar-Plain">tags</span><span class="p-Indicator">:</span>
            <span class="p-Indicator">-</span>
                <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kernel.event_listener</span>
                <span class="l-Scalar-Plain">method</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">onKernelRequest</span>
                <span class="l-Scalar-Plain">event</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kernel.request</span>
</pre></div>
</div>
<p>And with that, let&#8217;s try it! When we refresh the page, we can see the message
that proves that our new listener is being called early in Symfony&#8217;s bootstrap.</p>
<p>With all that behind us, let&#8217;s fill in the final step! In the <tt class="docutils literal"><span class="pre">onKernelRequest</span></tt>
method, our goal is to determine and set the current site. Copy the logic
out of our controller into this method, then tweak things to hook up:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">onKernelRequest</span><span class="p">(</span><span class="nx">GetResponseEvent</span> <span class="nv">$event</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$request</span> <span class="o">=</span> <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getRequest</span><span class="p">();</span>

    <span class="nv">$currentHost</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">getHttpHost</span><span class="p">();</span>
    <span class="nv">$subdomain</span> <span class="o">=</span> <span class="nb">str_replace</span><span class="p">(</span><span class="s1">&#39;.&#39;</span><span class="o">.</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">baseHost</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nv">$currentHost</span><span class="p">);</span>

    <span class="nv">$site</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">em</span>
        <span class="o">-&gt;</span><span class="na">getRepository</span><span class="p">(</span><span class="s1">&#39;QADayBundle:Site&#39;</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">findOneBy</span><span class="p">(</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;subdomain&#39;</span> <span class="o">=&gt;</span> <span class="nv">$subdomain</span><span class="p">))</span>
    <span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$site</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="nx">NotFoundHttpException</span><span class="p">(</span><span class="nb">sprintf</span><span class="p">(</span>
            <span class="s1">&#39;No site for host &quot;%s&quot;, subdomain &quot;%s&quot;&#39;</span><span class="p">,</span>
            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">baseHost</span><span class="p">,</span>
            <span class="nv">$subdomain</span>
        <span class="p">));</span>
    <span class="p">}</span>

    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">siteManager</span><span class="o">-&gt;</span><span class="na">setCurrentSite</span><span class="p">(</span><span class="nv">$site</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The differences here are a bit subtle. For example, the <tt class="docutils literal"><span class="pre">baseHost</span></tt> is now
stored in a property and we can get Doctrine&#8217;s repository through the <tt class="docutils literal"><span class="pre">$em</span></tt>
property. We&#8217;ve also replaced the <tt class="docutils literal"><span class="pre">createNotFoundException</span></tt> call by instantiating
a new <tt class="docutils literal"><span class="pre">NotFoundHttpException</span></tt> instance. The <tt class="docutils literal"><span class="pre">createNotFoundException</span></tt>
method lives in Symfony&#8217;s base controller. We don&#8217;t have access to it here,
but this is actually what it really does behind the scenes.</p>
<p>Since we&#8217;ve registered this as an event listener on the <tt class="docutils literal"><span class="pre">kernel.request</span></tt>
event, this method will guarantee that the <tt class="docutils literal"><span class="pre">SiteManager</span></tt> has a current site
before our controller is ever executed. This means we can get rid of almost
all of the code in our controller:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">public</span> <span class="k">function</span> <span class="nf">indexAction</span><span class="p">()</span>
<span class="p">{</span>
    <span class="sd">/** @var $siteManager \KnpU\QADayBundle\Site\SiteManager */</span>
    <span class="nv">$siteManager</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">container</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;site_manager&#39;</span><span class="p">);</span>

    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;QADayBundle:Default:index.html.twig&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">&#39;site&#39;</span> <span class="o">=&gt;</span> <span class="nv">$siteManager</span><span class="o">-&gt;</span><span class="na">getCurrentSite</span><span class="p">(),</span>
    <span class="p">));</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Try it out! Sweet, it still works! We can now use the <tt class="docutils literal"><span class="pre">SiteManager</span></tt> from
anywhere in our code to get the current Site object. For example, if we needed
to load all the blog posts for only this Site, we could grab the current Site
then create a query that returns only those items. Basically, from here, you
can be dangerous!</p>
</div>
</div>


    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2810656325" id="dsq-comment-2810656325">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2810656325">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-07-29</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2810656325" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2810656325" class="dsq-comment-text">
	                                <p>Hey Shairyar!</p><p>Actually, /etc/hosts is *not* dynamic like this. However, you *can* make DNS records on the web that are dynamic. In other words, this is a problem when developing locally, but not on production. There *are* ways to do this locally, but they're more complex than using /etc/hosts.</p><p>But check out Laravel's Valet: <a href="https://disq.us/url?url=https%3A%2F%2Flaravel.com%2Fdocs%2F5.2%2Fvalet%3AHAq8qY2X3NayIHKtn6eLl7oRdcQ&amp;cuid=1175718" rel="nofollow noopener">https://laravel.com/docs/5.2/v...</a>. This is a standalone tool to help manage this type of thing. I haven't used it yet, but I believe it does something similar: it sets up something locally so that all *.dev sites point to your local machine. It might or might not work - but something worth checking (or you can try to dig to see how they do it).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2809847785" id="dsq-comment-2809847785">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/shairyarbaig/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10592/9062/avatar92.jpg?1469787361">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2809847785">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-07-29</span>
	                            <span class="dsq-commenter-name">Shairyar Baig</span>
	                        </div>

	                        <div id="dsq-comment-message-2809847785" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2809847785" class="dsq-comment-text">
	                                <p>Hi Ryan, I have been thinking if it is possible to create some sort of wildcard host in /etc/hosts like <br></p><pre><code>*.lolnimals.l</code></pre><p></p><p>This way we don't have to hard code every host/subdomain? is this possible? Reason I am asking this is because I have this signup form where user provides the company name and then based on this company a url is generated for them to use the web app like <a href="http://disq.us/url?url=http%3A%2F%2Fcompanyname.example.com%3Ajj4z7K70NqfPqUM1cvMKBvI8MDc&amp;cuid=1175718" rel="nofollow noopener">http://companyname.example.com</a> now the routing and all is fine but it is this /etc/hosts file I am thinking how to setup so I dont have to manually add every company name domain in it.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2804594273" id="dsq-comment-2804594273">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/shairyarbaig/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10592/9062/avatar92.jpg?1469787361">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2804594273">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-07-26</span>
	                            <span class="dsq-commenter-name">Shairyar Baig</span>
	                        </div>

	                        <div id="dsq-comment-message-2804594273" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2804594273" class="dsq-comment-text">
	                                <p>Thanks Ryan, i will dig into this further</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2804175880" id="dsq-comment-2804175880">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2804175880">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-07-26</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2804175880" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2804175880" class="dsq-comment-text">
	                                <p>It depends on *how* much needs to change. There are kind of 3 levels:</p><p>A) If you just need a different logo and different company name, just make sure your Site entity has fields for logo and "name" and print this in Twig! I usually make some custom Twig function like get_current_site(), or even make site() a global variable so that I have the Site object.</p><p>B) If you have a few different variants of part of your page (e.g. you have 15 sites, but they have 3 different themes), then you could use something like LiipThemeBundle and set the theme based on some property on the Site (e.g. Site.themeName)</p><p>C) If you parts of your page need to be completely different and you even need to be able to change those templates on production, then yes, you'll need to store at least some fragments of Twig in the database (which is ok, but this seems like a crazy requirement to me!)</p><p>I hope that helps!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2803972101" id="dsq-comment-2803972101">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/shairyarbaig/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10592/9062/avatar92.jpg?1469787361">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2803972101">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-07-26</span>
	                            <span class="dsq-commenter-name">Shairyar Baig</span>
	                        </div>

	                        <div id="dsq-comment-message-2803972101" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2803972101" class="dsq-comment-text">
	                                <p>Thanks Ryan for letting me know about the filter tutorial, I will look into that. Out of curiosity I was wondering if we have dynamic subdomains setup what happens if you want to change the look of one of the subdomains a bit for example change the logo or background color, how will that work since the code base behind the scene is all same? Does this mean that we will need to save the template parts in database which users can customise as per theirs needs or there is an easier alternate provided by Symfony?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2802553300" id="dsq-comment-2802553300">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2802553300">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-07-25</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2802553300" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2802553300" class="dsq-comment-text">
	                                <p>Exactly :). The trick is to keep your code organized and make sure that *all* queries include the WHERE statement for the correct site. I typically do this manually, but you can also have Doctrine automatically add that to the query (<a href="http://disq.us/url?url=http%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fdoctrine-queries%2Ffilters%29%3AF3Cxwgqhh8jiP-5whuEnrsVC8iM&amp;cuid=1175718" rel="nofollow noopener">http://knpuniversity.com/scree...</a>. It's a matter of taste.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2801901100" id="dsq-comment-2801901100">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/shairyarbaig/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10592/9062/avatar92.jpg?1469787361">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2801901100">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-07-25</span>
	                            <span class="dsq-commenter-name">Shairyar Baig</span>
	                        </div>

	                        <div id="dsq-comment-message-2801901100" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2801901100" class="dsq-comment-text">
	                                <p>Nice tutorial, This is exactly what i was looking for, this means that the site table needs to have relationship with every table that gets created so the data can be linked with the site that the content are meant for.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1800420682" id="dsq-comment-1800420682">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1800420682">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-19</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1800420682" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1800420682" class="dsq-comment-text">
	                                <p>Ya, no video download for this - it was just because it was the *only* video in all of these posts. But if you want, you can always download the mp4 that's streaming in the browser (open up network tools to get the URL).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1798861728" id="dsq-comment-1798861728">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/MolloKhan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/9429/4645/avatar92.jpg?1475260109">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1798861728">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-17</span>
	                            <span class="dsq-commenter-name">Diego Aguiar</span>
	                        </div>

	                        <div id="dsq-comment-message-1798861728" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1798861728" class="dsq-comment-text">
	                                <p>Is it possible to download this video ? Is not the option in Download button</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1702272982" id="dsq-comment-1702272982">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1702272982">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-11-19</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1702272982" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1702272982" class="dsq-comment-text">
	                                <p>Hey Jeff!</p><p>Actually, you're right on all accounts. You would only *need* an event listener if you needed to actually *do* something with the current "Site" at the beginning of the request (e.g. maybe some Site's are locked down, so you redirect to the login page). But if you only need the information later from some service, then yea, just inject the service as you said. So, you're not missing anything at all - quite the opposite :).</p><p>The StackOverflow you linked to correctly injects the request_stack - so that's perfect. It does it via "setter" injection (that's the "calls" stuff). You can also just inject it via the constructor like any other normal service - just wanted to highlight that there's nothing special going on there.</p><p>Cheers!</p><p>P.S. Good question - maybe you're not such a novice ;)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1702027847" id="dsq-comment-1702027847">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_L6lLvc7hLI/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/13225/2309/avatar92.jpg?1471749594">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1702027847">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-11-19</span>
	                            <span class="dsq-commenter-name">Jeff Way</span>
	                        </div>

	                        <div id="dsq-comment-message-1702027847" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1702027847" class="dsq-comment-text">
	                                <p>Why is the event listener necessary? It may be my inexperience talking but it seems like anything involving events causes code to appear kind of magical unless you are already aware of it, so for me events are something to be avoided unless they are necessary. In this case it isn't really necessary since it's possible to inject the request directly into your service. Here's how: <a href="http://disq.us/url?url=http%3A%2F%2Fstackoverflow.com%2Fquestions%2F9332925%2Fhow-to-inject-the-request-into-a-service%23answer-20502945%3A_LKhtpfRCGD-wNRd9fDjLom4I-8&amp;cuid=1175718" rel="nofollow noopener">http://stackoverflow.com/quest...</a></p><p>What do you guys think? I'm still a novice to Symfony so I'd really appreciate some best-practices wisdom :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_symfony2-dynamic-subdomains';var disqus_url = 'https://knpuniversity.com/screencast/question-answer-day/symfony2-dynamic-subdomains';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="controllers-services#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/question-answer-day/symfony2-dynamic-subdomains" addthis:title="Question and Answer Day: March 27th, 2013">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"question-answer-day","courseIsOwned":true,"chapter":"How to handle dynamic Subdomains in Symfony","chapterNumber":6,"chapterIsFree":true}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Question and Answer Day: March 27th, 2013';
        Core.courseId = 36
        Core.courseIsOwned = true;
        Core.courseSlug = 'question-answer-day';
                    Core.chapterTitle = 'How to handle dynamic Subdomains in Symfony';
            Core.chapterNumber = 6;
            Core.chapterIsFree = true;
            Core.chapterSlug = 'symfony2-dynamic-subdomains';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":469,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
