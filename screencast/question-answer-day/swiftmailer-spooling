<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Swiftmailer Spooling and Handling Failures > Question and Answer Day: March 27th, 2013 | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: true,
            courseChapterId: 12716
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: How\x20to\x20handle\x20dynamic\x20Subdomains\x20in\x20Symfony <i class="fa fa-play"></i>',
            'url': '/screencast/question-answer-day/symfony2-dynamic-subdomains#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="Woh! KnpUniversity Question &amp; Answer Day is **March 27th, 2013**!

Submit all your Symfony, Behat and PHP questions by March 26th, 2013 and
we&#039;ll answer them. We&#039;re calling it KnpU Question/Answer Day - we&#039;re
finally shutting up and doing the listening!
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Swiftmailer Spooling and Handling Failures">
<meta property="og:description" content="Woh! KnpUniversity Question &amp;amp; Answer Day is **March 27th, 2013**!

Submit all your Symfony, Behat and PHP questions by March 26th, 2013 and
we&amp;#039;ll answer them. We&amp;#039;re calling it KnpU Question/Answer Day - we&amp;#039;re
finally shutting up and doing the listening!
">
<meta property="og:url" content="http://knpuniversity.com/screencast/question-answer-day/swiftmailer-spooling">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/question-answer-day:83f99eb1080324347a1ede667a2e334cd750028d/qa-day.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="swiftmailer-spooling#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        5.
                            Swiftmailer Spooling and Handlin...
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="../question-answer-day.1">Question and Answer Day: March 27th, 2013</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="questions" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Ask Questions!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> :55</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="routing-parameter-pattern" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        More on Routing And Dependency Injection Parameters
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="travis-ci" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        How to use Behat and Selenium on Travis CI
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="create-composer-package" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Creating your very own Composer Package
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="swiftmailer-spooling" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Swiftmailer Spooling and Handling Failures
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony2-dynamic-subdomains" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        How to handle dynamic Subdomains in Symfony
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 11:43</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="controllers-services" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Symfony2: Make my Controllers Services?
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="less-with-assetic" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        How to compile .less styles into .css (on any OS)
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="custom-validation-property-path" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Custom Validation, Callback and Constraints
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="remove-form-field" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        How to (dynamically) remove a Form Field
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony2-rad" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Symfony2: Setup, Configuration, Rad?
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony2-users-menu-cms" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                12.
                        Complex Symfony2 Examples: Users, Menus, CMS Features
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="model-organization" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                13.
                        Symfony2: Organizing your Business Logic into Models
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony2-conditionally-required-field" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                14.
                        Conditionally Requiring a Form Field in Symfony2
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="symfony2-security-firewalls-dinos" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                15.
                        Symfony2 Security, Firewalls and Dinosaurs
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="training" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                16.
                        Training: The Hardest Part
                                            </div>

                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <div class="dropdown download-buy-buttons">
              <button class="btn btn-success dropdown-toggle" type="button" id="downloadDropdown" data-toggle="dropdown" aria-expanded="true">
                  <span><i class="fa fa-download"></i></span>
                  <span class="hidden-xs">Download</span>
                  <span class="caret"></span>
              </button>
              <ul class="list-unstyled dropdown-menu pull-right" role="menu" aria-labelledby="downloadDropdown">
                  
                  <li><a href="../get/question-answer-day/code/83f99eb1080324347a1ede667a2e334cd750028d" class="js-analytics-download" data-download-type="code"><i class="fa fa-code"></i> Course Code</a></li>

                                        <li><a href="../get/question-answer-day/script/83f99eb1080324347a1ede667a2e334cd750028d" class="js-analytics-download" data-download-type="script"><i class="fa fa-book"></i> Course Script</a></li>              </ul>
          </div>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Swiftmailer Spooling and Handling Failures</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="../question-answer-day.1"><em>Question and Answer Day: March 27th, 2013 Tutorial</em></a>                    </p>
                            </div>
        </div>

         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="symfony2-dynamic-subdomains#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="swiftmailer-spooling#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="swiftmailer-spooling#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (2)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script script-content">
                                                                                        <a href="https://github.com/knpuniversity/question-answer-day/edit/master/knpu/swiftmailer-spooling.rst" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    
  <div class="section" id="swiftmailer-spooling-and-handling-failures">
<h1>Swiftmailer Spooling and Handling Failures<a class="headerlink" href="swiftmailer-spooling#swiftmailer-spooling-and-handling-failures" title="Permalink to this headline">¶</a></h1>
<p>From <a class="reference external" href="https://twitter.com/bicpi">Philipp Rieber</a></p>
<blockquote>
<div><p>Hi, I&#8217;m using swiftmailer&#8217;s file spooling and I&#8217;m flushing the queue
every minute using a cron task:</p>
<div class="highlight-bash"><div class="highlight"><pre>app/console swiftmailer:spool:send --env<span class="o">=</span>prod &gt; /dev/null 2&gt;&gt;app/logs/error.log
</pre></div>
</div>
<p>Due to SMTP errors like &#8220;554 Message rejected: Address blacklisted&#8221; or
&#8220;554 Message rejected: Email address is not verified&#8221; some message files
remain in the spool directory and swiftmailer tries to send them over
and over again following the &#8220;recovery-timeout&#8221; setting of the command
(default = 15 minutes).</p>
<p>The problem is that a single exception during the sending process cancels
the whole command. So if there are more than 15 &#8220;xxx.message.sending&#8221;
files in the spool directory after a while and the cron job runs every
minute with a recovery-timeout of 15 minutes, then the new messages won&#8217;t
get sent any more. How can I handle that? Do I need an additional command
to remove old &#8220;xxx.message.sending&#8221; files, e.g by wrapping and extending
the <tt class="docutils literal"><span class="pre">swiftmailer:spool:send</span></tt> command?</p>
<p>Currently I remove the old files manually from time to time and according
to Google I&#8217;m the only one having this issue ;-)</p>
<p>Thank you!</p>
</div></blockquote>
<div class="section" id="answer">
<h2>Answer<a class="headerlink" href="swiftmailer-spooling#answer" title="Permalink to this headline">¶</a></h2>
<p>Woh, tough question! So, let&#8217;s see what we can do. First, let&#8217;s me give everyone
else a little background by building a test project. Even if you&#8217;re not having
this issue, we&#8217;re going to learn quite a bit about spooling and some lower-level
parts of Swift Mailer. Philipp, you can skip down to the answer, or suggested
approach for this difficult problem ;).</p>
<p>First, configure Swift Mailer to send emails in some way, and tell it to
use a &#8220;file&#8221; spool. If you haven&#8217;t seen this before, we have a cookbook article
on it at Symfony.com called, well, <a class="reference external" href="http://symfony.com/doc/current/cookbook/email/spool.html">How to Spool Emails</a>:</p>
<div class="highlight-yaml"><div class="highlight"><pre># app/config/config.yml
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: file }
</pre></div>
</div>
<p>By default, most of the <tt class="docutils literal"><span class="pre">swiftmailer</span></tt> configuration is stored in the
<tt class="docutils literal"><span class="pre">app/config/parameters.yml</span></tt> file, so make sure you update your settings
there.</p>
<p>File spooling is really easy, and kinda neat. Whenever you tell Swiftmailer
to send an email, it actually doesn&#8217;t. Instead it stores it in a file and
waits for you to run a Symfony task that actually sends the email. The obvious
advantage is that the experience for your end-user is much faster.</p>
<p>Let&#8217;s use a small script I&#8217;ve created that loads up a bunch of spooled messages
for us. This bootstraps Symfony and lets me write any Symfony code I want
in it. It&#8217;s a quick and dirty way to create a spot where we can execute some
code that needs Symfony and is something we cover in our <a class="reference external" href="http://knpuniversity.com/screencast/getting-started-in-symfony2-2-1">Starting in Symfony2 series</a>:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="o">&lt;?</span><span class="nx">php</span>
<span class="c1">// load_emails.php</span>
<span class="k">require</span> <span class="nx">__DIR__</span><span class="o">.</span><span class="s1">&#39;/vendor/autoload.php&#39;</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Request</span><span class="p">;</span>
<span class="nv">$loader</span> <span class="o">=</span> <span class="k">require_once</span> <span class="nx">__DIR__</span><span class="o">.</span><span class="s1">&#39;/app/bootstrap.php.cache&#39;</span><span class="p">;</span>
<span class="k">require_once</span> <span class="nx">__DIR__</span><span class="o">.</span><span class="s1">&#39;/app/AppKernel.php&#39;</span><span class="p">;</span>
<span class="nv">$kernel</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">AppKernel</span><span class="p">(</span><span class="s1">&#39;prod&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
<span class="nv">$request</span> <span class="o">=</span> <span class="nx">Request</span><span class="o">::</span><span class="na">createFromGlobals</span><span class="p">();</span>
<span class="nv">$kernel</span><span class="o">-&gt;</span><span class="na">boot</span><span class="p">();</span>
<span class="nv">$container</span> <span class="o">=</span> <span class="nv">$kernel</span><span class="o">-&gt;</span><span class="na">getContainer</span><span class="p">();</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">enterScope</span><span class="p">(</span><span class="s1">&#39;request&#39;</span><span class="p">);</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">set</span><span class="p">(</span><span class="s1">&#39;request&#39;</span><span class="p">,</span> <span class="nv">$request</span><span class="p">);</span>
<span class="cm">/* end bootstrap */</span>

<span class="sd">/** @var $mailer \Swift_Mailer */</span>
<span class="nv">$mailer</span> <span class="o">=</span> <span class="nv">$container</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;mailer&#39;</span><span class="p">);</span>

<span class="nv">$message</span> <span class="o">=</span> <span class="nx">\Swift_Message</span><span class="o">::</span><span class="na">newInstance</span><span class="p">()</span>
    <span class="o">-&gt;</span><span class="na">setSubject</span><span class="p">(</span><span class="s1">&#39;Testing Spooling!&#39;</span><span class="p">)</span>
    <span class="o">-&gt;</span><span class="na">setFrom</span><span class="p">(</span><span class="s1">&#39;hello@knpuniversity.com&#39;</span><span class="p">)</span>
    <span class="o">-&gt;</span><span class="na">setTo</span><span class="p">(</span><span class="s1">&#39;ryan@knplabs.com&#39;</span><span class="p">)</span>
    <span class="o">-&gt;</span><span class="na">setBody</span><span class="p">(</span><span class="s1">&#39;Hallo emails!&#39;</span><span class="p">)</span>
<span class="p">;</span>

<span class="k">for</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$mailer</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">(</span><span class="nv">$message</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The script sends 10 email messages. Behind the scenes, I&#8217;ll also add a little
bit of code to the core os Swift Mailer so that my SMTP server appears to
fail about every 5 sends. This will fake STMP sending errors:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// vendor/swiftmailer/swiftmailer/lib/classes/Swift/Transport/AbstractSmtpTransport.php</span>
<span class="c1">// ...</span>

<span class="k">protected</span> <span class="k">function</span> <span class="nf">_assertResponseCode</span><span class="p">(</span><span class="nv">$response</span><span class="p">,</span> <span class="nv">$wanted</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">list</span><span class="p">(</span><span class="nv">$code</span><span class="p">)</span> <span class="o">=</span> <span class="nb">sscanf</span><span class="p">(</span><span class="nv">$response</span><span class="p">,</span> <span class="s1">&#39;%3d&#39;</span><span class="p">);</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">rand</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span> <span class="o">==</span> <span class="mi">5</span> <span class="o">&amp;&amp;</span> <span class="nb">in_array</span><span class="p">(</span><span class="mi">250</span><span class="p">,</span> <span class="nv">$wanted</span><span class="p">))</span> <span class="p">{</span>
        <span class="nv">$code</span> <span class="o">=</span> <span class="mi">554</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// ... the rest of the function</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="how-emails-are-file-spooled">
<h2>How Emails are File Spooled<a class="headerlink" href="swiftmailer-spooling#how-emails-are-file-spooled" title="Permalink to this headline">¶</a></h2>
<p>Run this script from the command line to queue the 10 messages:</p>
<div class="highlight-bash"><div class="highlight"><pre>php load_emails.php
</pre></div>
</div>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p>The script runs in the <tt class="docutils literal"><span class="pre">prod</span></tt> environment to be more realistic (since
your site typically runs in the <tt class="docutils literal"><span class="pre">prod</span></tt> environment). So, be sure to
clear your <tt class="docutils literal"><span class="pre">prod</span></tt> cache before trying any of this:</p>
<div class="last highlight-bash"><div class="highlight"><pre>php app/console cache:clear --env<span class="o">=</span>prod
</pre></div>
</div>
</div>
<p>You won&#8217;t see anything visually, and no emails were sent, but if you look
in the cache directory, you should see a <tt class="docutils literal"><span class="pre">swiftmailer</span></tt> directory with a
single file for each spooled message:</p>
<div class="highlight-bash"><div class="highlight"><pre>ls -la app/cache/prod/swiftmailer/spool
</pre></div>
</div>
<div class="highlight-text"><div class="highlight"><pre>0Mo4LSRwTj.message
30MJF9qOP7.message
BLxbfA_cKs.message
BaW2_ZzpAE.message
CgyPxTQ59E.message
Fw_Bux5LUh.message
GsDgqNHc89.message
IDbFa9CCtB.message
LEw9Xe.EZY.message
RKbbDMVKu9.message
</pre></div>
</div>
<p>This is how the file spool works: each message is given a random filename
and its contents are a serialized version of the <tt class="docutils literal"><span class="pre">Swift_Message</span></tt>.</p>
<p>To actually send these emails, use the <tt class="docutils literal"><span class="pre">swiftmailer:spool:send</span></tt> command.</p>
<div class="highlight-bash"><div class="highlight"><pre>php app/console swiftmailer:spool:send --env<span class="o">=</span>prod --message-limit<span class="o">=</span>10
</pre></div>
</div>
<p>Under normal conditions, this would find the first 10 files in the <tt class="docutils literal"><span class="pre">spool</span></tt>
directory, unserialize each file&#8217;s contents and then send it. In fact, behind
the scenes, each file is suffixed with <tt class="docutils literal"><span class="pre">.sending</span></tt> the moment before it
is sent, and then deleted afterwards if everything went ok. If you watched
your <tt class="docutils literal"><span class="pre">spool</span></tt> directory closely, you could see this while it&#8217;s sending:</p>
<div class="highlight-text"><div class="highlight"><pre>0Mo4LSRwTj.message.sending
30MJF9qOP7.message
BLxbfA_cKs.message
BaW2_ZzpAE.message
CgyPxTQ59E.message
Fw_Bux5LUh.message
GsDgqNHc89.message
IDbFa9CCtB.message
LEw9Xe.EZY.message
RKbbDMVKu9.message
</pre></div>
</div>
<p>Normally you don&#8217;t really care about this... until your emails start to fail.</p>
</div>
<div class="section" id="how-swift-mailer-handles-failures">
<h2>How Swift Mailer handles Failures<a class="headerlink" href="swiftmailer-spooling#how-swift-mailer-handles-failures" title="Permalink to this headline">¶</a></h2>
<p>As Philipp mentioned, when you run the <tt class="docutils literal"><span class="pre">swiftmailer:spool:send</span></tt> command
and one email fails, it will blow up! That&#8217;s actually not that big of a problem
initially: as soon as any email is sent successfully, its spool file is deleted,
which avoids duplicate sending, even if another email send blows up later.
The email that failed remains in its &#8220;sending&#8221; state, meaning it has the
<tt class="docutils literal"><span class="pre">.sending</span></tt> suffix:</p>
<div class="highlight-text"><div class="highlight"><pre>0Mo4LSRwTj.message.sending
</pre></div>
</div>
<p>When you re-run the command, that <tt class="docutils literal"><span class="pre">.sending</span></tt> file is skipped, and the other
nine files in the spool are sent.</p>
<p>So then, what happens to the email that failed? Does Swift Mailer every try
to send it again? In fact, it does! And this is where the problems start.
When you run the command, there is an optional <tt class="docutils literal"><span class="pre">--recover-timeout</span></tt> option,
which defaults to 900, or 15 minutes. This option means that if a file has
been in the <tt class="docutils literal"><span class="pre">.sending</span></tt> state for 15 minutes, the suffix should be removed
and we should try re-sending it. This is really smart, because it means that
if your SMTP server has a temporary failure, the email will just send later.</p>
</div>
<div class="section" id="failures-failures-blocking-everything">
<h2>Failures, Failures Blocking Everything!<a class="headerlink" href="swiftmailer-spooling#failures-failures-blocking-everything" title="Permalink to this headline">¶</a></h2>
<p>But sometimes, an email fails to send for a permanent reason, like
<tt class="docutils literal"><span class="pre">554</span> <span class="pre">Message</span> <span class="pre">rejected:</span> <span class="pre">Address</span> <span class="pre">blacklisted</span></tt>. No matter how many times you
try to re-send that email, it will probably never work. It will fail, wait
fifteen minutes, fail again, then repeat endlessly. Even if these happen
every now and then, after awhile you&#8217;ll get a <tt class="docutils literal"><span class="pre">spool/</span></tt> directory that&#8217;s
full of failures:</p>
<div class="highlight-text"><div class="highlight"><pre>0Mo4LSRwTj.message.sending
30MJF9qOP7.message.sending
BLxbfA_cKs.message.sending
BaW2_ZzpAE.message.sending
CgyPxTQ59E.message.sending
Fw_Bux5LUh.message.sending
GsDgqNHc89.message.sending
IDbFa9CCtB.message.sending
LEw9Xe.EZY.message.sending
RKbbDMVKu9.message.sending
</pre></div>
</div>
<p>These are just annoying at first, since after fifteen minutes, each is re-tried,
which causes your script to fail and no other emails to be sent. If you&#8217;re
running the script often enough, it&#8217;s no big deal.</p>
<p>So back to Philipp&#8217;s question:</p>
<blockquote>
<div>So if there are more than 15 &#8220;xxx.message.sending&#8221; files in the spool directory
after a while and the cron job runs every minute with a recovery-timeout
of 15 minutes, then the new messages won&#8217;t get sent any more. How can I
handle that?</div></blockquote>
<p>Let&#8217;s walk through this: imagine you have 15 files that are failing. One-by-one,
these become eligible to be re-tried. Our script, which runs every minute,
tries one, then fails. A minute later it tries another, then another, etc,
etc. After fifteen minutes it hasn&#8217;t actually sent any emails - it&#8217;s only
failed to re-send these. To make matters worse, the first failed email is
ready to be re-tried again, so the cycle continues.</p>
</div>
<div class="section" id="the-solution">
<h2>The Solution?<a class="headerlink" href="swiftmailer-spooling#the-solution" title="Permalink to this headline">¶</a></h2>
<p>This is actually a really interesting, but challenging issue. At the core
is the fact that Swift Mailer can&#8217;t tell the difference between a mail that
should be re-tried, and one that will fail forever. To make matters worse,
there&#8217;s no possible way to configure the file spool to stop trying after a
few attempts and delete the mail. This seems like a shortcoming in the spool
itself, but for now, let&#8217;s work around it!</p>
<p>In my opinion, the best solution is create a separate task that handles these
failures by trying them once more, then deleting them finally. Let&#8217;s start
with the skeleton for the command:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">namespace</span> <span class="nx">KnpU\QADayBundle\Command</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Console\Input\InputInterface</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Console\Output\OutputInterface</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">ClearFailedSpoolCommand</span> <span class="k">extends</span> <span class="nx">ContainerAwareCommand</span>
<span class="p">{</span>
    <span class="k">protected</span> <span class="k">function</span> <span class="nf">configure</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$this</span>
            <span class="o">-&gt;</span><span class="na">setName</span><span class="p">(</span><span class="s1">&#39;swiftmailer:spool:clear-failures&#39;</span><span class="p">)</span>
            <span class="o">-&gt;</span><span class="na">setDescription</span><span class="p">(</span><span class="s1">&#39;Clears failures from the spool&#39;</span><span class="p">)</span>
        <span class="p">;</span>
    <span class="p">}</span>

    <span class="k">protected</span> <span class="k">function</span> <span class="nf">execute</span><span class="p">(</span><span class="nx">InputInterface</span> <span class="nv">$input</span><span class="p">,</span> <span class="nx">OutputInterface</span> <span class="nv">$output</span><span class="p">)</span>
    <span class="p">{</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The goal of the command will be to find all <tt class="docutils literal"><span class="pre">.loading</span></tt> files, try them
once again, then delete the spool file. This will use a few parts of Swift
Mailer and its integration with Symfony that are deep enough that you&#8217;ll
need to be more careful when you upgrade. For example, the fact that the failed
spools are suffixed with <tt class="docutils literal"><span class="pre">.sending</span></tt> is really a detail that we&#8217;re not supposed
to care about, but we&#8217;ll take advantage of it.</p>
<p>To start, grab the <em>real</em> transport from the service container and make sure
it&#8217;s started:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="sd">/** @var $transport \Swift_Transport */</span>
<span class="nv">$transport</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getContainer</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;swiftmailer.transport.real&#39;</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$transport</span><span class="o">-&gt;</span><span class="na">isStarted</span><span class="p">())</span> <span class="p">{</span>
    <span class="nv">$transport</span><span class="o">-&gt;</span><span class="na">start</span><span class="p">();</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The &#8220;transport&#8221; used by the <tt class="docutils literal"><span class="pre">mailer</span></tt> service is the file spool, which means
when you send through it, it actually just spools. Symfony stores your <em>real</em>
transport - whether that be SMTP or something else - as a service called
<tt class="docutils literal"><span class="pre">swiftmailer.transport.real</span></tt>.</p>
<p>Next, let&#8217;s find all the spooled files. This takes advantage of the <tt class="docutils literal"><span class="pre">swiftmailer.spool.file.path</span></tt>
parameter, which contains the directory where the spool files live. This
parameter is used when the <a class="reference external" href="https://github.com/symfony/SwiftmailerBundle/blob/master/Resources/config/spool_file.xml#L12">Swift_FileSpool is instantiated</a>. We&#8217;ll also
use the <a class="reference external" href="http://symfony.com/doc/current/components/finder.html">Finder</a> component to really make this shine:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// ...</span>
<span class="nv">$spoolPath</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getContainer</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getParameter</span><span class="p">(</span><span class="s1">&#39;swiftmailer.spool.file.path&#39;</span><span class="p">);</span>
<span class="nv">$finder</span> <span class="o">=</span> <span class="nx">Finder</span><span class="o">::</span><span class="na">create</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">in</span><span class="p">(</span><span class="nv">$spoolPath</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">(</span><span class="s1">&#39;*.sending&#39;</span><span class="p">);</span>

<span class="k">foreach</span> <span class="p">(</span><span class="nv">$finder</span> <span class="k">as</span> <span class="nv">$failedFile</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Finally, fill in the loop:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// ...</span>
<span class="k">foreach</span> <span class="p">(</span><span class="nv">$finder</span> <span class="k">as</span> <span class="nv">$failedFile</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// rename the file, so no other process tries to find it</span>
    <span class="nv">$tmpFilename</span> <span class="o">=</span> <span class="nv">$failedFile</span><span class="o">.</span><span class="s1">&#39;.finalretry&#39;</span><span class="p">;</span>
    <span class="nb">rename</span><span class="p">(</span><span class="nv">$failedFile</span><span class="p">,</span> <span class="nv">$tmpFilename</span><span class="p">);</span>

    <span class="sd">/** @var $message \Swift_Message */</span>
    <span class="nv">$message</span> <span class="o">=</span> <span class="nb">unserialize</span><span class="p">(</span><span class="nb">file_get_contents</span><span class="p">(</span><span class="nv">$tmpFilename</span><span class="p">));</span>
    <span class="nv">$output</span><span class="o">-&gt;</span><span class="na">writeln</span><span class="p">(</span><span class="nb">sprintf</span><span class="p">(</span>
        <span class="s1">&#39;Retrying &lt;info&gt;%s&lt;/info&gt; to &lt;info&gt;%s&lt;/info&gt;&#39;</span><span class="p">,</span>
        <span class="nv">$message</span><span class="o">-&gt;</span><span class="na">getSubject</span><span class="p">(),</span>
        <span class="nb">implode</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">,</span> <span class="nb">array_keys</span><span class="p">(</span><span class="nv">$message</span><span class="o">-&gt;</span><span class="na">getTo</span><span class="p">()))</span>
    <span class="p">));</span>

    <span class="k">try</span> <span class="p">{</span>
        <span class="nv">$transport</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">(</span><span class="nv">$message</span><span class="p">);</span>
        <span class="nv">$output</span><span class="o">-&gt;</span><span class="na">writeln</span><span class="p">(</span><span class="s1">&#39;Sent!&#39;</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">\Swift_TransportException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$output</span><span class="o">-&gt;</span><span class="na">writeln</span><span class="p">(</span><span class="s1">&#39;&lt;error&gt;Send failed - deleting spooled message&lt;/error&gt;&#39;</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// delete the file, either because it sent, or because it failed</span>
    <span class="nb">unlink</span><span class="p">(</span><span class="nv">$tmpFilename</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Woh! Let&#8217;s walk through this using 4 friendly bullet points:</p>
<p>1) We rename the spool file to prevent any other process from sending this
file while we try;</p>
<p>2) The contents of the spool file are a serialized <tt class="docutils literal"><span class="pre">\Swift_Message</span></tt> object,
which we an unserialize to get it back;</p>
<ol class="arabic simple" start="3">
<li>We once again try to <tt class="docutils literal"><span class="pre">send</span></tt> the message.</li>
</ol>
<p>4) Whether the message sends or fails, we delete the spool file to clean
it out.</p>
<p>And that&#8217;s it! Now, set the command to run on some interval. If these messages
tend to start to be a problem after an hour, run this hourly. If it&#8217;s an
uncommon issue, run it daily:</p>
<div class="highlight-bash"><div class="highlight"><pre>php app/console swiftmailer:spool:clear-failures --env<span class="o">=</span>prod
</pre></div>
</div>
<p>With a good mixture of failures and success, the output will look something
like this:</p>
<div class="highlight-text"><div class="highlight"><pre>Retrying Testing Spooling! to ryan@knplabs.com
Sent!
Retrying Testing Spooling! to ryan@knplabs.com
Send failed - deleting spooled message
Retrying Testing Spooling! to ryan@knplabs.com
Sent!
Retrying Testing Spooling! to ryan@knplabs.com
Send failed - deleting spooled message
</pre></div>
</div>
<p>There are countless other approaches you could take, but I prefer this one
because it prevents you from needing to override any core code. The point
is that, one way or another, you&#8217;re on your own when you solve this. With
some refactoring of <tt class="docutils literal"><span class="pre">Swift_FileSpool</span></tt>, it should be possible to set a max
retry limit per mail, but that&#8217;s not the case right now.</p>
<p>Still, file spooling is great. If you&#8217;re concerned about delivering emails
to your users without slowing down their experience, this is a very easy
way to accomplish that.</p>
</div>
</div>


    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2030783077" id="dsq-comment-2030783077">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2030783077">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-17</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2030783077" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2030783077" class="dsq-comment-text">
	                                <p>Cool suggestion :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2029025239" id="dsq-comment-2029025239">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/joppeters/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/15785/4966/avatar92.jpg?1431801278">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2029025239">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-16</span>
	                            <span class="dsq-commenter-name">Jop Peters</span>
	                        </div>

	                        <div id="dsq-comment-message-2029025239" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2029025239" class="dsq-comment-text">
	                                <p>Interesting article! I might be wrong, but I think a race condition might occur with this solution. If the "actual" spooler is sending the message and postfixes the message it's sending with ".sending" and the error spooler starts up right at that second, it will send the message twice. Both the actual spooler as well as the error spooler will send the message.</p><p>I would propose adding a check for last file access time, to make sure a certain amount of time has passed before the error spooler kicks in. A period smaller than the recovery-timeout (5 minutes sounds about right). This gives the original spooler time to send the message and will avoid duplicate sending.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_swiftmailer-spooling';var disqus_url = 'https://knpuniversity.com/screencast/question-answer-day/swiftmailer-spooling';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="symfony2-dynamic-subdomains#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/question-answer-day/swiftmailer-spooling" addthis:title="Question and Answer Day: March 27th, 2013">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"question-answer-day","courseIsOwned":true,"chapter":"Swiftmailer Spooling and Handling Failures","chapterNumber":5,"chapterIsFree":true}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Question and Answer Day: March 27th, 2013';
        Core.courseId = 36
        Core.courseIsOwned = true;
        Core.courseSlug = 'question-answer-day';
                    Core.chapterTitle = 'Swiftmailer Spooling and Handling Failures';
            Core.chapterNumber = 5;
            Core.chapterIsFree = true;
            Core.chapterSlug = 'swiftmailer-spooling';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":355,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
