<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>kernel.request and the RouterListener > Journey to the Center of Symfony: HttpKernel Request-Response | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 29394
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: Finding\x20and\x20Instantiating\x20the\x20Controller <i class="fa fa-play"></i>',
            'url': '/screencast/symfony-journey/determine-the-controller#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="Let&#039;s not just *use* Symfony, let&#039;s conquer it! In this series, you and
I will journey to the center of Symfony by ripping open the source code,
adding debug statements and seeing what *really* happens between the
request and the response. It&#039;s as geeky-awesome as it sounds.

[Besides dinosaurs](http://upload.wikimedia.org/wikipedia/commons/a/a0/Amazing_Stories_June_1926.jpg),
expect to do the following on our adventure:

* Create an event listener that does amazing things
* Step through the `HttpKernel::handle()` method that&#039;s used in Symfony and Drupal 8
* See where event like `kernel.request`, `kernel.response` and others are dispatched
* Learn about request attributes and the magic they give us
* Find out what is a sub-request and how to handle it
* Create your own sub-request manually
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="kernel.request and the RouterListener">
<meta property="og:description" content="Let&amp;#039;s not just *use* Symfony, let&amp;#039;s conquer it! In this series, you and
I will journey to the center of Symfony by ripping open the source code,
adding debug statements and seeing what *really* happens between the
request and the response. It&amp;#039;s as geeky-awesome as it sounds">
<meta property="og:url" content="http://knpuniversity.com/screencast/symfony-journey/httpkernel-router-listener">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/symfony-journey:c7b574fe544fb7bbc1271c944cd04846d13f8156/sf2-journey-kernel.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="httpkernel-router-listener#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        3.
                            kernel.request and the RouterLis...
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">Journey to the Center of Symfony: HttpKernel Request-Response</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="event-subscriber" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Interrupt Symfony with an Event Subscriber
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 8:40</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="httpkernel-handle" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        HttpKernel::handle() The Heart of Everything
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:46</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="httpkernel-router-listener" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        kernel.request and the RouterListener
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 9:48</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="determine-the-controller" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Finding and Instantiating the Controller
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:42</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="kernel.controller-and-getarguments" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        kernel.controller Event &amp; Controller Arguments
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:54</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="kernel.view-event" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        The kernel.view Event
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:17</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="httpkernel-handle-finishing-up" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Finishing with kernel.response and kernel.exception
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:34</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="magically-replace-_controller" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Symfony Magic: Replace the _controller
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:23</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="magically-add-controller-args" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Making an Argument Available to All Controllers
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:57</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="sub-requests" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        What about Sub Requests?
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:31</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="sub-request-internals" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        How Sub-Requests Work
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:58</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/symfony-journey" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">kernel.request and the RouterListener</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>Journey to the Center of Symfony: HttpKernel Request-Response Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $9.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="determine-the-controller#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="httpkernel-router-listener#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="httpkernel-router-listener#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (2)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script script-content">
                                                                                        <a href="https://github.com/knpuniversity/symfony-journey/edit/master/knpu/http-kernel/httpkernel-router-listener.rst" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    
  <div class="section" id="kernel-request-and-the-routerlistener">
<h1>kernel.request and the RouterListener<a class="headerlink" href="httpkernel-router-listener#kernel-request-and-the-routerlistener" title="Permalink to this headline">¶</a></h1>
<p>So let&#8217;s start working through this. The first thing we have is this
<tt class="docutils literal"><span class="pre">$this-&gt;requestStack-&gt;push()</span></tt>:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// vendor/symfony/symfony/src/Symfony/Component/HttpKernel/HttpKernel.php</span>
<span class="c1">// ...</span>

<span class="k">private</span> <span class="k">function</span> <span class="nf">handleRaw</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$type</span> <span class="o">=</span> <span class="nx">self</span><span class="o">::</span><span class="na">MASTER_REQUEST</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">requestStack</span><span class="o">-&gt;</span><span class="na">push</span><span class="p">(</span><span class="nv">$request</span><span class="p">);</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This is going to make more sense a few lessons from now. But as we saw before,
Symfony has the ability to process many requests at a time via something
called <a class="reference internal" href="sub-requests"><em>What about Sub Requests?</em></a>. The <tt class="docutils literal"><span class="pre">$requestStack</span></tt> is just an object that
keeps track of which request is being worked on right now. We&#8217;ll talk more
about that idea later - for now, just ignore it.</p>
</div>
<div class="section" id="the-kernel-request-event">
<h1>The kernel.request Event<a class="headerlink" href="httpkernel-router-listener#the-kernel-request-event" title="Permalink to this headline">¶</a></h1>
<p>For us, the first interesting thing that happens inside of this function is that
it creates a <tt class="docutils literal"><span class="pre">GetResponseEvent</span></tt> object:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// vendor/symfony/symfony/src/Symfony/Component/HttpKernel/HttpKernel.php</span>
<span class="c1">// ...</span>

<span class="k">private</span> <span class="k">function</span> <span class="nf">handleRaw</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$type</span> <span class="o">=</span> <span class="nx">self</span><span class="o">::</span><span class="na">MASTER_REQUEST</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="c1">// request</span>
    <span class="nv">$event</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">GetResponseEvent</span><span class="p">(</span><span class="nv">$this</span><span class="p">,</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$type</span><span class="p">);</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Despite its name, that doesn&#8217;t do anything, that just creates a new object
with some data in it. Some of you may already be saying: &#8220;Hold on, that class
sounds familiar.&#8221; If we look inside our <tt class="docutils literal"><span class="pre">UserAgentSubscriber</span></tt>, you&#8217;ll remember
that it was passed a <tt class="docutils literal"><span class="pre">GetResponseEvent</span></tt> object:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/EventListener/UserAgentSubscriber.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">onKernelRequest</span><span class="p">(</span><span class="nx">GetResponseEvent</span> <span class="nv">$event</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>And this is where that object was created. It then goes to a dispatcher
and dispatches our first event:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// vendor/symfony/symfony/src/Symfony/Component/HttpKernel/HttpKernel.php</span>
<span class="c1">// ...</span>

<span class="k">private</span> <span class="k">function</span> <span class="nf">handleRaw</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$type</span> <span class="o">=</span> <span class="nx">self</span><span class="o">::</span><span class="na">MASTER_REQUEST</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="c1">// request</span>
    <span class="nv">$event</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">GetResponseEvent</span><span class="p">(</span><span class="nv">$this</span><span class="p">,</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$type</span><span class="p">);</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">dispatcher</span><span class="o">-&gt;</span><span class="na">dispatch</span><span class="p">(</span><span class="nx">KernelEvents</span><span class="o">::</span><span class="na">REQUEST</span><span class="p">,</span> <span class="nv">$event</span><span class="p">);</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>That <tt class="docutils literal"><span class="pre">KernelEvents::REQUEST</span></tt> is just a constant that means <tt class="docutils literal"><span class="pre">kernel.request</span></tt>.
So ultimately, this line causes the dispatcher to loop over and call <em>all</em>
of the functions that are &#8220;listening&#8221; to the <tt class="docutils literal"><span class="pre">kernel.request</span></tt> event.</p>
<p>And because of this nice constant, we can actually use it inside our subscriber.
So I&#8217;ll change this to <tt class="docutils literal"><span class="pre">KernelEvents::REQUEST</span></tt> and add a comment so I don&#8217;t
forget what this really means:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/EventListener/UserAgentSubscriber.php</span>
<span class="c1">// ...</span>

<span class="k">use</span> <span class="nx">Symfony\Component\HttpKernel\KernelEvents</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">UserAgentSubscriber</span> <span class="k">implements</span> <span class="nx">EventSubscriberInterface</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">getSubscribedEvents</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="k">array</span><span class="p">(</span>
            <span class="c1">// constant that means kernel.request</span>
            <span class="nx">KernelEvents</span><span class="o">::</span><span class="na">REQUEST</span> <span class="o">=&gt;</span> <span class="s1">&#39;onKernelRequest&#39;</span>
        <span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>So when every listener like to this is called, it&#8217;s passed that <tt class="docutils literal"><span class="pre">GetResponseEvent</span></tt>
that&#8217;s created in <tt class="docutils literal"><span class="pre">HttpKernel</span></tt>.</p>
</div>
<div class="section" id="king-of-routing-routerlistener">
<h1>King of Routing: RouterListener<a class="headerlink" href="httpkernel-router-listener#king-of-routing-routerlistener" title="Permalink to this headline">¶</a></h1>
<p>There are a lot of listener to <tt class="docutils literal"><span class="pre">kernel.request</span></tt>, but there&#8217;s only one
that&#8217;s mission critical to how the Symfony Framework works. Let&#8217;s go back
to the browser, refresh the page, and click into the profiler. Back on the
events tab, we can see all of the functions that are called when this event
is dispatched. The one that&#8217;s important to understand how the framework works
is that <tt class="docutils literal"><span class="pre">RouterListener</span></tt> one that we can see in the middle. So let&#8217;s go
back and open up <tt class="docutils literal"><span class="pre">RouterListener</span></tt> in PhpStorm. If you ever see a class
in the <tt class="docutils literal"><span class="pre">app/cache</span></tt> directory like this, ignore that, you want the one
that&#8217;s really inside of the <tt class="docutils literal"><span class="pre">vendor/</span></tt> directory.</p>
<p>If you look at the bottom, this is an event subscriber, just like our event
subscriber:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/RouterListener.php</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">RouterListener</span> <span class="k">implements</span> <span class="nx">EventSubscriberInterface</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">getSubscribedEvents</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="k">array</span><span class="p">(</span>
            <span class="nx">KernelEvents</span><span class="o">::</span><span class="na">REQUEST</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;onKernelRequest&#39;</span><span class="p">,</span> <span class="mi">32</span><span class="p">)),</span>
            <span class="nx">KernelEvents</span><span class="o">::</span><span class="na">FINISH_REQUEST</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;onKernelFinishRequest&#39;</span><span class="p">,</span> <span class="mi">0</span><span class="p">)),</span>
        <span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>And you can see it listens on <tt class="docutils literal"><span class="pre">kernel.request</span></tt> and its <tt class="docutils literal"><span class="pre">onKernelRequest</span></tt>
method is called. As the name of this class sounds, this is the class that&#8217;s
responsible for actually executing your routing. And remember, we can write
routing in a lot of different ways: in YAML files, in annotations like in
our app or other formats. But ultimately, if you run <tt class="docutils literal"><span class="pre">router:debug</span></tt>, you&#8217;ll
get a list of all of the routes:</p>
<div class="highlight-bash"><div class="highlight"><pre>php app/console router:debug
</pre></div>
</div>
<p>Most of these are internal debugging routes, but our 2 are at the bottom:</p>
<div class="highlight-text"><div class="highlight"><pre>Name                      Path
_wdt                      /_wdt/{token}
...

dinosaur_list             /
dinosaur_show             /dinosaurs/{id}
</pre></div>
</div>
<div class="section" id="what-does-routing-do">
<h2>What does Routing Do?<a class="headerlink" href="httpkernel-router-listener#what-does-routing-do" title="Permalink to this headline">¶</a></h2>
<p>My question is, what&#8217;s the end result of router? For example, if we&#8217;re on
the homepage, does it return the string <tt class="docutils literal"><span class="pre">dinosaur_list</span></tt>? Something else?
If we trace down in the function, between lines 124 and 128, that&#8217;s where
the router is actually being run:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/RouterListener.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">onKernelRequest</span><span class="p">(</span><span class="nx">GetResponseEvent</span> <span class="nv">$event</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">matcher</span> <span class="nx">instanceof</span> <span class="nx">RequestMatcherInterface</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$parameters</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">matcher</span><span class="o">-&gt;</span><span class="na">matchRequest</span><span class="p">(</span><span class="nv">$request</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nv">$parameters</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">matcher</span><span class="o">-&gt;</span><span class="na">match</span><span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">getPathInfo</span><span class="p">());</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>You can see there&#8217;s an if statement, but that&#8217;s not important - both sides
do the same thing: they figure out which route matched.</p>
</div>
<div class="section" id="routing-parameters">
<h2>Routing Parameters<a class="headerlink" href="httpkernel-router-listener#routing-parameters" title="Permalink to this headline">¶</a></h2>
<p>And you can see that it returns some <tt class="docutils literal"><span class="pre">$parameters</span></tt> variable. What&#8217;s in
that? Is that the name of the route or something else? Let&#8217;s use the <tt class="docutils literal"><span class="pre">dump()</span></tt>
function to find out:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">matcher</span> <span class="nx">instanceof</span> <span class="nx">RequestMatcherInterface</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$parameters</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">matcher</span><span class="o">-&gt;</span><span class="na">matchRequest</span><span class="p">(</span><span class="nv">$request</span><span class="p">);</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="nv">$parameters</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">matcher</span><span class="o">-&gt;</span><span class="na">match</span><span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">getPathInfo</span><span class="p">());</span>
<span class="p">}</span>

<span class="nx">dump</span><span class="p">(</span><span class="nv">$parameters</span><span class="p">);</span><span class="k">die</span><span class="p">;</span>
</pre></div>
</div>
<p>This runs on every request, so let&#8217;s go back, refresh, and there it is. When
the router matches a route, what it returns is an array of information about
that route:</p>
<div class="highlight-text"><div class="highlight"><pre>array(
    &#39;_controller&#39; =&gt; &#39;AppBundle\Controller\DinosaurController::indexAction&#39;,
    &#39;_route&#39; =&gt; &#39;dinosaur_list&#39;,
)
</pre></div>
</div>
<p>And the most important piece of information is what controller to execute,
which it puts on an <tt class="docutils literal"><span class="pre">_controller</span></tt> key. Because remember, our flow is always
request, routing, routing points to a controller, and the controller is where
we return the <tt class="docutils literal"><span class="pre">Response</span></tt>.</p>
<p>The format of the controller is the class name, <tt class="docutils literal"><span class="pre">::</span></tt> then the method name.
If you open up the <tt class="docutils literal"><span class="pre">DinosaurController</span></tt>, this all comes from here:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Controller/DinosaurController.php</span>
<span class="c1">// ...</span>

<span class="sd">/**</span>
<span class="sd"> * @Route(&quot;/&quot;, name=&quot;dinosaur_list&quot;)</span>
<span class="sd"> */</span>
<span class="k">public</span> <span class="k">function</span> <span class="nf">indexAction</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>When you use annotation routing, it&#8217;s smart enough to create a route where
the <tt class="docutils literal"><span class="pre">_controller</span></tt> is set to whatever method is below it.</p>
</div>
<div class="section" id="the-controller-key-and-yaml-routes">
<h2>The _controller key and Yaml Routes<a class="headerlink" href="httpkernel-router-listener#the-controller-key-and-yaml-routes" title="Permalink to this headline">¶</a></h2>
<p>If you&#8217;ve used YAML routes before, it&#8217;s even more interesting. I&#8217;ll open
up my <tt class="docutils literal"><span class="pre">app/config/routing.yml</span></tt> file. At the bottom in comments, I prepared
a route that&#8217;s identical to the one we&#8217;re building in annotations:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># app/config/routing.yml</span>
<span class="c1"># ...</span>

<span class="c1">#dinosaur_list:</span>
<span class="c1">#    path: /</span>
<span class="c1">#    defaults:</span>
<span class="c1">#        _controller: AppBundle:Dinosaur:index</span>
</pre></div>
</div>
<p>When you use YAML routing, to point to the controller you have a <tt class="docutils literal"><span class="pre">defaults</span></tt>
key, and below that you have an <tt class="docutils literal"><span class="pre">_controller</span></tt> that uses a three-part syntax
to point to the <tt class="docutils literal"><span class="pre">DinosaurController</span></tt> and <tt class="docutils literal"><span class="pre">indexAction</span></tt>.</p>
<p>So just to prove this is the same. I&#8217;m going to load <em>only</em> that route:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># app/config/routing.yml</span>
<span class="c1"># delete the top annotations import temporarily</span>

<span class="l-Scalar-Plain">dinosaur_list</span><span class="p-Indicator">:</span>
    <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/</span>
    <span class="l-Scalar-Plain">defaults</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">_controller</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">AppBundle:Dinosaur:index</span>
</pre></div>
</div>
<p>And when we refresh, the routing parameters are exactly the same. Let&#8217;s comment
that back out:</p>
<div class="highlight-yaml"><div class="highlight"><pre># app/config/routing.yml
_app_bundle_annotations:
    resource: @AppBundle/Controller
    type:     annotation

#dinosaur_list:
#    path: /
#    defaults:
#        _controller: AppBundle:Dinosaur:index
</pre></div>
</div>
</div>
<div class="section" id="routing-wildcards-are-parameters-too">
<h2>Routing Wildcards are Parameters Too!<a class="headerlink" href="httpkernel-router-listener#routing-wildcards-are-parameters-too" title="Permalink to this headline">¶</a></h2>
<p>Now let&#8217;s go to a different page - <tt class="docutils literal"><span class="pre">/dinosaurs/22</span></tt>. And what we see <em>now</em>
is that in addition to <tt class="docutils literal"><span class="pre">_controller</span></tt> and <tt class="docutils literal"><span class="pre">_route</span></tt>, now we have the <tt class="docutils literal"><span class="pre">id</span></tt>
value from the route:</p>
<div class="highlight-text"><div class="highlight"><pre>array(
    &#39;_controller&#39; =&gt; &#39;AppBundle\Controller\DinosaurController::showAction&#39;,
    &#39;id&#39; =&gt; &#39;22&#39;,
    &#39;_route&#39; =&gt; &#39;dinosaur_show&#39;,
)
</pre></div>
</div>
<p>This shows that the end result of the routing layer is an array that has
the <tt class="docutils literal"><span class="pre">_controller</span></tt> key plus any wildcards that are in your URL. It also
gives you the <tt class="docutils literal"><span class="pre">_route</span></tt> in case you need it, but that&#8217;s not important.</p>
</div>
</div>
<div class="section" id="the-dumped-router-it-s-cool">
<h1>The Dumped Router (it&#8217;s cool!)<a class="headerlink" href="httpkernel-router-listener#the-dumped-router-it-s-cool" title="Permalink to this headline">¶</a></h1>
<p>One more cool thing. If you look in the cache directory, you&#8217;ll see a file
called <tt class="docutils literal"><span class="pre">appDevUrlMatcher.php</span></tt>:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// app/cache/dev/appDevUrlMatcher.php</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">appDevUrlMatcher</span> <span class="k">extends</span> <span class="nx">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">match</span><span class="p">(</span><span class="nv">$pathinfo</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// ...</span>

        <span class="c1">// dinosaur_list</span>
        <span class="k">if</span> <span class="p">(</span><span class="nb">rtrim</span><span class="p">(</span><span class="nv">$pathinfo</span><span class="p">,</span> <span class="s1">&#39;/&#39;</span><span class="p">)</span> <span class="o">===</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">substr</span><span class="p">(</span><span class="nv">$pathinfo</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">!==</span> <span class="s1">&#39;/&#39;</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$pathinfo</span><span class="o">.</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="s1">&#39;dinosaur_list&#39;</span><span class="p">);</span>
            <span class="p">}</span>

            <span class="k">return</span> <span class="k">array</span> <span class="p">(</span>  <span class="s1">&#39;_controller&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;AppBundle\\Controller\\DinosaurController::indexAction&#39;</span><span class="p">,</span>  <span class="s1">&#39;_route&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;dinosaur_list&#39;</span><span class="p">,);</span>
        <span class="p">}</span>

        <span class="c1">// dinosaur_show</span>
        <span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">===</span> <span class="nb">strpos</span><span class="p">(</span><span class="nv">$pathinfo</span><span class="p">,</span> <span class="s1">&#39;/dinosaurs&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nb">preg_match</span><span class="p">(</span><span class="s1">&#39;#^/dinosaurs/(?P&lt;id&gt;[^/]++)$#s&#39;</span><span class="p">,</span> <span class="nv">$pathinfo</span><span class="p">,</span> <span class="nv">$matches</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mergeDefaults</span><span class="p">(</span><span class="nb">array_replace</span><span class="p">(</span><span class="nv">$matches</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;_route&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;dinosaur_show&#39;</span><span class="p">)),</span> <span class="k">array</span> <span class="p">(</span>  <span class="s1">&#39;_controller&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;AppBundle\\Controller\\DinosaurController::showAction&#39;</span><span class="p">,));</span>
        <span class="p">}</span>

        <span class="k">throw</span> <span class="mi">0</span> <span class="o">&lt;</span> <span class="nb">count</span><span class="p">(</span><span class="nv">$allow</span><span class="p">)</span> <span class="o">?</span> <span class="k">new</span> <span class="nx">MethodNotAllowedException</span><span class="p">(</span><span class="nb">array_unique</span><span class="p">(</span><span class="nv">$allow</span><span class="p">))</span> <span class="o">:</span> <span class="k">new</span> <span class="nx">ResourceNotFoundException</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This is the end result of parsing through all of your routes, whether they&#8217;re
written in annotations, YAML or some other format. So when we see <tt class="docutils literal"><span class="pre">$this-&gt;matcher-&gt;match()</span></tt>
in <tt class="docutils literal"><span class="pre">RouterListener</span></tt>, that&#8217;s actually calling the <tt class="docutils literal"><span class="pre">match()</span></tt> function you
see inside of that cached class. Symfony is smart enough to parse all of
our routes, then generate this big crazy, regex, if-statement matching algorithm.
If we scroll to the bottom, you&#8217;ll see our dinosaur pages. Ok, this isn&#8217;t
important to understand, I just think it&#8217;s cool.</p>
</div>
<div class="section" id="introducing-the-request-attributes">
<h1>Introducing: The Request attributes<a class="headerlink" href="httpkernel-router-listener#introducing-the-request-attributes" title="Permalink to this headline">¶</a></h1>
<p>So let&#8217;s get rid of the <tt class="docutils literal"><span class="pre">dump()</span></tt> in <tt class="docutils literal"><span class="pre">RouterListener</span></tt> and trace through
what happens next. If you look below, you&#8217;ll see that it takes that <tt class="docutils literal"><span class="pre">$parameters</span></tt>
array, which has <tt class="docutils literal"><span class="pre">_controller</span></tt> and <tt class="docutils literal"><span class="pre">id</span></tt>, and it puts onto a <tt class="docutils literal"><span class="pre">$request-&gt;attributes</span></tt>
property:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// vendor/symfony/symfony/src/Symfony/Component/HttpKernel/EventListener/RouterListener.php</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">onKernelRequest</span><span class="p">(</span><span class="nx">GetResponseEvent</span> <span class="nv">$event</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">matcher</span> <span class="nx">instanceof</span> <span class="nx">RequestMatcherInterface</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$parameters</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">matcher</span><span class="o">-&gt;</span><span class="na">matchRequest</span><span class="p">(</span><span class="nv">$request</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nv">$parameters</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">matcher</span><span class="o">-&gt;</span><span class="na">match</span><span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">getPathInfo</span><span class="p">());</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>

    <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">attributes</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span><span class="nv">$parameters</span><span class="p">);</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Symfony&#8217;s request object has a bunch of these public properties. I&#8217;ll open
up the Components documentation for the <a class="reference external" href="http://symfony.com/doc/current/components/http_foundation/introduction.html">HttpFoundation component</a>, because
it talks about this.</p>
<p>Every public property except for one, has a real-world equivalent. For example,
if you want to get the query parameters, you say <tt class="docutils literal"><span class="pre">$request-&gt;query-&gt;get()</span></tt>.
If you want to get the cookies, it&#8217;s <tt class="docutils literal"><span class="pre">$request-&gt;cookies-&gt;get()</span></tt>. For the
headers, it&#8217;s <tt class="docutils literal"><span class="pre">$request-&gt;headers-&gt;get</span></tt>. All of these are ways to get information
that comes from the original HTTP request message.</p>
<p>The one weird guy is <tt class="docutils literal"><span class="pre">$request-attributes</span></tt>. It has no real-world equivalent.
It&#8217;s just a place for you to store application-specific information about
the request. And route info is exactly that.</p>
<p>Putting information onto the <tt class="docutils literal"><span class="pre">$request-&gt;attributes</span></tt> property doesn&#8217;t actually
do anything. It&#8217;s just a place to store data - it&#8217;s not triggering any other
systems. We&#8217;re just modifying the request object, and that&#8217;s it for the
<tt class="docutils literal"><span class="pre">RouterListener</span></tt>.</p>
<p>Let&#8217;s close this up and go back to <tt class="docutils literal"><span class="pre">HttpKernel</span></tt>. At this point, the <em>only</em>
thing we&#8217;ve done is dispatch the <tt class="docutils literal"><span class="pre">kernel.request</span></tt> event and the only listener
that&#8217;s really important is the <tt class="docutils literal"><span class="pre">RouterListener</span></tt>. And all it did was modify
the <tt class="docutils literal"><span class="pre">$request-&gt;attributes</span></tt>:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// vendor/symfony/symfony/src/Symfony/Component/HttpKernel/HttpKernel.php</span>
<span class="c1">// ...</span>

<span class="k">private</span> <span class="k">function</span> <span class="nf">handleRaw</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$type</span> <span class="o">=</span> <span class="nx">self</span><span class="o">::</span><span class="na">MASTER_REQUEST</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="c1">// request</span>
    <span class="nv">$event</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">GetResponseEvent</span><span class="p">(</span><span class="nv">$this</span><span class="p">,</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$type</span><span class="p">);</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">dispatcher</span><span class="o">-&gt;</span><span class="na">dispatch</span><span class="p">(</span><span class="nx">KernelEvents</span><span class="o">::</span><span class="na">REQUEST</span><span class="p">,</span> <span class="nv">$event</span><span class="p">);</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>So not a lot has happened yet.</p>
</div>
<div class="section" id="creating-the-response-immediately-in-a-listener">
<h1>Creating the Response Immediately in a Listener<a class="headerlink" href="httpkernel-router-listener#creating-the-response-immediately-in-a-listener" title="Permalink to this headline">¶</a></h1>
<p>If we follow this down, there&#8217;s a really interesting <tt class="docutils literal"><span class="pre">if</span></tt> statement:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// vendor/symfony/symfony/src/Symfony/Component/HttpKernel/HttpKernel.php</span>
<span class="c1">// ...</span>

<span class="k">private</span> <span class="k">function</span> <span class="nf">handleRaw</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$type</span> <span class="o">=</span> <span class="nx">self</span><span class="o">::</span><span class="na">MASTER_REQUEST</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">dispatcher</span><span class="o">-&gt;</span><span class="na">dispatch</span><span class="p">(</span><span class="nx">KernelEvents</span><span class="o">::</span><span class="na">REQUEST</span><span class="p">,</span> <span class="nv">$event</span><span class="p">);</span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$event</span><span class="o">-&gt;</span><span class="na">hasResponse</span><span class="p">())</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">filterResponse</span><span class="p">(</span><span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getResponse</span><span class="p">(),</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$type</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>If the event has a response - and I&#8217;ll show you what that means - it exits
immediately before calling the controller or doing anything else. We&#8217;ll
look at that <tt class="docutils literal"><span class="pre">filterResponse</span></tt> method later, but it doesn&#8217;t do anything
mission critical.</p>
<p>This means that any listener to <tt class="docutils literal"><span class="pre">kernel.request</span></tt> can just create a <tt class="docutils literal"><span class="pre">Response</span></tt>
object and say &#8220;I&#8217;m done&#8221;. For example, if you had a maintenance mode, you
could create a listener, check some flag to see if you&#8217;re in maintenance
mode, and return a response immediately that says: &#8220;We&#8217;re fixing some things.&#8221;</p>
<p>Let&#8217;s try this. In <tt class="docutils literal"><span class="pre">UserAgentSubscriber</span></tt>, I&#8217;ll create a new <tt class="docutils literal"><span class="pre">Response</span></tt>
object. Make sure you use the one from the <tt class="docutils literal"><span class="pre">HttpFoundation</span></tt> component.
PHPStorm did just add a <tt class="docutils literal"><span class="pre">use</span></tt> statement for me up on line 7. And we&#8217;ll
say &#8220;Come back later&#8221;:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/EventListener/UserAgentSubscriber.php</span>
<span class="c1">// ...</span>

<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Response</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">onKernelRequest</span><span class="p">(</span><span class="nx">GetResponseEvent</span> <span class="nv">$event</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="nv">$response</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Response</span><span class="p">(</span><span class="s1">&#39;Come back later&#39;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>And the <tt class="docutils literal"><span class="pre">GetResponseEvent</span></tt> object we&#8217;re passed has an <tt class="docutils literal"><span class="pre">$event-&gt;setResponse()</span></tt>
method on it. Remember, every event passes a different object, and this one
happens to have this <tt class="docutils literal"><span class="pre">setResponse</span></tt> method on it. We&#8217;ll make things more
interesting and put this in a block so it only randomly sets the response:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/EventListener/UserAgentSubscriber.php</span>
<span class="c1">// ...</span>

<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Response</span><span class="p">;</span>
<span class="c1">// ...</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">onKernelRequest</span><span class="p">(</span><span class="nx">GetResponseEvent</span> <span class="nv">$event</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">rand</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">50</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$response</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Response</span><span class="p">(</span><span class="s1">&#39;Come back later&#39;</span><span class="p">);</span>
        <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">setResponse</span><span class="p">(</span><span class="nv">$response</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>If we go and refresh now, the page works fine, refresh again... mine is
being stubborn. There we go. You can see that as soon the response is set,
it just stops entirely.</p>
<p>I&#8217;ll leave this code in there, but let&#8217;s comment it out so it doesn&#8217;t ruin
our project:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="k">if</span> <span class="p">(</span><span class="nx">rand</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">50</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Response</span><span class="p">(</span><span class="s1">&#39;Come back later&#39;</span><span class="p">);</span>
    <span class="c1">// $event-&gt;setResponse($response);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Perfect!</p>
<p>In reality, there&#8217;s no listener that&#8217;s setting the response for us. So our
next job will be to figure out which controller function to call to create
the Response.</p>
</div>


    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2607389833" id="dsq-comment-2607389833">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2607389833">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-04-05</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2607389833" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2607389833" class="dsq-comment-text">
	                                <p>Hi Andrew!</p><p>Ah yea, it *is* a bug with the script - you're absolutely right :). I've just fixed it - <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fknpuniversity%2Fsymfony-journey%2Fcommit%2Fc9b394ba8bf585bddd6bd536a78f7de84b4bfc15%3AUodmbdlKaqkI1Y8rzfMKHdHZvGU&amp;cuid=1175718" rel="nofollow noopener">https://github.com/knpuniversi...</a> - thanks for letting me know!</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2606708932" id="dsq-comment-2606708932">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/andrewgrudin/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2606708932">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-04-05</span>
	                            <span class="dsq-commenter-name">Andrew Grudin</span>
	                        </div>

	                        <div id="dsq-comment-message-2606708932" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2606708932" class="dsq-comment-text">
	                                <p>When you go to:</p><p> /dinosaurs/22</p><p>then, according to your annotation code logic ( @Rote("/dinosaurs/{id}", name = "dinosaur_show" ),<br>you must get:</p><p>array(<br>'_controller' =&gt; 'AppBundle\Controller\DinosaurController::showAction',<br>'id' =&gt; '22',<br>'_route' =&gt; 'dinosaur_show',<br>)</p><p>Is it just slip of the pen?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_httpkernel-router-listener';var disqus_url = 'https://knpuniversity.com/screencast/symfony-journey/httpkernel-router-listener';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="determine-the-controller#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/symfony-journey/httpkernel-router-listener" addthis:title="Journey to the Center of Symfony: HttpKernel Request-Response">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"symfony-journey","courseIsOwned":false,"chapter":"kernel.request and the RouterListener","chapterNumber":3,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Journey to the Center of Symfony: HttpKernel Request-Response';
        Core.courseId = 53
        Core.courseIsOwned = false;
        Core.courseSlug = 'symfony-journey';
                    Core.chapterTitle = 'kernel.request and the RouterListener';
            Core.chapterNumber = 3;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'httpkernel-router-listener';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":396,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
