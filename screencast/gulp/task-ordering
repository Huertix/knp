<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Task Order > Gulp! Refreshment for Your Frontend Assets | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 33712
        };

            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="
We all need to minify and combine our CSS and JS files. And with Gulp,
this is not only easy, but it&#039;s actually *fun to do*!

In this tutorial, I&#039;ll show you how to setup Gulp in your PHP or Symfony
project to do a bunch of things:
    
* Minify CSS and JS files
* Watch files for changes
* Combine files
* Use sourcemaps
* Publish Font files
* Have page-specific CSS/JS files
* Cache-bust with versioning

We&#039;ll actually use Laravel&#039;s Elixir as a guide, but make things work
for any PHP project and learn how we can make Gulp do whatever we need.

Yay!
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Task Order">
<meta property="og:description" content="
We all need to minify and combine our CSS and JS files. And with Gulp,
this is not only easy, but it&amp;#039;s actually *fun to do*!

In this tutorial, I&amp;#039;ll show you how to setup Gulp in your PHP or Symfony
project to do a bunch of things:
    
* Minify CSS and JS files
* Watch files for changes
* Combine files
* Use sourcemaps
* Publish Font files
* Have page-specific CSS/JS files
* Cache-bust with versioning

We&amp;#039;ll actually use Laravel&amp;#039;s Elixir as a guide, but make things work
for any PHP project and learn how we can make Gulp do whatever we need">
<meta property="og:url" content="http://knpuniversity.com/screencast/gulp/task-ordering">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/gulp:d3894eab428324765b9c23048b5e27fdf19745da/gulp.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="task-ordering#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        18.
                            Task Order
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="../gulp.1">Gulp! Refreshment for Your Frontend Assets</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="first-gulp" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Your First Gulp
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:31</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="sass" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        Sass to CSS
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:46</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="sourcemaps" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        Sourcemaps
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:46</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="watch" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Watch for Changes
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:57</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="concat" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Combining (concat) Files
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:57</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="minify" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        Minify
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:29</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="minify-only-production" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Minify only in Production
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:04</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="sourcemaps-only-dev" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Sourcemaps only in Development
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:04</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="load-plugins" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        gulp-load-plugins
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:11</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="errors-call-the-plumber" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        Errors: Call the Plumber
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="page-specific-css" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Page Specific CSS
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:27</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="bower-into-vendor" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                12.
                        Bower Components out of web
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="javascript" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                13.
                        Minify and Combine JavaScript
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:17</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="publishing-fonts" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                14.
                        Publish Fonts to web
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:10</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="version-cache-busting" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                15.
                        Versioning to Bust Cache
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 9:10</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="javascript-versioning-and-cleanup" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                16.
                        JavaScript Versioning and Cleanup
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:15</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="on-end-async-and-listeners" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                17.
                        on(&#039;end&#039;): Async and Listeners
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:05</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="task-ordering" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                18.
                        Task Order
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:45</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/gulp" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Task Order</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="../gulp.1"><em>Gulp! Refreshment for Your Frontend Assets Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $6.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="../gulp.1">
            Finish Course <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="task-ordering#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="task-ordering#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script markdown-content">
                                                                                        <a href="https://github.com/knpuniversity/gulp/edit/master/knpu/task-ordering.md" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    <p>Look at the <code>default</code> task. The array defines task dependencies: Gulp runs
each of these first, waits for them to finish, and <em>then</em> executes the callback
for the task, if there is one. And based on the output, it looks like it
runs them in order: <code>clean</code>, then <code>styles</code>, then <code>scripts</code>.</p>
<p>Is that true?</p>
<h2 id="there-is-no-order-to-dependent-tasks">There is no Order to Dependent Tasks <a class="headerlink" href="task-ordering#there-is-no-order-to-dependent-tasks" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Log a message once <code>fonts</code> is done:</p>
<p><div class="code-block-wrapper" data-code-block-guid="cf5beff7d3">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-134" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            134 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-112" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 112
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="113"></td>
            <td class="blob-code">gulp.task(<span class="hljs-string">'fonts'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="114"></td>
            <td class="blob-code">    app.copy(</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="115"></td>
            <td class="blob-code">        config.bowerDir+<span class="hljs-string">'/font-awesome/fonts/*'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="116"></td>
            <td class="blob-code">        <span class="hljs-string">'web/fonts'</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="117"></td>
            <td class="blob-code">    ).on(<span class="hljs-string">'end'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{<span class="hljs-built_in">console</span>.log(<span class="hljs-string">'finished fonts!'</span>)});</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="118"></td>
            <td class="blob-code">});</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="119-134" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 119 - 134
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>And also add a message right when the <code>watch</code> task starts:</p>
<p><div class="code-block-wrapper" data-code-block-guid="c2c4b25ffe">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-134" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            134 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-126" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 126
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="127"></td>
            <td class="blob-code">gulp.task(<span class="hljs-string">'watch'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="128"></td>
            <td class="blob-code">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'starting watch!'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="129"></td>
            <td class="blob-code">    gulp.watch(config.assetsDir+<span class="hljs-string">'/'</span>+config.sassPattern, [<span class="hljs-string">'styles'</span>]);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="130"></td>
            <td class="blob-code">    gulp.watch(config.assetsDir+<span class="hljs-string">'/js/**/*.js'</span>, [<span class="hljs-string">'scripts'</span>]);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="131"></td>
            <td class="blob-code">});</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="132-134" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 132 - 134
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>The default task defines <code>fonts</code> <em>then</em> <code>watch</code>, and I want to see if that
order matters.</p>
<p>Ok, try it!</p>
<pre><code class="language-bash"><div class="line">gulp</div></code></pre>
<p>It exploded! It say we're calling <code>on</code> on something undefined. This happens
with our code because up in <code>app.copy</code>, we're not returning the stream. So
yea, that would be undefined:</p>
<p><div class="code-block-wrapper" data-code-block-guid="849da86032">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-134" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            134 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-48" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 48
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="49"></td>
            <td class="blob-code">app.copy = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">srcFiles, outputDir</span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="50"></td>
            <td class="blob-code">    <span class="hljs-keyword">return</span> gulp.src(srcFiles)</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="51"></td>
            <td class="blob-code">        .pipe(gulp.dest(outputDir));</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="52"></td>
            <td class="blob-code">};</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="53-134" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 53 - 134
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Ok, now try it. It's all out of order! Even though <code>fonts</code> is listed
before <code>watch</code> in the dependency list, <code>watch</code> starts <em>way</em> before <code>fonts</code>
finishes. In reality, Gulp reads the dependent tasks for <code>default</code>, then
starts them all at once. Once they <em>all</em> finish, <code>default</code> runs.</p>
<p>But what if we <em>needed</em> <code>fonts</code> to finish before <code>watch</code> started? Well, it's
the same trick: add <code>fonts</code> as a dependency to <code>watch</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="10f8938488">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-134" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            134 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-126" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 126
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="127"></td>
            <td class="blob-code">gulp.task(<span class="hljs-string">'watch'</span>, [<span class="hljs-string">'fonts'</span>], <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="128-130" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 128 - 130
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="131"></td>
            <td class="blob-code">});</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="132-134" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 132 - 134
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Try it out:</p>
<pre><code class="language-bash"><div class="line">gulp</div></code></pre>
<p>But surprise! It's still running out of order. Here's the reason: if you're
dependent on a task like <code>fonts</code>, that task <em>must</em> return a Promise or a
Gulp stream. If it doesn't, Gulp actually has no idea when <code>fonts</code> finishes</p>
<ul>
<li>so it just runs <code>watch</code> right away. So, <code>return app.copy</code> from the <code>fonts</code>
task, since <code>app.copy</code> returns a Gulp stream.</li>
</ul>
<p><div class="code-block-wrapper" data-code-block-guid="80077b8356">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-134" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            134 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-112" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 112
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="113"></td>
            <td class="blob-code">gulp.task(<span class="hljs-string">'fonts'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="114"></td>
            <td class="blob-code">    <span class="hljs-keyword">return</span> app.copy(</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="115-116" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 115 - 116
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="117"></td>
            <td class="blob-code">    ).on(<span class="hljs-string">'end'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{<span class="hljs-built_in">console</span>.log(<span class="hljs-string">'finished fonts!'</span>)});</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="118"></td>
            <td class="blob-code">});</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="119-134" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 119 - 134
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Now, Gulp can know when <code>fonts</code> <em>truly</em> finishes its work.</p>
<p>Ok, try it once more:</p>
<pre><code class="language-bash"><div class="line">gulp</div></code></pre>
<p>There it is! <code>fonts</code> finishes, and <em>then</em> <code>watch</code> starts. And there's one
more thing: Gulp finally prints "Finished 'fonts'" in the right place, <em>after</em>
<code>fonts</code> does its work.</p>
<p>Why? It's not that Gulp was lying before about when things finished. It's
that Gulp <em>can't</em> report when a task finishes <em>unless</em> that task returns
a Promise or a Gulp stream. This means we should return one of these from
<em>every</em> task.</p>
<p>We don't need the <code>fonts</code> dependency, so take it off. And remove the logging:</p>
<p><div class="code-block-wrapper" data-code-block-guid="fd532971d2">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-133" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            133 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-112" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 112
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="113"></td>
            <td class="blob-code">gulp.task(<span class="hljs-string">'fonts'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="114"></td>
            <td class="blob-code">    <span class="hljs-keyword">return</span> app.copy(</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="115"></td>
            <td class="blob-code">        config.bowerDir+<span class="hljs-string">'/font-awesome/fonts/*'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="116"></td>
            <td class="blob-code">        <span class="hljs-string">'web/fonts'</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="117"></td>
            <td class="blob-code">    );</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="118"></td>
            <td class="blob-code">});</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="119-126" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 119 - 126
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="127"></td>
            <td class="blob-code">gulp.task(<span class="hljs-string">'watch'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="128-129" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 128 - 129
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="130"></td>
            <td class="blob-code">});</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="131-133" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 131 - 133
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>So if we should always return a stream or promise, how can we do that for
<code>styles</code>? It doesn't have a single stream - it has two that are combined
into the pipeline. We need to wait until <em>both</em> of them are finished.</p>
<p>Oh, the answer is so nice: just <code>return pipeline.run()</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="78afacb351">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-133" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            133 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-84" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 84
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="85"></td>
            <td class="blob-code">gulp.task(<span class="hljs-string">'styles'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="86"></td>
            <td class="blob-code">    <span class="hljs-keyword">var</span> pipeline = <span class="hljs-keyword">new</span> Pipeline();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="87-98" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 87 - 98
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="99"></td>
            <td class="blob-code">    <span class="hljs-keyword">return</span> pipeline.run(app.addStyle);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="100"></td>
            <td class="blob-code">});</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="101"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="102"></td>
            <td class="blob-code">gulp.task(<span class="hljs-string">'scripts'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="103"></td>
            <td class="blob-code">    <span class="hljs-keyword">var</span> pipeline = <span class="hljs-keyword">new</span> Pipeline();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="104-109" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 104 - 109
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="110"></td>
            <td class="blob-code">    <span class="hljs-keyword">return</span> pipeline.run(app.addScript);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="111"></td>
            <td class="blob-code">});</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="112-133" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 112 - 133
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>This isn't magic. I wrote the Pipeline code, and I made <code>run()</code> return a
Promise that resolves once <em>everything</em> is done. And if you know anything
about promises, the guts should make sense to you. But if you have questions,
just ask in the comments.</p>
<p>Make sure we didn't break anything.</p>
<pre><code class="language-bash"><div class="line">gulp</div></code></pre>
<p>Yep, it all still looks great. So if you eventually need to create a task
that's dependent on <code>styles</code> or <code>scripts</code> finishing first, it'll work.</p>

    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2709133698" id="dsq-comment-2709133698">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2709133698">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-02</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2709133698" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2709133698" class="dsq-comment-text">
	                                <p>Hey David!</p><p>I totally agree with the notifications. When I first saw that, I thought it was totally unnecessary. But, when things fail 1 hour into your "watch" task running in the background... it starts to make more sense :D. I would love if you posted your solution here (or on gist) - I might be able to integrate part of it into an eventual update of this tutorial.</p><p>And yea, I think you nailed a big direction for us coming up: "Frontend for backend devs" - because it's not as easy as it once was, and *most* of us still don't have a dedicated frontend team to "dump stuff off to". Wouldn't that be nice :D. No concrete plans for that, but watch for them.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2709096495" id="dsq-comment-2709096495">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/cferthorney/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/16919/9408/avatar92.jpg?1464902059">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2709096495">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-02</span>
	                            <span class="dsq-commenter-name">David Thorne</span>
	                        </div>

	                        <div id="dsq-comment-message-2709096495" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2709096495" class="dsq-comment-text">
	                                <p>Really great Gulp series.  I'll post a new comment (Or edit this if editing works when I get round to it) with my updates.  I like Laravel Elixir's "notify" showing when things worked/failed (Although more for the failure than the success) so I plan to add in that part. If you are like me, you'll notice not necessarily notice anything has failed - even with plumber().  A tidy notification on error is quite useful I find.  Mine is also slightly adjusted for Zurb Foundation 6 (<a href="http://disq.us/url?url=http%3A%2F%2Ffoundation.zurb.com%2F%29%3AYthh6odTV3dG_xm2IvUhRDqE1cM&amp;cuid=1175718" rel="nofollow noopener">http://foundation.zurb.com/)</a> over Twitter Bootstrap/Font-Awesome (work/personal preference)</p><p>Thanks again for these series Ryan.  Any chance of more front-end stuff for us backend developers who are occasionally forced to dabble in the realms of front end?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2708152222" id="dsq-comment-2708152222">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2708152222">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-02</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2708152222" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2708152222" class="dsq-comment-text">
	                                <p>Hi Samuel!</p><p>This approach makes sense, but I haven't seen anything like this in action before (doesn't mean that it doesn't exist, however). One thing to watch out for is that you really don't want 1 single, completely independent CSS file per page. That reason is that a large amount of CSS rules will likely be shared across *every* page, and if you re-package that CSS into a different file for each page, you're actually making your user download those CSS rules repeatedly.</p><p>So, you'd still probably want 1 consistent "site.css" file that is included on every page, and a separate page-specific CSS file for each page that needs it. In theory, you could get some system to automatically set that up (I've just not seen this yet).  In practice, what I often do (or try to do) is create a main CSS file and then include page-specific CSS when I know I have certain CSS files that only apply to certain pages. This helps reduce the file of that "main" CSS file, but adds a little bit of complexity (you need to manually remember to include the page-specific CSS files on pages where you're using CSS selectors form it). I saw a presentation by Jonathan Snook once (<a href="https://disq.us/url?url=https%3A%2F%2Ftwitter.com%2Fsnookca%29%3AMZHDBLbmStFPLhKeyx9-uXZuFsY&amp;cuid=1175718" rel="nofollow noopener">https://twitter.com/snookca)</a> who basically recommended only having 1 CSS file for your entire site. The reason is that they organize their CSS so well (by building re-usable components, instead of one-off CSS styles) that they don't really have enough "extra" stuff to merit needing to add extra optimization.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2707877263" id="dsq-comment-2707877263">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="task-ordering">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2707877263">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-02</span>
	                            <span class="dsq-commenter-name">Samuel Vicent</span>
	                        </div>

	                        <div id="dsq-comment-message-2707877263" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2707877263" class="dsq-comment-text">
	                                <p>Hi,</p><p>I wonder if you know it there is any tool that allows optimizing css first time a page is visited. <br>The idea would be using some plugin like uncss in conjunction with assetic.<br>The thing is that a site can be very big, with several languages, domains, routes... instead of pre-generating the css, the idea is generate one single css per page but optimized without having to set up a configuration with all routes of the system.<br>Thanks in advance!</p><p>  Samuel</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2461845071" id="dsq-comment-2461845071">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2461845071">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-01-16</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2461845071" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2461845071" class="dsq-comment-text">
	                                <p>Wow, this is really great work! Thanks so much for sharing - a working example is worth 1000 (or more) words :). Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2459364490" id="dsq-comment-2459364490">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/eduardpleh/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/19217/9235/avatar92.jpg?1457886440">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2459364490">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-01-15</span>
	                            <span class="dsq-commenter-name">Eduard  Pleh</span>
	                        </div>

	                        <div id="dsq-comment-message-2459364490" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2459364490" class="dsq-comment-text">
	                                <p>Hey Ryan. Very detailed tutorial, thanks. Switched from Assetic to Gulp.</p><p>I have experienced small problem with browserSync and cache busting - browserSync forces full page reload with versioning in dev environment. (Instead of Css injection) So, I have modified config: (All files are commented)<br><a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fnix23%2Fgulp-symfony-config-example%3A5pAIof9ITcD2bwablJkIbHwmEnY&amp;cuid=1175718" rel="nofollow noopener">https://github.com/nix23/gulp-...</a></p><p>Shortly, I have added/modified following:</p><p>1) Added ability to execute console commands in order with Pipeline class; (If some command fails, command execution stops)<br>2) Added browserSync Gulp integration with Css injection support;<br>3) Modified AssetExtension class - now css/js assets are versioned only in prod environment, because dynamic name change will force browserSync to perform full page reload instead of Css injection on sass/css file changes;<br>4) Extended FosJsRoutingBundle to override initialize method in dump command and inject target arg to InputInterface object. (We want apply versioning to 'fos_js_routes.js' file as well on production environment);</p><p>Hope, this helps someone. ;)</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2045721499" id="dsq-comment-2045721499">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/beachtennis/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/2198/5297/avatar92.jpg?1474966191">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2045721499">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-26</span>
	                            <span class="dsq-commenter-name">Nicolas Sauveur</span>
	                        </div>

	                        <div id="dsq-comment-message-2045721499" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2045721499" class="dsq-comment-text">
	                                <p>Thanks Ryan ! I am seeing exactly what you are describing :)<br>On a side note, seems like Gulp 4 will be deprecating sync tasks and adding easier ways to manager sequences, but your solution works great for me !</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2045031729" id="dsq-comment-2045031729">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2045031729">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-25</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2045031729" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2045031729" class="dsq-comment-text">
	                                <p>Hey Nicolas!</p><p>GREAT question - so great that I also forgot why this works! The answer is that I'm using del.sync exclusively inside clean - this is actually a synchronous function - it blocks the "clean" task from finishing *until* all of these lines have run. Because of this, the next task can't start. This was done by design (idea adapted from Laravel's Elixir): it appears that Gulp doesn't exactly "start all the tasks" at the same moment. Instead, I believe it calls all of the tasks one by one, waiting for each callback function to fully execute. Of course, *most* callback functions to asynchronous work, but if it works synchronously, then it in fact blocks the next tasks from having their callback function executed.</p><p>If you're seeing anything different, let me know!</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2044520905" id="dsq-comment-2044520905">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/beachtennis/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/2198/5297/avatar92.jpg?1474966191">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2044520905">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-25</span>
	                            <span class="dsq-commenter-name">Nicolas Sauveur</span>
	                        </div>

	                        <div id="dsq-comment-message-2044520905" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2044520905" class="dsq-comment-text">
	                                <p>Hey Ryan,</p><p>I notice you don't talk about the ordering issue for the 'clean' task. How do you know it will be finished before the other tasks start ? If not, what tells us it is not going to erase newly compiled assets ?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1952143370" id="dsq-comment-1952143370">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/scamo/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/864/1883/avatar92.jpg?1406484380">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1952143370">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-04-08</span>
	                            <span class="dsq-commenter-name">s.molinari</span>
	                        </div>

	                        <div id="dsq-comment-message-1952143370" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1952143370" class="dsq-comment-text">
	                                <p>Yep.:D Exactly what I meant and thought too. But who are we to stand in the way of progress? Thanks!</p><p>Edit - on a completely different subject. I just actually won a version of PHPStorm and was playing with it and noticed it isn't "dumbed down" like how your version is showing it. (You do use PHPStorm in the videos, correct?) Is that "mode" or customization also how you use it to develop? Because, to be honest, for me, getting rid of all the clutter that you aren't currently actually using simply helps with concentration and probably why so many devs just use a plain editor to code with, instead of IDEs. LOL!</p><p>Not sure it would work, but could you share your config for PHPStorm (export settings)? I am currently a Netbeans user (which I have customized considerably, but it is also still cluttered) and was hoping to get PHPStorm down to like how you show it in the videos. However, customizing PHPStorm isn't the easiest of tasks. (and neither is customizing Netbeans either;-)), but why invent the wheel a second time?:-D</p><p>Scott</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1951961971" id="dsq-comment-1951961971">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1951961971">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-04-08</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1951961971" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1951961971" class="dsq-comment-text">
	                                <p>Hey Scott!</p><p>Ah, glad you enjoyed it! You even found you way to the final few chapters that aren't totally finished yet (like this one) ;). We'll have the videos up for those very shortly.</p><p>My overall opinion is that the nodejs tools have matured so far that they *are* the best way to do things now. They're also young, so it means that more stuff is still being "figured out", so certain things end up being difficult or confusing. Still, I think for many people, this stuff is the right choice. Assetic is still good if you're really new to this nodejs stuff still or have a simple setup. If you make the leap, I think you will hit some speed bumps, but I think it'll be worth it. For years, bigger companies I've worked with have tried Assetic, then used something else (e.g. Compass directly) after awhile.</p><p>I hear you on the server-side language thing - the fact that I promote "server side JavaScript" on a PHP tutorial site doesn't escape me ;).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1949345260" id="dsq-comment-1949345260">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/scamo/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/864/1883/avatar92.jpg?1406484380">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1949345260">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-04-06</span>
	                            <span class="dsq-commenter-name">s.molinari</span>
	                        </div>

	                        <div id="dsq-comment-message-1949345260" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1949345260" class="dsq-comment-text">
	                                <p>Hey Ryan,</p><p>Thanks for the run through with Gulp. I enjoyed it.</p><p>I was wondering, would working with Gulp be a better way to work with public asset files with Symfony instead of using Assetic and scssphp? Which would you recommend?</p><p>We are also probably going to be using a javascript framework, which also uses Gulp and Bower (or jspm). So, it almost makes more sense to use Node JS and Gulp for our public assets too. It just seems a bit like a sacrilege to use another server side language and server though. LOL!</p><p>Scott</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_task-ordering';var disqus_url = 'https://knpuniversity.com/screencast/gulp/task-ordering';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="../gulp.1">
            Finish Course <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/gulp/task-ordering" addthis:title="Gulp! Refreshment for Your Frontend Assets">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"gulp","courseIsOwned":false,"chapter":"Task Order","chapterNumber":18,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Gulp! Refreshment for Your Frontend Assets';
        Core.courseId = 57
        Core.courseIsOwned = false;
        Core.courseSlug = 'gulp';
                    Core.chapterTitle = 'Task Order';
            Core.chapterNumber = 18;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'task-ordering';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

</body>
</html>
