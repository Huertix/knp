<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>on(&#039;end&#039;): Async and Listeners > Gulp! Refreshment for Your Frontend Assets | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 33711
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: Task\x20Order <i class="fa fa-play"></i>',
            'url': '/screencast/gulp/task-ordering#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="
We all need to minify and combine our CSS and JS files. And with Gulp,
this is not only easy, but it&#039;s actually *fun to do*!

In this tutorial, I&#039;ll show you how to setup Gulp in your PHP or Symfony
project to do a bunch of things:
    
* Minify CSS and JS files
* Watch files for changes
* Combine files
* Use sourcemaps
* Publish Font files
* Have page-specific CSS/JS files
* Cache-bust with versioning

We&#039;ll actually use Laravel&#039;s Elixir as a guide, but make things work
for any PHP project and learn how we can make Gulp do whatever we need.

Yay!
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="on(&#039;end&#039;): Async and Listeners">
<meta property="og:description" content="
We all need to minify and combine our CSS and JS files. And with Gulp,
this is not only easy, but it&amp;#039;s actually *fun to do*!

In this tutorial, I&amp;#039;ll show you how to setup Gulp in your PHP or Symfony
project to do a bunch of things:
    
* Minify CSS and JS files
* Watch files for changes
* Combine files
* Use sourcemaps
* Publish Font files
* Have page-specific CSS/JS files
* Cache-bust with versioning

We&amp;#039;ll actually use Laravel&amp;#039;s Elixir as a guide, but make things work
for any PHP project and learn how we can make Gulp do whatever we need">
<meta property="og:url" content="http://knpuniversity.com/screencast/gulp/on-end-async-and-listeners">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/gulp:d3894eab428324765b9c23048b5e27fdf19745da/gulp.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="on-end-async-and-listeners#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        17.
                            on(&#039;end&#039;): Async and Listeners
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="../gulp.1">Gulp! Refreshment for Your Frontend Assets</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="first-gulp" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Your First Gulp
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:31</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="sass" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        Sass to CSS
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:46</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="sourcemaps" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        Sourcemaps
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:46</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="watch" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Watch for Changes
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:57</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="concat" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Combining (concat) Files
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:57</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="minify" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        Minify
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:29</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="minify-only-production" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Minify only in Production
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:04</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="sourcemaps-only-dev" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Sourcemaps only in Development
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:04</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="load-plugins" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        gulp-load-plugins
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:11</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="errors-call-the-plumber" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        Errors: Call the Plumber
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="page-specific-css" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Page Specific CSS
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:27</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="bower-into-vendor" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                12.
                        Bower Components out of web
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="javascript" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                13.
                        Minify and Combine JavaScript
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:17</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="publishing-fonts" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                14.
                        Publish Fonts to web
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:10</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="version-cache-busting" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                15.
                        Versioning to Bust Cache
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 9:10</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="javascript-versioning-and-cleanup" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                16.
                        JavaScript Versioning and Cleanup
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:15</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="on-end-async-and-listeners" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                17.
                        on(&#039;end&#039;): Async and Listeners
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:05</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="task-ordering" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                18.
                        Task Order
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:45</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/gulp" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">on(&#039;end&#039;): Async and Listeners</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="../gulp.1"><em>Gulp! Refreshment for Your Frontend Assets Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $6.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="task-ordering#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="on-end-async-and-listeners#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="on-end-async-and-listeners#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script markdown-content">
                                                                                        <a href="https://github.com/knpuniversity/gulp/edit/master/knpu/on-end-async-and-listeners.md" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    <p>Run Gulp! Spoiler alert: Gulp is lying to you. It <em>looks</em> like everything
runs in order: clean starts, clean finishes, <em>then</em> styles starts. But that's
wrong. The truth is that everything is happening all at once, asynchronously.
And to be fair, Gulp isn't really lying - it actually has <em>no</em> idea <em>when</em>
each task actually finishes. Well, at least not yet.</p>
<p>Let's find out what's really going on.</p>
<h2 id="gulp-streams-are-like-a-promise">Gulp Streams are like a Promise <a class="headerlink" href="on-end-async-and-listeners#gulp-streams-are-like-a-promise" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Each line in a Gulp stream is asynchronous - like an AJAX call. This means
that before <code>gulp.src()</code> finishes, the next <code>pipe()</code> is already being called.
In fact, the <em>whole</em> function might finish before <code>gulp.src()</code> is done.</p>
<p>But we really need each line to run in order. So when you call <code>pipe()</code>,
it doesn't run what's inside immediately: it schedules it to be called once
the previous line finishes. The effect is like making an AJAX call, adding
a success listener, then making another AJAX call from inside it.</p>
<p>I wonder then, does the <code>main.css</code> file finish compiling before <code>dinosaur.css</code>
starts? Does the scripts wait for the styles task to finish? Let's find out.</p>
<h2 id="adding-on-end-listeners">Adding on('end') Listeners <a class="headerlink" href="on-end-async-and-listeners#adding-on-end-listeners" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Like with AJAX, each line returns something that acts like a Promise. 
That means, for any line, we can write <code>on</code> to add a listener for when <em>this</em>
specific line <em>actually</em> finishes. When that happens, let's
<code>console.log('start '+filename)</code>.</p>
<p>Copy this and add another listener to the last line. Change the text to "end":</p>
<p><div class="code-block-wrapper" data-code-block-guid="e46d874548">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-93" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            93 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-14" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 14
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="15"></td>
            <td class="blob-code">app.addStyle = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">paths, outputFilename</span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="16"></td>
            <td class="blob-code">    gulp.src(paths).on(<span class="hljs-string">'end'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'start '</span>+outputFilename)})</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="17-28" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 17 - 28
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="29"></td>
            <td class="blob-code">        .pipe(gulp.dest(<span class="hljs-string">'.'</span>)).on(<span class="hljs-string">'end'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'end '</span>+outputFilename)})</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="30"></td>
            <td class="blob-code">};</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="31-93" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 31 - 93
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Ok, run gulp!</p>
<pre><code class="language-bash"><div class="line">gulp</div></code></pre>
<p>Woh! When it said it finished "styles", it really means it was done executing
the <code>styles</code> task. But things really finish way later. In fact, they don't
even <em>start</em> the process until later. And what's <em>really</em> crazy is that <code>dinosaur.css</code>
starts <em>before</em> <code>main.css</code>, even though main is the first style we add.</p>
<p>So, you can't depend on <em>anything</em> happening in order. But, what if you need
to?</p>
<h2 id="race-condition-in-the-manifest">Race Condition in the Manifest <a class="headerlink" href="on-end-async-and-listeners#race-condition-in-the-manifest" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>There's a bug with our manifest file - a race condition! Ah gross! Because
of the <code>merge</code> option, it opens up the manifest, reads the existing keys,
updates one of them, then re-dumps the whole file.</p>
<p>For styles, the manifest file is opened twice for <code>main.css</code> and <code>dinosaur.css</code>.
If one opens the file before the other finishes writing, when it writes,
it'll run over the changes from the first.</p>
<p>How can we make the first <code>addStyle</code> finish before starting the second?</p>
<h2 id="using-on-to-control-order">Using on to Control Order <a class="headerlink" href="on-end-async-and-listeners#using-on-to-control-order" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>It turns out the answer is easy. We can attach an <code>end</code> listener to any part
of the Gulp stream. Return the stream from <code>addStyle</code>. Then in <code>styles</code>,
attach an <code>on('end')</code> and only process <code>dinosaur.css</code> once the previous
call is finished:</p>
<p><div class="code-block-wrapper" data-code-block-guid="0b9e3a6448">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-93" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            93 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-14" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 14
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="15"></td>
            <td class="blob-code">app.addStyle = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">paths, outputFilename</span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="16"></td>
            <td class="blob-code">    <span class="hljs-keyword">return</span> gulp.src(paths).on(<span class="hljs-string">'end'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'start '</span>+outputFilename)})</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="17-29" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 17 - 29
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="30"></td>
            <td class="blob-code">};</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="31-52" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 31 - 52
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="53"></td>
            <td class="blob-code">gulp.task(<span class="hljs-string">'styles'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="54"></td>
            <td class="blob-code">    app.addStyle([</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="55"></td>
            <td class="blob-code">        config.bowerDir+<span class="hljs-string">'/bootstrap/dist/css/bootstrap.css'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="56"></td>
            <td class="blob-code">        config.bowerDir+<span class="hljs-string">'/font-awesome/css/font-awesome.css'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="57"></td>
            <td class="blob-code">        config.assetsDir+<span class="hljs-string">'/sass/layout.scss'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="58"></td>
            <td class="blob-code">        config.assetsDir+<span class="hljs-string">'/sass/styles.scss'</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="59"></td>
            <td class="blob-code">    ], <span class="hljs-string">'main.css'</span>).on(<span class="hljs-string">'end'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="60"></td>
            <td class="blob-code">        app.addStyle([</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="61"></td>
            <td class="blob-code">            config.assetsDir+<span class="hljs-string">'/sass/dinosaur.scss'</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="62"></td>
            <td class="blob-code">        ], <span class="hljs-string">'dinosaur.css'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="63"></td>
            <td class="blob-code">    });</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="64"></td>
            <td class="blob-code">});</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="65-93" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 65 - 93
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>I know, it's ugly - we'll fix it, I promise! But let's see if it works:</p>
<pre><code class="language-bash"><div class="line">gulp</div></code></pre>
<p>Perfect! <code>main.css</code> starts and ends. <em>Then</em> <code>dinosaur.css</code> starts.</p>
<h2 id="using-the-pipeline">Using the Pipeline <a class="headerlink" href="on-end-async-and-listeners#using-the-pipeline" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>This is the key idea. But the syntax here is terrible. If we have 10 CSS
files, we'll need 10 levels of nested listeners. That's not good enough.</p>
<p>To help fix this, I'll paste in some code I wrote:</p>
<p><div class="code-block-wrapper" data-code-block-guid="5fc367f125">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-129" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            129 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-53" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 53
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="54"></td>
            <td class="blob-code"><span class="hljs-keyword">var</span> Pipeline = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="55"></td>
            <td class="blob-code">    <span class="hljs-keyword">this</span>.entries = [];</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="56"></td>
            <td class="blob-code">};</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="57"></td>
            <td class="blob-code">Pipeline.prototype.add = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="58"></td>
            <td class="blob-code">    <span class="hljs-keyword">this</span>.entries.push(<span class="hljs-built_in">arguments</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="59"></td>
            <td class="blob-code">};</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="60"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="61"></td>
            <td class="blob-code">Pipeline.prototype.run = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">callable</span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="62"></td>
            <td class="blob-code">    <span class="hljs-keyword">var</span> deferred = Q.defer();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="63"></td>
            <td class="blob-code">    <span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="64"></td>
            <td class="blob-code">    <span class="hljs-keyword">var</span> entries = <span class="hljs-keyword">this</span>.entries;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="65"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="66"></td>
            <td class="blob-code">    <span class="hljs-keyword">var</span> runNextEntry = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="67"></td>
            <td class="blob-code">        <span class="hljs-comment">// see if we're all done looping</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="68"></td>
            <td class="blob-code">        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> entries[i] === <span class="hljs-string">'undefined'</span>) {</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="69"></td>
            <td class="blob-code">            deferred.resolve();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="70"></td>
            <td class="blob-code">            <span class="hljs-keyword">return</span>;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="71"></td>
            <td class="blob-code">        }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="72"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="73"></td>
            <td class="blob-code">        <span class="hljs-comment">// pass app as this, though we should avoid using "this"</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="74"></td>
            <td class="blob-code">        <span class="hljs-comment">// in those functions anyways</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="75"></td>
            <td class="blob-code">        callable.apply(app, entries[i]).on(<span class="hljs-string">'end'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="76"></td>
            <td class="blob-code">            i++;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="77"></td>
            <td class="blob-code">            runNextEntry();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="78"></td>
            <td class="blob-code">        });</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="79"></td>
            <td class="blob-code">    };</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="80"></td>
            <td class="blob-code">    runNextEntry();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="81"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="82"></td>
            <td class="blob-code">    <span class="hljs-keyword">return</span> deferred.promise;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="83"></td>
            <td class="blob-code">};</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="84-129" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 84 - 129
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>It's an object called Pipeline - and it'll help us execute Gulp streams one
at a time. It has a dependency on an object called <code>q</code>, so let's go install
that:</p>
<pre><code class="language-bash"><div class="line">npm install q --save-dev</div></code></pre>
<p>On top, add <code>var Q = require('q')</code></p>
<p><div class="code-block-wrapper" data-code-block-guid="13bd0148c8">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-129" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            129 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-3" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 3
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="4"></td>
            <td class="blob-code"><span class="hljs-keyword">var</span> Q = <span class="hljs-built_in">require</span>(<span class="hljs-string">'q'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="5-129" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 5 - 129
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>To use it, create a <code>pipeline</code> variable and set it to <code>new Pipeline()</code>. Now,
instead of calling <code>app.addStyle()</code> directly, call <code>pipeline.add()</code> with
the same arguments. Now we can move <code>dinosaur.css</code> out of the nested callback
and use <code>pipeline.add()</code> again. Woops, typo on pipeline!</p>
<p><div class="code-block-wrapper" data-code-block-guid="2986000001">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-129" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            129 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-84" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 84
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="85"></td>
            <td class="blob-code">gulp.task(<span class="hljs-string">'styles'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="86"></td>
            <td class="blob-code">    <span class="hljs-keyword">var</span> pipeline = <span class="hljs-keyword">new</span> Pipeline();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="87"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="88"></td>
            <td class="blob-code">    pipeline.add([</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="89"></td>
            <td class="blob-code">        config.bowerDir+<span class="hljs-string">'/bootstrap/dist/css/bootstrap.css'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="90"></td>
            <td class="blob-code">        config.bowerDir+<span class="hljs-string">'/font-awesome/css/font-awesome.css'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="91"></td>
            <td class="blob-code">        config.assetsDir+<span class="hljs-string">'/sass/layout.scss'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="92"></td>
            <td class="blob-code">        config.assetsDir+<span class="hljs-string">'/sass/styles.scss'</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="93"></td>
            <td class="blob-code">    ], <span class="hljs-string">'main.css'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="94"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="95"></td>
            <td class="blob-code">    pipeline.add([</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="96"></td>
            <td class="blob-code">        config.assetsDir+<span class="hljs-string">'/sass/dinosaur.scss'</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="97"></td>
            <td class="blob-code">    ], <span class="hljs-string">'dinosaur.css'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="98-99" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 98 - 99
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="100"></td>
            <td class="blob-code">});</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="101-129" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 101 - 129
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p><code>pipeline.add</code> is basically queuing those to be run. So at the end, call
<code>pipeline.run()</code> and pass it the actual function it should call:</p>
<p><div class="code-block-wrapper" data-code-block-guid="2ec176a960">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-129" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            129 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-84" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 84
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="85"></td>
            <td class="blob-code">gulp.task(<span class="hljs-string">'styles'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="86-94" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 86 - 94
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="95"></td>
            <td class="blob-code">    pipeline.add([</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="96"></td>
            <td class="blob-code">        config.assetsDir+<span class="hljs-string">'/sass/dinosaur.scss'</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="97"></td>
            <td class="blob-code">    ], <span class="hljs-string">'dinosaur.css'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="98"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="99"></td>
            <td class="blob-code">    pipeline.run(app.addStyle);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="100"></td>
            <td class="blob-code">});</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="101-129" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 101 - 129
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Behind the scenes, the Pipeline is doing what we did before: calling <code>addStyle</code>,
waiting until it finishes, then calling <code>addStyle</code> again.</p>
<p>Try it!</p>
<pre><code class="language-bash"><div class="line">gulp</div></code></pre>
<p>Cool - we've got the same ordering.</p>
<h3 id="pipelining-scripts">Pipelining scripts <a class="headerlink" href="on-end-async-and-listeners#pipelining-scripts" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Ok! Let's add this pipeline stuff to scripts. First, clean up my ugly debug
code. Make sure you actually <code>return</code> from <code>addScript</code> - we need that stream
so the <code>Pipeline</code> can add an <code>end</code> listener.</p>
<p><div class="code-block-wrapper" data-code-block-guid="727e913699">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-133" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            133 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-32" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 32
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="33"></td>
            <td class="blob-code">app.addScript = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">paths, outputFilename</span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="34"></td>
            <td class="blob-code">    <span class="hljs-keyword">return</span> gulp.src(paths)</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="35-133" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 35 - 133
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Down in <code>scripts</code> work your magic! Create the <code>pipeline</code> variable, then
<code>pipeline.add()</code>. And, <code>pipeline.run()</code> to finish:</p>
<p><div class="code-block-wrapper" data-code-block-guid="4692ae8385">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-133" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            133 lines <span class="meta-divider"></span> <span title="gulpfile.js">gulpfile.js</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-101" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 101
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="102"></td>
            <td class="blob-code">gulp.task(<span class="hljs-string">'scripts'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="103"></td>
            <td class="blob-code">    <span class="hljs-keyword">var</span> pipeline = <span class="hljs-keyword">new</span> Pipeline();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="104"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="105"></td>
            <td class="blob-code">    pipeline.add([</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="106"></td>
            <td class="blob-code">        config.bowerDir+<span class="hljs-string">'/jquery/dist/jquery.js'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="107"></td>
            <td class="blob-code">        config.assetsDir+<span class="hljs-string">'/js/main.js'</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="108"></td>
            <td class="blob-code">    ], <span class="hljs-string">'site.js'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="109"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="110"></td>
            <td class="blob-code">    pipeline.run(app.addScript);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="111"></td>
            <td class="blob-code">});</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="112-133" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 112 - 133
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Ok, try it!</p>
<pre><code class="language-bash"><div class="line">gulp</div></code></pre>
<p>Good, no errors! Use the Pipeline if you like it. But either way, remember
that Gulp runs everything all at once. You <em>can</em> make one entire task wait
for another to finish, but we'll talk about that later.</p>

    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2845694753" id="dsq-comment-2845694753">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_0KTDZkf38n/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2845694753">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-19</span>
	                            <span class="dsq-commenter-name">Kevin</span>
	                        </div>

	                        <div id="dsq-comment-message-2845694753" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2845694753" class="dsq-comment-text">
	                                <p>Hey again <a data-dsq-mention="weaverryan:disqus" href="https://disq.us/url?url=https%3A%2F%2Fdisqus.com%2Fby%2Fweaverryan%2F%3APBIAkzK4hlYNCZurh4fY0tD6LIg&amp;cuid=1175718" rel="nofollow noopener">weaverryan</a>  !</p><p>I found a bug with the manifest file. It seems to work with 2 tasks (styles &amp; scripts) in the tutorial.</p><p>Then, I wanted to do 4 tasks (styles, styles_libraries, scripts and scripts libraries), in order to avoid generate the libraries files when I watch the custom styles, because it takes so long to generate the file when using some libraries. (~3s, too long for some CSS modifications)</p><p>After I had the 4 tasks, the manifest has gone crazy, it was rewriting when another task was still running even with the Pipeline.<br>I wonder if the problem comes from the fact that we initialize multiple Pipeline object and they can't communicate between them...? I don't have enough knowledge about Promise to be sure. Any ideas ?</p><p>Some threads say the manifest need a base path to have a good merge : <br></p><pre><code><br>var config = {<br>    baseRevManifestPath: 'app/Resources/assets',<br>    revManifestPath: 'app/Resources/assets/rev-manifest.json'<br>};<br><br>.pipe(plugins.rev.manifest(config.revManifestPath, {<br>    base: config.baseRevManifestPath,<br>    merge: true<br>}))<br>.pipe(gulp.dest(config.baseRevManifestPath));<br></code></pre><p></p><p>However, this doesn't fix the issue, I don't know if this is necessary...</p><p>To fix the issue, I had to finally use the deps array of gulp tasks and make styles_libraries dependant from styles, scripts dependant from styles_libraries and scripts_libraries dependant of scripts.</p><p>I don't know if it's a good solution, but it seems to work so far.</p><p>What do you think about this ?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2845644135" id="dsq-comment-2845644135">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_0KTDZkf38n/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2845644135">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-19</span>
	                            <span class="dsq-commenter-name">Kevin</span>
	                        </div>

	                        <div id="dsq-comment-message-2845644135" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2845644135" class="dsq-comment-text">
	                                <p>Hey again <a data-dsq-mention="weaverryan:disqus" href="https://disq.us/url?url=https%3A%2F%2Fdisqus.com%2Fby%2Fweaverryan%2F%3APBIAkzK4hlYNCZurh4fY0tD6LIg&amp;cuid=1175718" rel="nofollow noopener">weaverryan</a> !</p><p>I found a bug with the manifest file. It seems to work with 2 tasks (styles &amp; scripts).</p><p>Then, I wanted to do 4 tasks (styles, styles_libraries, scripts and scripts libraries), in order to avoid generate the libraries files when I watch the custom styles, because it takes so long to generate the file when using some libraries. (~3s, couldn't wait so long to reload the browser)</p><p>After I had the 4 tasks, the manifest has gone crazy, it was rewriting when another task was still running even with the Pipeline.</p><p>I wonder if the problem comes from the fact that we initialize multiple Pipeline object and they can't communicate between them...? I don't have enough knowledge about Promise to be sure. Any ideas ?</p><p>Some threads say the manifest need a base path to have a good merge : <br></p><pre><code><br>var config = {<br>    baseRevManifestPath: 'app/Resources/assets',<br>    revManifestPath: 'app/Resources/assets/rev-manifest.json'<br>};<br><br>.pipe(plugins.rev.manifest(config.revManifestPath, {<br>    base: config.baseRevManifestPath,<br>    merge: true<br>}))<br>.pipe(gulp.dest(config.baseRevManifestPath));<br></code></pre><p></p><p>However, this doesn't fix the issue, I don't know if this is necessary...</p><p>To fix the issue, I had to finally use the deps array of gulp tasks and make styles_libraries dependant from styles, scripts dependant from styles_libraries and scripts_libraries dependant of scripts.</p><p>I don't know if it's a good solution, but it seems to work so far.</p><p>What do you think about this ?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2845560164" id="dsq-comment-2845560164">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_0KTDZkf38n/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2845560164">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-19</span>
	                            <span class="dsq-commenter-name">Kevin</span>
	                        </div>

	                        <div id="dsq-comment-message-2845560164" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2845560164" class="dsq-comment-text">
	                                <p>It works perfectly, thank you :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2844811049" id="dsq-comment-2844811049">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2844811049">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-18</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2844811049" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2844811049" class="dsq-comment-text">
	                                <p>Hi Kevin!</p><p>Ah, I think you're right! There is a bug here :). Fortunately, it looks like a well-known bug with a well-known workaround. Try updating both of your plugin.plumber calls (for CSS and JS) to look like this</p><p></p><pre><code><br>        .pipe(plugins.plumber(function(error) {<br>            console.log(error.toString());<br>            this.emit('end');<br>        }))<br></code></pre><p></p><p>Specifically, instead of just calling plumber(), you need to provide a callback. This callback should print the error (which plumber did automatically before adding this function) and then call this.emit('end'). That is the key: this tells the watch task that plumber is finished... which for some reason is the key to the whole thing.</p><p>Let me know if it works! I'm going to make an update to the tutorial.</p><p>Thanks for the question!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2844292917" id="dsq-comment-2844292917">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_0KTDZkf38n/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2844292917">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-18</span>
	                            <span class="dsq-commenter-name">Kevin</span>
	                        </div>

	                        <div id="dsq-comment-message-2844292917" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2844292917" class="dsq-comment-text">
	                                <p>Hi <a data-dsq-mention="weaverryan:disqus" href="https://disqus.com/by/weaverryan/" rel="nofollow noopener">weaverryan</a>,</p><p>Thanks for the tutorial, it's really good !</p><p>I've got an issue here. Your Pipeline method is working great for me but :</p><p>The problem is that when I make a syntax error in the SCSS file, the plumber catch the error and gulp is still running, but nothing happen when I fix the syntax, no more CSS files are generated, it's like the watch styles is down.</p><p>Did I make something wrong ? Did you test the plumber with the Pipeline ?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2843785537" id="dsq-comment-2843785537">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_0KTDZkf38n/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2843785537">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-18</span>
	                            <span class="dsq-commenter-name">Kevin</span>
	                        </div>

	                        <div id="dsq-comment-message-2843785537" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2843785537" class="dsq-comment-text">
	                                <p>Hi <a data-dsq-mention="weaverryan:disqus" href="https://disq.us/url?url=https%3A%2F%2Fdisqus.com%2Fby%2Fweaverryan%2F%3APBIAkzK4hlYNCZurh4fY0tD6LIg&amp;cuid=1175718" rel="nofollow noopener">weaverryan</a>,</p><p>Thanks for the tutorial, it's really good !<br>I've got an issue here. Your Pipeline method is working great for me but :</p><p>The problem is that when I make a syntax error in the SCSS file, the plumber catch the error and gulp is still running, but nothing happen when I fix the syntax, no more CSS files are generated, it's like the watch styles is down.</p><p>Did I make something wrong ? Did you test the plumber with the Pipeline ?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2363919673" id="dsq-comment-2363919673">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/alsbury/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/4371/2874/avatar92.jpg?1389423463">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2363919673">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-11-17</span>
	                            <span class="dsq-commenter-name">alsbury</span>
	                        </div>

	                        <div id="dsq-comment-message-2363919673" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2363919673" class="dsq-comment-text">
	                                <p>I'm with you, it seems like an obvious problem, so it would seem that something would exist already.</p><p>What about a collection in memory of resources? When a resource get's updated in memory, the whole collection gets written? Maybe that idea wouldn't play well with gulp-rev.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2363882110" id="dsq-comment-2363882110">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2363882110">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-11-17</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2363882110" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2363882110" class="dsq-comment-text">
	                                <p>Hey <a data-dsq-mention="alsbury:disqus" href="https://disqus.com/by/alsbury/" rel="nofollow noopener">alsbury</a>!</p><p>Ah, really glad this was useful! So, I don't know of any such library, but I got the *exact* same impression as you: there was a logical problem... so I was expecting a library to already exist. To this day, the fact that there wasn't/isn't a library, leaves me thinking that there *might* be some other direction to take in solving this. But so far, I haven't seen anything. I don't have plans to release it as a library since (A) it's pretty small and (B) I still think that *eventually* a different method or library will be uncovered. But until then, it's working great for me and others.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2363876645" id="dsq-comment-2363876645">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/alsbury/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/4371/2874/avatar92.jpg?1389423463">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2363876645">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-11-17</span>
	                            <span class="dsq-commenter-name">alsbury</span>
	                        </div>

	                        <div id="dsq-comment-message-2363876645" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2363876645" class="dsq-comment-text">
	                                <p>Hey Ryan,<br>Really helpful tutorial. We've already started to take what we've learned here and started to apply it to a project. After watching the last video, it would seem like the Pipeline class would already exist somewhere as a library in the NPM database. Do you know of a library? Do you have plans to release it as a library? Or should someone like me create it?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_on-end-async-and-listeners';var disqus_url = 'https://knpuniversity.com/screencast/gulp/on-end-async-and-listeners';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="task-ordering#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/gulp/on-end-async-and-listeners" addthis:title="Gulp! Refreshment for Your Frontend Assets">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"gulp","courseIsOwned":false,"chapter":"on('end'): Async and Listeners","chapterNumber":17,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Gulp! Refreshment for Your Frontend Assets';
        Core.courseId = 57
        Core.courseIsOwned = false;
        Core.courseSlug = 'gulp';
                    Core.chapterTitle = 'on(&#039;end&#039;): Async and Listeners';
            Core.chapterNumber = 17;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'on-end-async-and-listeners';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

</body>
</html>
