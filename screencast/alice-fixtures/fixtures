<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Making Fixtures Awesome with Alice > Making Fixtures Really Awesome with Alice | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: true,
            courseChapterId: 7246
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: Processors\x3A\x20Do\x20Custom\x20Stuff\x20While\x20Loading <i class="fa fa-play"></i>',
            'url': '/screencast/alice-fixtures/processors#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="Fixtures: those little bits of test data you load (and reload)
locally so that you can test your site with some real-ish content.
Until now, creating fixtures was boring. But with Alice, they&#039;re
video-game-level exciting. Seriously!
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Making Fixtures Awesome with Alice">
<meta property="og:description" content="Fixtures: those little bits of test data you load (and reload)
locally so that you can test your site with some real-ish content.
Until now, creating fixtures was boring">
<meta property="og:url" content="http://knpuniversity.com/screencast/alice-fixtures/fixtures">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/alice-fixtures:e5e27ed02c74d87c0bb0e597d959a53fc99617a9/sf-fixtures-alice.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="fixtures#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        1.
                            Making Fixtures Awesome with Ali...
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">Making Fixtures Really Awesome with Alice</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="fixtures" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Making Fixtures Awesome with Alice
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 12:23</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="processors" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        Processors: Do Custom Stuff While Loading
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:37</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="processors-container" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        Creating Unique Files
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:30</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/alice-fixtures" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Making Fixtures Awesome with Alice</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>Making Fixtures Really Awesome with Alice Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                        <div class="hidden alert alert-danger js-video-not-supported" style="margin-bottom: 10px;">
        <h4>Video not working?</h4>
        It looks like your browser may not support the H264 codec.
        If you're using Linux+Firefox, try a different browser or try
        installing the
        <code>gstreamer0.10-ffmpeg</code>
        <code>gstreamer0.10-plugins-good</code> packages.
        <br/><br/>
        Thanks! This saves us
        from needing to use Flash or encode videos in multiple formats. And that
        let's us get back to making more videos :). But as always, please feel
        free to <a href="../../contact">message us</a>.
    </div>

    <video id="js-video-player" class="video-js vjs-default-skin vjs-big-play-centered "
            controls preload="auto" width="auto" height="auto"
            poster="http://i.vimeocdn.com/video/536926358_960x600.jpg">
        <source src="http://player.vimeo.com/external/140213820.hd.mp4?s=388744f064fbfe55bd3e0197799ad0ca&amp;profile_id=113&amp;oauth2_token_id=308801954" type="video/mp4" data-res="HD" data-default="true" />
        <source src="http://player.vimeo.com/external/140213820.sd.mp4?s=ea0d970312b93336aade2cf9bda9b488&amp;profile_id=112&amp;oauth2_token_id=308801954" type="video/mp4" data-res="SD" />
        <p class="vjs-no-js">
            To view this video please enable JavaScript, and consider upgrading to a web browser that
            <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
        </p>
    </video>


                            <div class="end-show js-post-play-wrapper" style="display: none;">
                                <p class="end-show-header">You're Killing it!</p>

                                <div class="text-center overlay-btn">
                                    <!-- This is filled in via JS -->
                                    <a href="fixtures#" class="btn btn-lg btn-warning js-next-item-anchor"></a>
                                    <div class="js-all-finished-holder" style="display: none; color: #fff;">
                                        Another Tutorial down!<br/><br/>
                                                                                    <a href="../tag/symfony" class="btn btn-lg btn-success">Back to the <i>Symfony 3</i> Track</a>
                                                                            </div>
                                </div>

                                <p class="end-show-link js-video-repeat"><a class="knp-color-white link-no-underline" href="fixtures#">
                                    <i class="fa fa-repeat"></i> Watch again
                                </a></p>
                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="processors#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="fixtures#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="fixtures#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (25+)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script script-content">
                                                                                        <a href="https://github.com/knpuniversity/symfony-alice-fixtures/edit/master/knpu/fixtures.rst" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    
  <div class="section" id="making-fixtures-awesome-with-alice">
<h1>Making Fixtures Awesome with Alice<a class="headerlink" href="fixtures#making-fixtures-awesome-with-alice" title="Permalink to this headline">¶</a></h1>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">A newer version of HauteLookAliceBundle has been released and portions
of this tutorial won&#8217;t apply to that new version.</p>
</div>
<p>Fixtures, those nice little bits of data that you can put into your database
so that when you&#8217;re developing locally you actually have something to look at:
like products or users or whatever else you want to play with. I hate writing
fixtures because I use this bundle (<a class="reference external" href="http://symfony.com/doc/current/bundles/DoctrineFixturesBundle/index.html">DoctrineFixturesBundle</a>) and it&#8217;s boring
and manual and you end up building really big ugly fixture classes:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// a boring DataFixtures class</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">MyFixtures</span> <span class="k">implements</span> <span class="nx">FixtureInterface</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">load</span><span class="p">(</span><span class="nx">ObjectManager</span> <span class="nv">$manager</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$user1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">User</span><span class="p">();</span>
        <span class="nv">$user1</span><span class="o">-&gt;</span><span class="na">setUsername</span><span class="p">(</span><span class="s1">&#39;foo&#39;</span><span class="p">);</span>
        <span class="c1">// ...</span>
        <span class="nv">$manager</span><span class="o">-&gt;</span><span class="na">persist</span><span class="p">(</span><span class="nv">$user1</span><span class="p">);</span>
        <span class="c1">// repeat over and over...</span>

        <span class="nv">$manager</span><span class="o">-&gt;</span><span class="na">flush</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The reason is that this library just doesn&#8217;t do anything for you. It&#8217;s entirely
up to you to manage, persist and flush everything that you do.</p>
<div class="section" id="introducing-alice-our-video-game-hero-app">
<h2>Introducing Alice + Our Video Game Hero App<a class="headerlink" href="fixtures#introducing-alice-our-video-game-hero-app" title="Permalink to this headline">¶</a></h2>
<p>So I&#8217;m going to show you a better way, in fact a much better way with a library
called <a class="reference external" href="https://github.com/nelmio/alice">Alice</a>. I prepared a small Symfony application for us which we&#8217;ll
talk about in a second. And I&#8217;ve already started our built-in PHP Web server:</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">Want to code along? Beautiful! Just download the code on this page.</p>
</div>
<div class="highlight-bash"><div class="highlight"><pre>php app/console server:run
</pre></div>
</div>
<p>And here&#8217;s our app, it&#8217;s all about listing our favorite videogame heroes.
Right now we&#8217;re losing because there is nothing in this table. But that&#8217;s
what we&#8217;re going to fix with Alice.</p>
<p>This table is actually pulling from the <tt class="docutils literal"><span class="pre">Character</span></tt> entity so this is what
we actually need to save to the database.</p>
</div>
<div class="section" id="installing-alice-via-hautelookalicebundle">
<h2>Installing Alice via HauteLookAliceBundle<a class="headerlink" href="fixtures#installing-alice-via-hautelookalicebundle" title="Permalink to this headline">¶</a></h2>
<p>To install Alice we could do it directly but instead I&#8217;m going to use an
awesome bundle called <a class="reference external" href="https://github.com/hautelook/AliceBundle">HautelookAliceBundle</a>. Let&#8217;s grab the <tt class="docutils literal"><span class="pre">composer</span> <span class="pre">require</span></tt>
command from it&#8217;s README and paste that into the terminal:</p>
<div class="highlight-bash"><div class="highlight"><pre>composer require hautelook/alice-bundle
</pre></div>
</div>
<p>This bundle is a thin layer around the Alice library, which is something that
let&#8217;s us load fixtures with yml files, and the same DoctrineFixturesBundle
that we were talking about before. This is a really nice combination because
it&#8217;s going to mean that we can still run our normal <tt class="docutils literal"><span class="pre">php</span> <span class="pre">app/console</span> <span class="pre">doctrine:fixtures:load</span></tt>.
But after that, instead of writing raw PHP code, all of our fixtures are
going to be in these really nice yml files.</p>
<p>And if that doesn&#8217;t sound awesome yet, just hang with me. Alice is a lot more
than yml files - it contains tons of goodies.</p>
<p>Next let&#8217;s activate the bundle. In fact if you head back to its documentation
you&#8217;ll see that you need to initialize both this bundle <em>and</em> the <tt class="docutils literal"><span class="pre">DoctrineFixturesBundle</span></tt>
in our <tt class="docutils literal"><span class="pre">AppKernel</span></tt>. So grab both of those lines, open the <tt class="docutils literal"><span class="pre">AppKernel</span></tt>
and let&#8217;s put it there:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// app/AppKernel.php</span>
<span class="c1">// ...</span>

<span class="k">if</span> <span class="p">(</span><span class="nb">in_array</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getEnvironment</span><span class="p">(),</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;dev&#39;</span><span class="p">,</span> <span class="s1">&#39;test&#39;</span><span class="p">)))</span> <span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="nv">$bundles</span><span class="p">[]</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</span><span class="p">();</span>
    <span class="nv">$bundles</span><span class="p">[]</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Hautelook\AliceBundle\HautelookAliceBundle</span><span class="p">();</span>
<span class="p">}</span>
</pre></div>
</div>
<p>But since I&#8217;m only going to be loading my fixtures when I&#8217;m developing, I&#8217;m
going to go ahead and put these inside of the <tt class="docutils literal"><span class="pre">dev</span></tt> environment block.
That way, in production I have just a little bit less in my application.</p>
<p>You <em>do</em> need one fixture class, but we can just copy it from the documentation
and put it into our application. I&#8217;ll create the <tt class="docutils literal"><span class="pre">DataFixtures/ORM</span></tt> directory.
By the way this stuff <em>does</em> work with the ODM or other doctrine libraries.
And I&#8217;ll create a file called <tt class="docutils literal"><span class="pre">AppFixtures</span></tt>. Copy the contents in there
and don&#8217;t forget to update your namespace and rename the class:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/DataFixtures/ORM/AppFixtures.php</span>
<span class="k">namespace</span> <span class="nx">AppBundle\DataFixtures\ORM</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Hautelook\AliceBundle\Alice\DataFixtureLoader</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Nelmio\Alice\Fixtures</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">AppFixtures</span> <span class="k">extends</span> <span class="nx">DataFixtureLoader</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * {@inheritDoc}</span>
<span class="sd">     */</span>
    <span class="k">protected</span> <span class="k">function</span> <span class="nf">getFixtures</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span>  <span class="k">array</span><span class="p">(</span>
            <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/test.yml&#39;</span><span class="p">,</span>
        <span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The fixtures class is special because it&#8217;s already wired up to load yml files.
Let&#8217;s call ours <tt class="docutils literal"><span class="pre">characters.yml</span></tt> and then go ahead and create that file:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/DataFixtures/ORM/AppFixtures.php</span>
<span class="c1">// ...</span>

<span class="k">protected</span> <span class="k">function</span> <span class="nf">getFixtures</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">return</span>  <span class="k">array</span><span class="p">(</span>
        <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/characters.yml&#39;</span><span class="p">,</span>
    <span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="your-first-alice-yml-file">
<h2>Your First Alice yml File<a class="headerlink" href="fixtures#your-first-alice-yml-file" title="Permalink to this headline">¶</a></h2>
<p>Now, here is how Alice works. Inside the yml file this is now pure Alice
code. You start with the full entity namespace. This tells Alice what type
of object it&#8217;s going to create. Below that, we just start inventing keys.
These aren&#8217;t important yet but they <em>will</em> be later when we start linking
two entities together. Under that we just give each property a value. Let&#8217;s
create Yoshi:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># src/AppBundle/DataFixtures/ORM/characters.yml</span>
<span class="l-Scalar-Plain">AppBundle\Entity\Character</span><span class="p-Indicator">:</span>
    <span class="l-Scalar-Plain">character1</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Yoshi</span>
        <span class="l-Scalar-Plain">realName</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">T. Yoshisaur Munchakoopas</span>
        <span class="l-Scalar-Plain">highScore</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">99999</span>
        <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yoshi@nintendo.com</span>
        <span class="l-Scalar-Plain">tagLine</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Yoshi!</span>
</pre></div>
</div>
<p>Let&#8217;s cheat and look back at the <tt class="docutils literal"><span class="pre">Character</span></tt> entity to see what other fields
we want to fill in. We now have a fully functional and armed single-file
fixture. So let&#8217;s try it out.</p>
</div>
<div class="section" id="loading-your-fixtures">
<h2>Loading your Fixtures<a class="headerlink" href="fixtures#loading-your-fixtures" title="Permalink to this headline">¶</a></h2>
<p>As I mentioned earlier, this is a wrapper around the Doctrine fixtures library
so we use the same <tt class="docutils literal"><span class="pre">php</span> <span class="pre">app/console</span> <span class="pre">doctrine:fixtures:load</span></tt> command to
run everything. No errors is good so let&#8217;s try refreshing the page. Yoshi!</p>
</div>
<div class="section" id="loading-a-lot-of-test-data-ranges">
<h2>Loading A LOT of Test Data (Ranges)<a class="headerlink" href="fixtures#loading-a-lot-of-test-data-ranges" title="Permalink to this headline">¶</a></h2>
<p>If this is all that Alice gave us I wouldn&#8217;t be telling you about it. It
actually gives us a ton more. So usually in fixtures you want a lot of things.
Like five characters or ten characters or 50 blog posts or something like that.</p>
<p>One of the most powerful features of Alice is this range syntax:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># src/AppBundle/DataFixtures/ORM/characters.yml</span>
<span class="l-Scalar-Plain">AppBundle\Entity\Character</span><span class="p-Indicator">:</span>
    <span class="l-Scalar-Plain">character1</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Yoshi</span>
        <span class="l-Scalar-Plain">realName</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">T. Yoshisaur Munchakoopas</span>
        <span class="l-Scalar-Plain">highScore</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">99999</span>
        <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yoshi@nintendo.com</span>
        <span class="l-Scalar-Plain">tagLine</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Yoshi!</span>
    <span class="l-Scalar-Plain">character{2..10}</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Mario</span>
        <span class="l-Scalar-Plain">realName</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Homo Nintendonus</span>
        <span class="l-Scalar-Plain">highScore</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">50000</span>
        <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">mario@nintendo.com</span>
        <span class="l-Scalar-Plain">tagLine</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Let&#39;s a go!</span>
</pre></div>
</div>
<p>So, in this case we&#8217;re going to be creating characters two through 10. Behind
the scenes you can see how this is basically a <tt class="docutils literal"><span class="pre">for</span></tt> loop but the syntax
is a lot cleaner. To test that out let&#8217;s reload our fixtures:</p>
<div class="highlight-bash"><div class="highlight"><pre>php app/console doctrine:fixtures:load
</pre></div>
</div>
<p>And now Mario is taking over our database!</p>
<p>So we have 10 characters now but since nine of them are identical they&#8217;re
not very realistic. But this is where Alice gets really interesting. It has
this special <tt class="docutils literal"><span class="pre">&lt;&gt;</span></tt> syntax which allows you to call functions that are special
to Alice.</p>
<p>For example, when you&#8217;re inside of a range you can use this syntax to call
the <tt class="docutils literal"><span class="pre">&lt;current()&gt;</span></tt> function that&#8217;s going to give us whatever index were at
in that moment:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># src/AppBundle/DataFixtures/ORM/characters.yml</span>
<span class="l-Scalar-Plain">AppBundle\Entity\Character</span><span class="p-Indicator">:</span>
    <span class="c1"># ...</span>
    <span class="l-Scalar-Plain">character{2..10}</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Mario&lt;current()&gt;</span>
        <span class="l-Scalar-Plain">realName</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Homo Nintendonus</span>
        <span class="c1"># ...</span>
</pre></div>
</div>
<p>So let&#8217;s reload our fixtures again and now we have Mario2, Mario3, Mario4.</p>
</div>
<div class="section" id="introducing-faker-for-all-your-fake-data-needs">
<h2>Introducing Faker: For all your Fake Data Needs<a class="headerlink" href="fixtures#introducing-faker-for-all-your-fake-data-needs" title="Permalink to this headline">¶</a></h2>
<p>So this is better but still not very realistic. Behind the scences Alice
hooks up with another library called <a class="reference external" href="https://github.com/fzaninotto/Faker">Faker</a>. And as it&#8217;s name sounds it&#8217;s
all about creating fake data. Fake names, fake company names, fake addresses,
fake e-mails - it supports a ton of stuff. To use Faker we just use that same
syntax we saw and use one of the many built-in functions.</p>
<p>For example, one of the functions is called <tt class="docutils literal"><span class="pre">firstName()</span></tt>. Since this is
going to return us some pretty normal names, let&#8217;s put the word <tt class="docutils literal"><span class="pre">Super</span></tt>
in front of it so at least it sounds like a superhero:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># src/AppBundle/DataFixtures/ORM/characters.yml</span>
<span class="l-Scalar-Plain">AppBundle\Entity\Character</span><span class="p-Indicator">:</span>
    <span class="c1"># ...</span>
    <span class="l-Scalar-Plain">character{2..10}</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Super &lt;firstName()&gt;</span>
        <span class="l-Scalar-Plain">realName</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Homo Nintendonus</span>
        <span class="c1"># ...</span>
</pre></div>
</div>
<p>Then we&#8217;re going to use a few others like <tt class="docutils literal"><span class="pre">name()</span></tt>, <tt class="docutils literal"><span class="pre">numberBetween()</span></tt>,
<tt class="docutils literal"><span class="pre">email()</span></tt> and <tt class="docutils literal"><span class="pre">sentence</span></tt> which gives us one random sentence:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># src/AppBundle/DataFixtures/ORM/characters.yml</span>
<span class="l-Scalar-Plain">AppBundle\Entity\Character</span><span class="p-Indicator">:</span>
    <span class="c1"># ...</span>
    <span class="l-Scalar-Plain">character{2..10}</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Super &lt;firstName()&gt;</span>
        <span class="l-Scalar-Plain">realName</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;name()&gt;</span>
        <span class="l-Scalar-Plain">highScore</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;numberBetween(100, 99999)&gt;</span>
        <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;email()&gt;</span>
        <span class="l-Scalar-Plain">tagLine</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;sentence()&gt;</span>
</pre></div>
</div>
<p>These functions are pretty self-explanatory but if you Google for &#8220;Faker PHP&#8221;
and scroll down on the README just a little bit, they have a <a class="reference external" href="https://github.com/fzaninotto/Faker#formatters">huge list</a>
of all the functions that they support. They&#8217;re actually called formatters
but a lot of them take arguments.</p>
<p>For example you can see our <tt class="docutils literal"><span class="pre">numberBetween</span></tt>, <tt class="docutils literal"><span class="pre">sentence</span></tt> and even some
things for creating random names where you can choose which gender you want.
So let&#8217;s check this out. Reload your fixtures, scroll back over refresh the page.</p>
<div class="highlight-bash"><div class="highlight"><pre>php app/console doctrine:fixtures:load
</pre></div>
</div>
<p>Now we have ten super friends and no identical data.</p>
</div>
<div class="section" id="making-a-field-sometimes-blank">
<h2>Making a Field (sometimes) Blank<a class="headerlink" href="fixtures#making-a-field-sometimes-blank" title="Permalink to this headline">¶</a></h2>
<p>If you want to make one of these fields sometimes empty you can do that as
well. For example, if <tt class="docutils literal"><span class="pre">tagLine</span></tt> is optional then you may want to see what
your set looks like when some of the characters don&#8217;t have one. To do that
create a percentage put a ? after it and then list what value you want:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># src/AppBundle/DataFixtures/ORM/characters.yml</span>
<span class="l-Scalar-Plain">AppBundle\Entity\Character</span><span class="p-Indicator">:</span>
    <span class="c1"># ...</span>
    <span class="l-Scalar-Plain">character{2..10}</span><span class="p-Indicator">:</span>
        <span class="c1"># ...</span>
        <span class="l-Scalar-Plain">tagLine</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">80%? &lt;sentence()&gt;</span>
</pre></div>
</div>
<p>So in this case 80% of the time we&#8217;re going to get a random sentence and 20%
of the time we&#8217;re going to get nothing. So reload the fixtures, and this time
you see that about 20% of our characters are missing their tag line.</p>
</div>
<div class="section" id="creating-your-own-faker-formatter-function">
<h2>Creating your Own Faker Formatter (Function)<a class="headerlink" href="fixtures#creating-your-own-faker-formatter-function" title="Permalink to this headline">¶</a></h2>
<p>So I love the random data, I love how easy this is. But one thing I don&#8217;t
like is that our names just aren&#8217;t that realistic. We&#8217;re dealing with video
game heroes here and none of our names are actually of real video game heroes.</p>
<p>To fix this let&#8217;s create our own formatter called <tt class="docutils literal"><span class="pre">characterName</span></tt>:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># src/AppBundle/DataFixtures/ORM/characters.yml</span>
<span class="l-Scalar-Plain">AppBundle\Entity\Character</span><span class="p-Indicator">:</span>
    <span class="c1"># ...</span>
    <span class="l-Scalar-Plain">character{2..10}</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;characterName()&gt;</span>
        <span class="l-Scalar-Plain">realName</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;name()&gt;</span>
        <span class="l-Scalar-Plain">highScore</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;numberBetween(100, 99999)&gt;</span>
        <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;email()&gt;</span>
        <span class="l-Scalar-Plain">tagLine</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;sentence()&gt;</span>
</pre></div>
</div>
<p>Now if you try this out you are going to get the error that the formatteris
missing:</p>
<blockquote>
<div>Unknown formatter &#8220;characterName&#8221;</div></blockquote>
<p>So how do we create it? With the bundle it&#8217;s super easy. Just go back to
your fixtures class, <tt class="docutils literal"><span class="pre">AppFixtures</span></tt> and create a function called <tt class="docutils literal"><span class="pre">characterName</span></tt>.
And in this function we just need to return a character name. I&#8217;ll paste
in a few of my favorites and then at the bottom we&#8217;ll use the <tt class="docutils literal"><a class="reference external" href="http://php.net/manual/en/function.array-rand.php" title="array_rand"><span class="pre">array_rand</span></a></tt>
function to return a random character each time Alice calls this:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/DataFixtures/ORM/AppFixtures.php</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">AppFixtures</span> <span class="k">extends</span> <span class="nx">DataFixtureLoader</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">characterName</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$names</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
            <span class="s1">&#39;Mario&#39;</span><span class="p">,</span>
            <span class="s1">&#39;Luigi&#39;</span><span class="p">,</span>
            <span class="s1">&#39;Sonic&#39;</span><span class="p">,</span>
            <span class="s1">&#39;Pikachu&#39;</span><span class="p">,</span>
            <span class="s1">&#39;Link&#39;</span><span class="p">,</span>
            <span class="s1">&#39;Lara Croft&#39;</span><span class="p">,</span>
            <span class="s1">&#39;Trogdor&#39;</span><span class="p">,</span>
            <span class="s1">&#39;Pac-Man&#39;</span><span class="p">,</span>
        <span class="p">);</span>

        <span class="k">return</span> <span class="nv">$names</span><span class="p">[</span><span class="nb">array_rand</span><span class="p">(</span><span class="nv">$names</span><span class="p">)];</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>I love when things are this simple!</p>
<div class="highlight-bash"><div class="highlight"><pre>php app/console doctrine:fixtures:load
</pre></div>
</div>
<p>Flip back to the browser and when you refresh this time, real video game
heroes!</p>
</div>
<div class="section" id="true-love-with-relationships">
<h2>True Love with Relationships<a class="headerlink" href="fixtures#true-love-with-relationships" title="Permalink to this headline">¶</a></h2>
<p>So there&#8217;s one more complication that I want to introduce, and that&#8217;s relationships.
I have an entity called <tt class="docutils literal"><span class="pre">Universe</span></tt> as in &#8220;Nintendo Universe&#8221; or &#8220;Sega Universe&#8221;.</p>
<p>First, let&#8217;s go into our yml file and create a few of these. We&#8217;ll start
just like before by putting the namespace and creating a few entries under
that. So I&#8217;ll have one for Nintendo, one for Sega and one for classic arcade:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># src/AppBundle/DataFixtures/ORM/characters.yml</span>
<span class="l-Scalar-Plain">AppBundle\Entity\Character</span><span class="p-Indicator">:</span>
    <span class="c1"># ...</span>

<span class="l-Scalar-Plain">AppBundle\Entity\Universe</span><span class="p-Indicator">:</span>
    <span class="l-Scalar-Plain">universe_nintendo</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Nintendo</span>
    <span class="l-Scalar-Plain">universe_sega</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Sega</span>
    <span class="l-Scalar-Plain">universe_arcade</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Classic Arcade</span>
</pre></div>
</div>
<p>The <tt class="docutils literal"><span class="pre">Character</span></tt> entity already has a <a class="reference external" href="../symfony2-ep3/doctrine-relationship">ManyToOne</a> relationship to universe
on a <tt class="docutils literal"><span class="pre">universe</span></tt> property:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Entity/Character.php</span>
<span class="c1">// ...</span>

<span class="k">class</span> <span class="nc">Character</span>
<span class="p">{</span>
    <span class="c1">// ...</span>

    <span class="sd">/**</span>
<span class="sd">     * @var Universe</span>
<span class="sd">     * @ORM\ManyToOne(targetEntity=&quot;Universe&quot;)</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$universe</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>So our goal is to take these <tt class="docutils literal"><span class="pre">Universe</span></tt> objects and set them on the <tt class="docutils literal"><span class="pre">charcter</span></tt>
property.</p>
<p>To reference another object, just use the <tt class="docutils literal"><span class="pre">&#64;</span></tt> symbol and then the internal
key to that object. So we&#8217;ll link Mario to the Nintendo universe and everyone
else, for now, to the Sega Universe:</p>
<div class="highlight-yaml"><div class="highlight"><pre># src/AppBundle/DataFixtures/ORM/characters.yml
AppBundle\Entity\Character:
    character1:
        name: Yoshi
        # ...
        universe: @universe_nintendo

    character{2..10}:
        name: &lt;characterName()&gt;
        # ...
        universe: @universe_sega

AppBundle\Entity\Universe:
    universe_nintendo:
        name: Nintendo
    universe_sega:
        name: Sega
    universe_arcade:
        name: Classic Arcade
</pre></div>
</div>
<div class="highlight-bash"><div class="highlight"><pre>php app/console doctrine:fixtures:load
</pre></div>
</div>
<p>When we check it out now, sure enough we see Nintendo on top followed by
9 Segas. So I know you&#8217;re thinking, &#8220;can we somehow randomly assign random
universes to the characters?&#8221; And absolutely! In fact, the syntax is ridiculously
straight forward. Just get rid of the <tt class="docutils literal"><span class="pre">sega</span></tt> part and put a star:</p>
<div class="highlight-yaml"><div class="highlight"><pre># src/AppBundle/DataFixtures/ORM/characters.yml
AppBundle\Entity\Character:
    # ...

    character{2..10}:
        # ...
        universe: @universe_*

AppBundle\Entity\Universe:
    universe_nintendo:
        name: Nintendo
    universe_sega:
        name: Sega
    universe_arcade:
        name: Classic Arcade
</pre></div>
</div>
<p>Now, Alice is going to find any keys that start with <tt class="docutils literal"><span class="pre">universe_</span></tt> and randomly
assign them to the characters. Reload things again and now we have a nice assortment
of universes:</p>
<div class="highlight-bash"><div class="highlight"><pre>php app/console doctrine:fixtures:load
</pre></div>
</div>
</div>
<div class="section" id="using-multiple-yml-files">
<h2>Using Multiple yml Files<a class="headerlink" href="fixtures#using-multiple-yml-files" title="Permalink to this headline">¶</a></h2>
<p>Because our project is pretty small I&#8217;ve kept everyhthing in a single file,
which I recommend that you do until it gets just too big. Once it does, feel
free to separate into multiple yml files.</p>
<p>In our case I&#8217;ll create a <tt class="docutils literal"><span class="pre">universe.yml</span></tt> file and put the universe stuff
in it:</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># src/AppBundle/DataFixtures/ORM/universe.yml</span>
<span class="c1"># these have been removed from characters.yml</span>
<span class="l-Scalar-Plain">AppBundle\Entity\Universe</span><span class="p-Indicator">:</span>
    <span class="l-Scalar-Plain">universe_nintendo</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Nintendo</span>
    <span class="l-Scalar-Plain">universe_sega</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Sega</span>
    <span class="l-Scalar-Plain">universe_arcade</span><span class="p-Indicator">:</span>
        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Classic Arcade</span>
</pre></div>
</div>
<p>Of course when you do this it&#8217;s not going to work because it&#8217;s only loading
the characters.yml file right now. So we get a missing reference error:</p>
<blockquote>
<div>Reference universe_nintendo is not defined</div></blockquote>
<p>There are actually a few ways to load the two yml files but the easiest
is to go back into your <tt class="docutils literal"><span class="pre">AppFixtures</span></tt> class and just add it to the array:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/DataFixtures/ORM/AppFixtures.php</span>
<span class="c1">// ...</span>

<span class="k">protected</span> <span class="k">function</span> <span class="nf">getFixtures</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">return</span>  <span class="k">array</span><span class="p">(</span>
        <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/universe.yml&#39;</span><span class="p">,</span>
        <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/characters.yml&#39;</span><span class="p">,</span>
    <span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Unfortunately, order <em>is</em> important here. So since we&#8217;re referencing the
universes from within the <tt class="docutils literal"><span class="pre">characters.yml</span></tt> we need to load the <tt class="docutils literal"><span class="pre">universe.yml</span></tt>
file first. Let&#8217;s reload things to make sure they&#8217;re working.</p>
<div class="highlight-bash"><div class="highlight"><pre>php app/console doctrine:fixtures:load
</pre></div>
</div>
<p>And they are!</p>
</div>
<div class="section" id="joyful-fixtures">
<h2>Joyful Fixtures<a class="headerlink" href="fixtures#joyful-fixtures" title="Permalink to this headline">¶</a></h2>
<p>To back up, after we installed the bundle we only really touched two things.
The <tt class="docutils literal"><span class="pre">AppFixtures</span></tt> class, which has almost nothing in it, and our yml files
which are very very small and straight forward. This is awesome! This puts
the joy back into writing fixtures files for me and I absolutely love it.</p>
<p>There are a few topics that we haven&#8217;t talked about like processors and templates
but I&#8217;ll cover those in a future lesson.</p>
<p>See you guys!</p>
</div>
</div>


    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2895241665" id="dsq-comment-2895241665">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2895241665">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-09-15</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-2895241665" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2895241665" class="dsq-comment-text">
	                                <p>Hey MilanG,</p><p>Well, fixtures do generate content for you. Actually, content is generated by faker library, which has already integrated to the alice package. But, it also allows developers customize content which will be generated, i.e. how big post content should be, how many words generate for post title, which language use for user's dummy name, etc. In other words, each project has different fields with different types and different validation rules, so make something common for all possible cases is difficult, I'd rather say it impossible.</p><p>When you have written some fixtures once - you can reload these fixtures as many times as you want in the future.</p><p>Do you agree with me?</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2895228694" id="dsq-comment-2895228694">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="fixtures">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2895228694">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-09-15</span>
	                            <span class="dsq-commenter-name">MilanG</span>
	                        </div>

	                        <div id="dsq-comment-message-2895228694" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2895228694" class="dsq-comment-text">
	                                <p>Hmm...I expected that fixtures would automatically generate content. I.e. in entity type "book" please generate 15 random peaces of content. Now, when I saw that I have to do it manually I'm disappointed. Why do I need extra bundle at all when I have to do it by hand, writing the code which will generate entity?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2864864290" id="dsq-comment-2864864290">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2864864290">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-29</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-2864864290" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2864864290" class="dsq-comment-text">
	                                <p>Hey Tael,</p><p>Good cross reference, thanks!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2863715766" id="dsq-comment-2863715766">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/taelkim/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/7615/3651/avatar92.jpg?1473305472">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2863715766">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-28</span>
	                            <span class="dsq-commenter-name">Tael Kim</span>
	                        </div>

	                        <div id="dsq-comment-message-2863715766" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2863715766" class="dsq-comment-text">
	                                <p>DONT PANIC for old version<br>and see <a href="https://disq.us/url?url=https%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fsymfony-doctrine%2Ffixtures-alice%3A0thY8EHue9nH79w9JXTtkoeC-VE&amp;cuid=1175718" rel="nofollow noopener">https://knpuniversity.com/scre...</a></p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2863635905" id="dsq-comment-2863635905">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/taelkim/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/7615/3651/avatar92.jpg?1473305472">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2863635905">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-28</span>
	                            <span class="dsq-commenter-name">Tael Kim</span>
	                        </div>

	                        <div id="dsq-comment-message-2863635905" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2863635905" class="dsq-comment-text">
	                                <p>DONT PANIC for old version<br>and see <a href="https://disq.us/url?url=https%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fsymfony-doctrine%2Ffixtures-alice%3A0thY8EHue9nH79w9JXTtkoeC-VE&amp;cuid=1175718" rel="nofollow noopener">https://knpuniversity.com/scre...</a><br>have fun!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2778732689" id="dsq-comment-2778732689">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2778732689">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-07-12</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2778732689" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2778732689" class="dsq-comment-text">
	                                <p>Hey Simon!</p><p>Can you explain this with a bit more detail? I'm sorry - I don't understand what all the entities and relationships look like :).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2773076210" id="dsq-comment-2773076210">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/simonbuerman/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/21262/2303/avatar92.jpg?1468014721">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2773076210">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-07-08</span>
	                            <span class="dsq-commenter-name">simon buerman</span>
	                        </div>

	                        <div id="dsq-comment-message-2773076210" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2773076210" class="dsq-comment-text">
	                                <p>how can i do to make a multiple relashionship ? i explain: i have a modele car table , a marque-car table and a driver table with two fields modele_car and marque. how can i do for that the modele_car  generated equal the good marque-car.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2758755515" id="dsq-comment-2758755515">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2758755515">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-30</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2758755515" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2758755515" class="dsq-comment-text">
	                                <p>Your "Edit" sounds right - iirc, the authors of the AliceBundle are working to address some "ordering" problems.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2758461565" id="dsq-comment-2758461565">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/razvandp/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/17005/2574/avatar92.jpg?1482510461">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2758461565">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-30</span>
	                            <span class="dsq-commenter-name">rddro</span>
	                        </div>

	                        <div id="dsq-comment-message-2758461565" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2758461565" class="dsq-comment-text">
	                                <p>Hello , yes it works with and without quotes but noticed something strange.<br> While running the fixtures multiple times, only the id of the place is regenerated everything else stays the same? <br>Only way to create something new after the first fixture load is to drop the database and recreate it.<br>Edit: Fixed , it seems it's running the fixtures in the order defined in the YML , so you'd have to put the relationship childrens before the parent.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2758357838" id="dsq-comment-2758357838">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2758357838">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-30</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-2758357838" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2758357838" class="dsq-comment-text">
	                                <p>Hey, <a data-dsq-mention="razvandp:disqus" href="https://disq.us/url?url=https%3A%2F%2Fdisqus.com%2Fby%2Frazvandp%2F%3A1eU2tkwin0AFgJzrl4jzI8-XjCs&amp;cuid=1175718" rel="nofollow noopener">rddro</a> !</p><p>`hautelook/alice-bundle` is a bundle for standalone `nelmio/alice` library, which ports this lib and another one (fzaninotto/Faker) for the Symfony applications. If you see its dependencies - you will find `nelmio/alice`. So if you're on a Symfony app, you probably want to use this bundle instead of standalone library.</p><p>And yes, it's still possible to use random relationships (using wildcard *) in new version 2.x. Do you have any errors using it? Try to wrap it with quotes like <code>place: '@place_*'</code>.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2758321535" id="dsq-comment-2758321535">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/razvandp/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/17005/2574/avatar92.jpg?1482510461">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2758321535">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-30</span>
	                            <span class="dsq-commenter-name">rddro</span>
	                        </div>

	                        <div id="dsq-comment-message-2758321535" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2758321535" class="dsq-comment-text">
	                                <p>hello ? I think I've been using a different thing ? Didn't have a problem with it yet , the nelmio/Alice one ?<br>Are they related ??<br>Another question I'm having , was looking through the documentation and not sure is it possible to select a random relationship like this ?</p><p>AppBundle\Entity\Conference:<br>    conference{1..5}:<br>        startat:  &lt;datetimethisdecade()&gt;<br>        comment: &lt;realtext(420)&gt;<br>        place: @place_*</p><p>AppBundle\Entity\Place:<br>    place_{1..10}<br>        name: &lt;city()&gt;<br>        address: &lt;streetaddress()&gt;<br>        website: &lt;domainname()&gt;</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2756824870" id="dsq-comment-2756824870">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/razvandp/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/17005/2574/avatar92.jpg?1482510461">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2756824870">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-29</span>
	                            <span class="dsq-commenter-name">rddro</span>
	                        </div>

	                        <div id="dsq-comment-message-2756824870" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2756824870" class="dsq-comment-text">
	                                <p>😂😂😂</p><p> $this-&gt;roles = array($roles);  Indeed this was the case all good. Don't remember why I changed this was testing something and forgot to change it back &gt;.&lt;<br>Thanks</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2756689222" id="dsq-comment-2756689222">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2756689222">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-29</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2756689222" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2756689222" class="dsq-comment-text">
	                                <p>Hmm - yea it definitely looks like we're ending up with an array of arrays - array(array('ROLE_ADMIN')) instead of just array('ROLE_ADMIN').</p><p>I would double-check your setRoles() method - make sure you're not accidentally wrapping the array in another array before setting it. For example, this would be a problem:</p><p></p><pre><code><br>public function setRoles($roles)<br>{<br>    $this-&gt;roles = array($roles); // this is bad, you'd end up with 2 arrays<br>}<br></code></pre><p></p><p>If this isn't the problem, then I would dump the $roles argument in setRoles() to see what is being passed to you:</p><p></p><pre><code><br>public function setRoles($roles)<br>{<br>    dump($roles);die;<br>}<br></code></pre><p></p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2756310540" id="dsq-comment-2756310540">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/razvandp/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/17005/2574/avatar92.jpg?1482510461">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2756310540">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-29</span>
	                            <span class="dsq-commenter-name">rddro</span>
	                        </div>

	                        <div id="dsq-comment-message-2756310540" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2756310540" class="dsq-comment-text">
	                                <p>Hello , seems it doesn't like it if i define it as an array not sure why. <br>If i put [] in the fixture for the role it will generate an array of array <br>a:1:{i:0;a:1:{i:0;s:10:"ROLE_ADMIN";}} instead of a:1:{i:0;s:10:"ROLE_ADMIN";}  <br>If I leave it as a string like roles : ROLE_ADMIN it will generate the good array.<br>Maybe it had something to do with the setRoles() annotation in the entity. Cheers</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2751704688" id="dsq-comment-2751704688">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2751704688">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-26</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2751704688" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2751704688" class="dsq-comment-text">
	                                <p>Hey Simon!</p><p>I think you'll need to write a custom formatter for this (like we built in this chapter), but I'm not exactly sure how - in the formatter - you would retrieve the current "index". In YAML, there is a function called &lt;current()&gt; that you can use to get the current row number (<a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fnelmio%2Falice%2Fblob%2F2.x%2Fdoc%2Fcomplete-reference.md%23fixture-ranges%29%3AyeKtMCv__3btQHkbiTEBJ9iouvU&amp;cuid=1175718" rel="nofollow noopener">https://github.com/nelmio/alic...</a>. But, you would need to be able to retrieve this from inside of your formatter, and that might be tricky.</p><p>Another possibility is this: *don't* use ranges: simply create 10 separate marque entries. I realize that you will probably now have a lot of duplication - each marquee may have a lot of similar data. But, if you use "inheritance" in Alice, you can remove this duplication: <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fnelmio%2Falice%2Fblob%2F2.x%2Fdoc%2Ffixtures-refactoring.md%23fixture-inheritance%3Aay0lthatJRs63gzxboHsIELz_gc&amp;cuid=1175718" rel="nofollow noopener">https://github.com/nelmio/alic...</a></p><p>I hope this helps!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2751697390" id="dsq-comment-2751697390">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2751697390">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-26</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2751697390" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2751697390" class="dsq-comment-text">
	                                <p>Yep, good call! There is a new version of the library - and it's great - but it's *totally* different now :). This tutorial covers 0.1.5.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2751412776" id="dsq-comment-2751412776">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/grzegorzszaliski/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10662/4460/avatar92.jpg?1466177876">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2751412776">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-26</span>
	                            <span class="dsq-commenter-name">Grzegorz Szaliński</span>
	                        </div>

	                        <div id="dsq-comment-message-2751412776" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2751412776" class="dsq-comment-text">
	                                <p>In case someone runs into the same problem...<br>Since I'm taking this screencast after 2 years from its release, I had a lot of dependencies errors while loading composer repositories with<br></p><pre>composer require hautelook/alice-bundle<br></pre><p></p><p>I updated it with the particular version that was valid at that time (0.1.5), and it worked:</p><p></p><pre>composer require hautelook/alice-bundle 0.1.5<br></pre>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2750549303" id="dsq-comment-2750549303">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/simonbuerman/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/21262/2303/avatar92.jpg?1468014721">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2750549303">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-25</span>
	                            <span class="dsq-commenter-name">simon buerman</span>
	                        </div>

	                        <div id="dsq-comment-message-2750549303" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2750549303" class="dsq-comment-text">
	                                <p>Hello i would like to know to link a array key with an entry. By examble when i write marque{1...10}. I would like that the first equal the first value of my array etc</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2737688073" id="dsq-comment-2737688073">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2737688073">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-18</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2737688073" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2737688073" class="dsq-comment-text">
	                                <p>Hey <a data-dsq-mention="razvandp:disqus" href="https://disqus.com/by/razvandp/" rel="nofollow noopener">rddro</a>!</p><p>Basically, you want to set an array onto roles (since roles is an array field). To do that in YAML, use this syntax:</p><p></p><pre><code><br>users_{1..10}:<br>    username: # ...<br>    # ...<br>    roles: [ROLE_USER, ROLE_ADMIN]<br><br>    # ... or, if you want something random, it should be something like this<br>    roles: &lt;randomelements(['role_user', 'role_adimn',="" 'role_client'])=""&gt;<br></code></pre><p></p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2736206516" id="dsq-comment-2736206516">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/razvandp/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/17005/2574/avatar92.jpg?1482510461">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2736206516">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-17</span>
	                            <span class="dsq-commenter-name">rddro</span>
	                        </div>

	                        <div id="dsq-comment-message-2736206516" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2736206516" class="dsq-comment-text">
	                                <p>Update : it would seem you can echo them like so <br>roles:</p><p></p><pre><code><br>$role= ['ROLE_ADMIN', 'ROLE_USER', 'ROLE_SUPER_ADMIN', 'ROLE_CLIENT'];<br>echo '['.$names[array_rand($role)].']';<br></code></pre><p></p><p>but I think there might be a better way</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2736189105" id="dsq-comment-2736189105">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/razvandp/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/17005/2574/avatar92.jpg?1482510461">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2736189105">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-17</span>
	                            <span class="dsq-commenter-name">rddro</span>
	                        </div>

	                        <div id="dsq-comment-message-2736189105" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2736189105" class="dsq-comment-text">
	                                <p>Hello o/ Anyone have some clue how to add the user role ? Tried to set it like roles: 'a:1:{i:0;s:10:"ROLE_ADMIN";}' but it didn't work properly.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2558353938" id="dsq-comment-2558353938">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2558353938">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-03-08</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2558353938" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2558353938" class="dsq-comment-text">
	                                <p>Hey Oscar!</p><p>The bundle looks in the DataFixtures/ORM directory of each of your bundles for fixture classes. If it doesn't find *any*, you'll get this error. So double check that you have the fixture class in DataFixtures/ORM. But also, this tutorial covers an older version of the bundle - so this could be from a difference with the new version! In the next few days, we'll have an updated section about using Alice for fixtures in our Doctrine tutorial: <a href="http://disq.us/url?url=http%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fsymfony-doctrine%3AygeH0dQRiTWf4g0miitC236449I&amp;cuid=1175718" rel="nofollow noopener">http://knpuniversity.com/scree...</a>.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2558349308" id="dsq-comment-2558349308">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2558349308">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-03-08</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2558349308" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2558349308" class="dsq-comment-text">
	                                <p>Ah, thank you! It'll be covered in the new Doctrine tutorial (near the end) which will start coming out this week: <a href="http://disq.us/url?url=http%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fsymfony-doctrine%3AygeH0dQRiTWf4g0miitC236449I&amp;cuid=1175718" rel="nofollow noopener">http://knpuniversity.com/scree...</a>. Here's a preview on the script (<a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fknpuniversity%2Fsymfony%2Fblob%2Fmaster%2Fknpu%2Fep3-doctrine%2Ffixtures-alice.md%29%3AcMwX8eMXp0GEYlYoFflf0xvV3SM&amp;cuid=1175718" rel="nofollow noopener">https://github.com/knpuniversi...</a> (if that helps) - the actual code blocks will be at the first link soon. Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2555637527" id="dsq-comment-2555637527">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/montwill/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/4475/4163/avatar92.jpg?1429465662">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2555637527">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-03-07</span>
	                            <span class="dsq-commenter-name">Paweł Montwiłł</span>
	                        </div>

	                        <div id="dsq-comment-message-2555637527" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2555637527" class="dsq-comment-text">
	                                <p>Thanks for a quick reply. Can you please drop a few lines how you use it?</p><p>BTW brilliant tutorials :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2555237097" id="dsq-comment-2555237097">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="fixtures">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2555237097">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-03-06</span>
	                            <span class="dsq-commenter-name">Oscar</span>
	                        </div>

	                        <div id="dsq-comment-message-2555237097" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2555237097" class="dsq-comment-text">
	                                <p>When i try to load the fixtures i get this error:</p><p>[InvalidArgumentException] <br>  Could not find any fixtures to load in: <br>  - /Applications/MAMP/htdocs/starwarsevent/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBund<br>.... and more</p><p>Help please</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2555031328" id="dsq-comment-2555031328">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2555031328">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-03-06</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2555031328" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2555031328" class="dsq-comment-text">
	                                <p>Yea, I've been thinking about this! I haven't used it much, but the new version of the bundle looks harder to use. Recently, I used Alice + DoctrineFixturesBundle directly (with no other bundle) and was very happy.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2553803995" id="dsq-comment-2553803995">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/montwill/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/4475/4163/avatar92.jpg?1429465662">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2553803995">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-03-06</span>
	                            <span class="dsq-commenter-name">Paweł Montwiłł</span>
	                        </div>

	                        <div id="dsq-comment-message-2553803995" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2553803995" class="dsq-comment-text">
	                                <p>Great tut!</p><p>It would be nice to update it with the latest changes to Alice (at least in the text below):<br>1. Using Hautelook\AliceBundle\Doctrine\DataFixtures\AbstractLoader instead of DataFixtureLoader<br>2. Launching update with hautelook_alice:doctrine:fixtures:load (or h:d:f:l) instead of doctrine:fixtures:load.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2523306990" id="dsq-comment-2523306990">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/rcasagraude/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10597/9602/avatar92.jpg?1399389217">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2523306990">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-19</span>
	                            <span class="dsq-commenter-name">Rénald Casagraude</span>
	                        </div>

	                        <div id="dsq-comment-message-2523306990" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2523306990" class="dsq-comment-text">
	                                <blockquote>Anyone know if there's a way to have alice 'override' a primary key?</blockquote><p></p><p>@weaverryan is right, Alice _simply_ hydrate entities, so the behaviour is implied by Doctrine. In fact, you probably have a primary key with an id generation handled by Doctrine himself (<a href="http://disq.us/url?url=http%3A%2F%2Fdoctrine-orm.readthedocs.org%2Fprojects%2Fdoctrine-orm%2Fen%2Flatest%2Freference%2Fbasic-mapping.html%23identifier-generation-strategies%29%3AmHiBEYENj43sQ3vsIrD7odK1Dpc&amp;cuid=1175718" rel="nofollow noopener">http://doctrine-orm.readthedoc...</a>. I also play with metadata when I need predictable IDs :<br></p><pre><code><br>// Don't forget to add a setter for ID on your entity (eg: Pokemon::setId($id))<br>$em = $this-&gt;getContainer()-&gt;get('manager.pokemon');<br>$metadata = $em-&gt;getClassMetaData('AppBundle\Entity\Pokemon');<br>$generatorType = $metadata-&gt;generatorType;<br>$metadata-&gt;setIdGeneratorType(\Doctrine\ORM\Mapping\ClassMetadata::GENERATOR_TYPE_NONE);<br><br>$fixtures = $this-&gt;loadFixtureFiles([<br>    '@AppBundle/Tests/DataFixtures/ORM/Pokemon.yml',<br>]);<br><br>$metadata-&gt;setIdGeneratorType($generatorType);<br></code></pre>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2516585125" id="dsq-comment-2516585125">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2516585125">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-16</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2516585125" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2516585125" class="dsq-comment-text">
	                                <p>Yea, I've never tried it. Strictly speaking, it's fine to do this directly in Doctrine, and my impression of Alice is mostly that it is simply calling the setters on your entity methods and then persisting them - in which case there would be no issue. But I'm guessing there's something complication I'm not seeing :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2510539275" id="dsq-comment-2510539275">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_S4PHUvMTGU/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2510539275">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-12</span>
	                            <span class="dsq-commenter-name">gstanto</span>
	                        </div>

	                        <div id="dsq-comment-message-2510539275" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2510539275" class="dsq-comment-text">
	                                <p>Anyone know if there's a way to have alice 'override' a primary key? I'm using these fixtures along with Behat BDD and it's a lot more convenient to say GET users/500 rather than have to deal with getting the id dynaimically each time. Doing it outside of Alice I am overwriting the metadata to do this.</p><p>I've tried to pass the @self to a custom formatter and set the metadata this way, but it doesn't seem to be working. Alice is real cool, so I'd def. like to use it everywhere I can. Thanks!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2387830556" id="dsq-comment-2387830556">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2387830556">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-12-01</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2387830556" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2387830556" class="dsq-comment-text">
	                                <p>Yo Nick! It should be something like this: <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fnelmio%2Falice%2Fissues%2F155%23issuecomment-62505726%3Ar9d52wKzvqZUwMB6kqkJBalL4UQ&amp;cuid=1175718" rel="nofollow noopener">https://github.com/nelmio/alic...</a>. Basically, if Post is ManyToMany with Tag, then you ultimately want to call something like Post-&gt;setTags($tags) where $tags is an array of objects. By setting the "tags" property to an array of references (like in the link), I think it should work. And even better, the commenter says that it will find adder methods, which is pretty cool.</p><p>Let me know if it works out :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2387582934" id="dsq-comment-2387582934">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_3VYC1HC5pE/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/9170/9133/avatar92.jpg?1423831500">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2387582934">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-12-01</span>
	                            <span class="dsq-commenter-name">Nick</span>
	                        </div>

	                        <div id="dsq-comment-message-2387582934" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2387582934" class="dsq-comment-text">
	                                <p>How to achieve fixtures for many to many tables where there is no entity?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2314836498" id="dsq-comment-2314836498">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2314836498">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-10-19</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2314836498" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2314836498" class="dsq-comment-text">
	                                <p>@Daniel - I see the issue: if you open up a clone of the standard edition that shows your code not working, then it might be faster for the maintainer to see what's going wrong. Also, be very detailed about any errors you may or may not be getting :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2312206732" id="dsq-comment-2312206732">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_XvTOyGsPIs/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/12512/3183/avatar92.jpg?1455500375">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2312206732">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-10-17</span>
	                            <span class="dsq-commenter-name">Daniel</span>
	                        </div>

	                        <div id="dsq-comment-message-2312206732" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2312206732" class="dsq-comment-text">
	                                <p>I haven't been able to execute it successfully yet. There is an issue open regarding this very same point. The maintainer pointed out the test case as reference <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fhautelook%2FAliceBundle%2Fblob%2Fmaster%2Ftests%2FDoctrine%2FCommand%2FCommandTestCase.php%3ACwGUOo1IH4eKKkgT9kTRw7r7h40&amp;cuid=1175718" rel="nofollow noopener">https://github.com/hautelook/A...</a> but is not working for me either</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2303293820" id="dsq-comment-2303293820">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_XvTOyGsPIs/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/12512/3183/avatar92.jpg?1455500375">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2303293820">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-10-12</span>
	                            <span class="dsq-commenter-name">Daniel</span>
	                        </div>

	                        <div id="dsq-comment-message-2303293820" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2303293820" class="dsq-comment-text">
	                                <p>Thanks a lot!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2303246208" id="dsq-comment-2303246208">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2303246208">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-10-12</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2303246208" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2303246208" class="dsq-comment-text">
	                                <p>Indeed it is! For loading in tests, you can run the commands directly (<a href="http://disq.us/url?url=http%3A%2F%2Fsymfony.com%2Fdoc%2Fcurrent%2Fcookbook%2Fconsole%2Fcommand_in_controller.html%29%3AR54LvnPoIts_FyiOyQsgatIZsbs&amp;cuid=1175718" rel="nofollow noopener">http://symfony.com/doc/current...</a>, though I usually try to find the "right" way to call it, which basically means doing the same thing as the command: <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fhautelook%2FAliceBundle%2Fblob%2Fmaster%2Fsrc%2FDoctrine%2FCommand%2FLoadDataFixturesCommand.php%23L195%3AUHmaty6tVxNby0ZoF35PCmvJo5U&amp;cuid=1175718" rel="nofollow noopener">https://github.com/hautelook/A...</a>. That may or may not be tricky - usually I'm hoping to be able to fetch just one service out and call one method on it - this looks a bit more involved (but it may not be once you look into it).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2299446372" id="dsq-comment-2299446372">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_XvTOyGsPIs/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/12512/3183/avatar92.jpg?1455500375">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2299446372">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-10-10</span>
	                            <span class="dsq-commenter-name">Daniel</span>
	                        </div>

	                        <div id="dsq-comment-message-2299446372" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2299446372" class="dsq-comment-text">
	                                <p>Yeah, it is more in line with symfony's way of doing things. The processors need to be defined as services with arguments and stuff. One question, how would I load alice's fixtures on my tests? I tried this $fixtures = $container-&gt;get('hautelook_alice.doctrine.command.load_command'); but didn't work. Thanks</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2298487334" id="dsq-comment-2298487334">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2298487334">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-10-09</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2298487334" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2298487334" class="dsq-comment-text">
	                                <p>It looks like the bundle got a nice new facelift - I'll take a look at what's been updated :).</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2295635686" id="dsq-comment-2295635686">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_XvTOyGsPIs/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/12512/3183/avatar92.jpg?1455500375">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2295635686">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-10-08</span>
	                            <span class="dsq-commenter-name">Daniel</span>
	                        </div>

	                        <div id="dsq-comment-message-2295635686" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2295635686" class="dsq-comment-text">
	                                <p>Found the solution. I was previously using regular Doctrine Fixtures, so having a look at this excerpt <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fhautelook%2FAliceBundle%2Fblob%2Fmaster%2Fsrc%2FResources%2Fdoc%2Fdoctrine-fixtures-bundle.md%3A0XQh9vHfzwrlGSTYFaD7fc09BPE&amp;cuid=1175718" rel="nofollow noopener">https://github.com/hautelook/A...</a> found that running  php app/console h:d:f:l or hautelook_alice:doctrine:fixtures:load will load only alice fixtures. The confusing part is that when running the regular doctrine:fixtures:load I see that the alice fixtures are alse executed. Thanks any way</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2295559305" id="dsq-comment-2295559305">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_XvTOyGsPIs/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/12512/3183/avatar92.jpg?1455500375">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2295559305">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-10-07</span>
	                            <span class="dsq-commenter-name">Daniel</span>
	                        </div>

	                        <div id="dsq-comment-message-2295559305" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2295559305" class="dsq-comment-text">
	                                <p>Hello Ryan! I just installed the bundle latest version and found out the class you extend doesn't exist any longer, nonetheless in the documentation they extend the class AbstractLoader. I ran the usual command fixutures:load and my class is there but no data added to the data base. How can I debug a command? Because I thing the problem is the route where I placed the yaml file. Tried var_dump to no avail. Thanks</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2220604436" id="dsq-comment-2220604436">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2220604436">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-08-27</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2220604436" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2220604436" class="dsq-comment-text">
	                                <p>:thumbsup: nice work!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2219021770" id="dsq-comment-2219021770">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/aguidis/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/4655/2894/avatar92.jpg?1455197367">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2219021770">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-08-26</span>
	                            <span class="dsq-commenter-name">aguidis</span>
	                        </div>

	                        <div id="dsq-comment-message-2219021770" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2219021770" class="dsq-comment-text">
	                                <p>Thanks a lot Ryan you were right. In my last field (a string one) I used a function that returns an array (paragraphs()) Shame on me !</p><p>I'll no longer make this error ^^ Thank you for your advices</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2218878165" id="dsq-comment-2218878165">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2218878165">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-08-26</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2218878165" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2218878165" class="dsq-comment-text">
	                                <p>Hey there!</p><p>Ok coo. So, I *probably* know what your issue is :). Somehow, you probably have some Alice code that is setting an array of data on a field that is mapped as a string on the database. I could be wrong, but Doctrine is probably trying to convert an array (that was set on an entity by Alice) into a string while saving. I would remove the alice lines one-by-one until this error goes away (like you were doing). When you finally don't have an error - or have the above error about a null constraint - it means the saving is happening, and probably the last line you removed is the problem. You could also open the core Doctrine code where the error is being thrown, and do a little var_dump() of the value right before the error. Then you can see what array value is trying to be turned into a string, which might help debugging.</p><p>I hope that helps!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2218425626" id="dsq-comment-2218425626">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/aguidis/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/4655/2894/avatar92.jpg?1455197367">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2218425626">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-08-26</span>
	                            <span class="dsq-commenter-name">aguidis</span>
	                        </div>

	                        <div id="dsq-comment-message-2218425626" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2218425626" class="dsq-comment-text">
	                                <p>Hello, thanks for this tutorial I didn't know this cool library !</p><p>I tried to use it in my project but I always have this error in the console :</p><p>[Symfony\Component\Debug\Exception\ContextErrorException]</p><p>  Notice: Array to string conversion</p><p>I don't have other information for debugging. I tried to remove some fields in my fixture yml file and when I run the doctrine:fixtures:load I have a SQL error like "SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'registration_details' cannot be null". It means that Alice is trying to insert data right ?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2216380203" id="dsq-comment-2216380203">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2216380203">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-08-25</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2216380203" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2216380203" class="dsq-comment-text">
	                                <p>Great solution! Nothing is built in to do this, so I think you solved this perfectly!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2213482728" id="dsq-comment-2213482728">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/toioski/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/17138/1074/avatar92.jpg?1478345354">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2213482728">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-08-25</span>
	                            <span class="dsq-commenter-name">toioski</span>
	                        </div>

	                        <div id="dsq-comment-message-2213482728" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2213482728" class="dsq-comment-text">
	                                <p>Hi! Great tutorial!</p><p>I have only one question: is there any way to make a relation with data which already exist in the database?</p><p>E.g. <br>I want to generate fixtures for the entity Conversation which as 3 attributes:<br>- name<br>- creationDate<br>- creator -&gt; this is ManyToOne with the entity User</p><p>Is it possible to say to the 'creator' attribute to take a random User from the database and not from another .yml file?</p><p>UPDATE:<br>I solved creating a custom function for Alice (like the one created in the screencast for super heroes names) which return a casual user id from the ones present in the database.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1815260029" id="dsq-comment-1815260029">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1815260029">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-24</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1815260029" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1815260029" class="dsq-comment-text">
	                                <p>Hi Sergio!</p><p>Good question! If you want, you can add it to the `require-dev` part of your `composer.json`: <a href="https://disq.us/url?url=https%3A%2F%2Fgetcomposer.org%2Fdoc%2F04-schema.md%23require-dev%3Aqusd-XWN2XEquE3C4T-jJxiYbys&amp;cuid=1175718" rel="nofollow noopener">https://getcomposer.org/doc/04...</a>, though at best, that simply means that it won't be downloaded to your disk in an environment, and disk space is cheap.</p><p>What you *really* want is to add it to AppKernel in the spot where it's only loaded in the `dev` environment: <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fsymfony%2Fsymfony-standard%2Fblob%2F2.7%2Fapp%2FAppKernel.php%23L22%3AdnS4ekCzNo_UNOfPqoNHGQ8BCVQ&amp;cuid=1175718" rel="nofollow noopener">https://github.com/symfony/sym...</a>. There's no downside to this, and it'll give you a very minor performance boost in the `prod` environment.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1813701590" id="dsq-comment-1813701590">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_d1bpMeJBQg/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1813701590">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-23</span>
	                            <span class="dsq-commenter-name">Sergio</span>
	                        </div>

	                        <div id="dsq-comment-message-1813701590" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1813701590" class="dsq-comment-text">
	                                <p>Hello, great tutorial!</p><p>Is there any way to put this dependency (hautelook/alice-bundle) in my composer.json project file and only load it for development environment ?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1776538276" id="dsq-comment-1776538276">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1776538276">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-07</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1776538276" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1776538276" class="dsq-comment-text">
	                                <p>It's a poorly-publicized fact - I hope to make that more obvious soon :). Thanks again!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1776502790" id="dsq-comment-1776502790">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1776502790">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-07</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-1776502790" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1776502790" class="dsq-comment-text">
	                                <p>Very quickly! :)<br>I didn't know that code was available on GitHub, it would be better to create a pull request.<br>Thanks for quick fix</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1776460186" id="dsq-comment-1776460186">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1776460186">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-07</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1776460186" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1776460186" class="dsq-comment-text">
	                                <p>You're right - good catch! I just updated it :) <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fknpuniversity%2Fsymfony-alice-fixtures%2Fcommit%2Fe4dd9878f51bac8c1bf37826ad9fc91fce9eb14b%3AQdZPYm5A6AkcpCoIiHN1LBqBfzk&amp;cuid=1175718" rel="nofollow noopener">https://github.com/knpuniversi...</a></p><p>Tanks!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1776264681" id="dsq-comment-1776264681">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1776264681">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-07</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-1776264681" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1776264681" class="dsq-comment-text">
	                                <p>Hi, thanks for this screencast! <br>I also found typo in the text. I think you wanted to write "characters.yml" instead of "test.yml" in second code block (after sentence "Let’s call ours characters.yml and then go ahead and create that file:").</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1705865617" id="dsq-comment-1705865617">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_3VYC1HC5pE/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/9170/9133/avatar92.jpg?1423831500">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1705865617">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-11-21</span>
	                            <span class="dsq-commenter-name">Nick</span>
	                        </div>

	                        <div id="dsq-comment-message-1705865617" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1705865617" class="dsq-comment-text">
	                                <p>Thanks for reply! Yes VichUploaderBundle is very good for Uploads. Also that's exactly what I mean!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1705807631" id="dsq-comment-1705807631">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1705807631">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-11-21</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1705807631" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1705807631" class="dsq-comment-text">
	                                <p>Hey Nick!</p><p>I *think* I know what you're asking, and I'm planning on covering it in one upcoming screencast. If I have a field that normally holds a value like "foo.png", and that's populated by uploading a file, then I would use processors: <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fnelmio%2Falice%23processors%3AvRPpqvqkisDIIEAs6B18Mp7jO-0&amp;cuid=1175718" rel="nofollow noopener">https://github.com/nelmio/alic...</a> to look for that file in some pre-configured directory and move it into some "uploads" directory (wherever your files normally upload to - you could even move to S3).</p><p>As far as the URL to the image, now that you have "foo.png" stored in your database and the file actually lives in the correct upload spot, it's up to you in your template to link to it correctly. Btw, I recommend using VichUploaderBundle to handle uploads and link to them.</p><p>Let me know if I hit on your question!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1705767539" id="dsq-comment-1705767539">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_3VYC1HC5pE/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/9170/9133/avatar92.jpg?1423831500">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1705767539">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-11-21</span>
	                            <span class="dsq-commenter-name">Nick</span>
	                        </div>

	                        <div id="dsq-comment-message-1705767539" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1705767539" class="dsq-comment-text">
	                                <p>Is there a way to add image url(s) as well via this bundle? Maybe a field in db points to an image URL.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1676010215" id="dsq-comment-1676010215">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/larrygarfield/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/5021/7498/avatar92.jpg?1482249347">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1676010215">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-11-04</span>
	                            <span class="dsq-commenter-name">Larry Garfield</span>
	                        </div>

	                        <div id="dsq-comment-message-1676010215" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1676010215" class="dsq-comment-text">
	                                <p>11:40... If you want to import your fixtures from scratch, you must first create the test universe.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1663737129" id="dsq-comment-1663737129">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_dQnfzmxvu5/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/12813/4013/avatar92.jpg?1432974646">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1663737129">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2014-10-31</span>
	                            <span class="dsq-commenter-name">isomoar</span>
	                        </div>

	                        <div id="dsq-comment-message-1663737129" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1663737129" class="dsq-comment-text">
	                                <p>Awesome!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_fixtures';var disqus_url = 'https://knpuniversity.com/screencast/alice-fixtures/fixtures';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="processors#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/alice-fixtures/fixtures" addthis:title="Making Fixtures Really Awesome with Alice">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"alice-fixtures","courseIsOwned":false,"chapter":"Making Fixtures Awesome with Alice","chapterNumber":1,"chapterIsFree":true}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Making Fixtures Really Awesome with Alice';
        Core.courseId = 52
        Core.courseIsOwned = false;
        Core.courseSlug = 'alice-fixtures';
                    Core.chapterTitle = 'Making Fixtures Awesome with Alice';
            Core.chapterNumber = 1;
            Core.chapterIsFree = true;
            Core.chapterSlug = 'fixtures';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":908,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
