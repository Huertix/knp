<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Go Pro with Doctrine Queries Video Tutorial Screencast | KnpUniversity</title>

            <link href="../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    
                    <script src="../bundles/fosjsrouting/js/router.js"></script>

        <script src="../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../js/routing?callback=fos.Router.setData"></script>
            
    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="PHP and Symfony Tutorial Screencasts - with free videos, scripts, and code downloads!">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Go Pro with Doctrine Queries Video Tutorial Screencast">
<meta property="og:description" content="You already know how to query with SQL, so learning how to do complex
queries with Doctrine should not give you a headache. In this series,
we&#039;ll learn the language Doctrine speaks (DQL), as well as the query
builder object, how to use complex query features and even how to run
good ol&#039; fashioned raw SQL queries with Doctrine">
<meta property="og:url" content="http://knpuniversity.com/screencast/doctrine-queries">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/doctrine-queries:c4c30be78317e26076b8797261ff71d9c4e99033/doctrine-queries.png">

<meta name="twitter:card" content="summary">


            </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin ">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="doctrine-queries/resume#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../tracks.1">Tracks</a></li>
          <li><a href="../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../pricing.1">Pricing</a></li>
        <li><a href="../training">Training</a></li>
                <li class="visible-xs"><a href="../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../logout">Sign Out</a></li>

            <li><a href="../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    





<div class="tut-hero" style="background-color: #4A90E2;">
<div class="arrow-right"  style="border-left-color: #4F7A9A;"></div>
    <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-8">
                <h1 class="knp-color-white tuts-header-font tuts-header-font-tutorial-overview">Go Pro with Doctrine Queries</h1>
            </div>
            <div class="col-xs-12 col-sm-6 col-md-4">
                <section class="extra-margin-buttons" id="course-subscription-wrapper">
                                                                                                
                        <a href="doctrine-queries/dql#play" class="btn btn-success">
                            <i class="fa fa-play-circle-o"></i>
                            Play Tutorial
                        </a>
                    
                                            <a href="../pricing/doctrine-queries"  class="btn btn-success">
                            <i class="fa fa-shopping-cart"></i> Add to Cart
                        </a>
                                    </section>
                <section class="tuts-sub-header tuts-sub-header-tutorial-overview">
                                                        </section>
            </div>
        </div>
    </div>
</div>

    <div class="container">
        <div class="row">
                        <div class="col-xs-12 col-sm-6">
                <h3 class="course-header-extra-margin account-header course-overview-header">Chapters</h3>

                                
                <div class="tut-overview-list">
                                                                    <h4>
                            You're <span class="course-overview-progress">0%</span> through this course
                                                            - get started!
                                                    </h4>
                            <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>

                    
                    
                        
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="doctrine-queries/dql" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Doctrine DQL
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:58</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="doctrine-queries/query-builder" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        The QueryBuilder
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:02</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="doctrine-queries/and-where-or-where" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        And WHERE Or WHERE
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:27</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="doctrine-queries/joins" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        JOINs!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:27</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="doctrine-queries/joins-reduce-queries" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Joins and addSelect Reduce Queries
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:03</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="doctrine-queries/select-sum" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        SELECT the SUM (or COUNT)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:51</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="doctrine-queries/select-specific-fields" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Selecting Specific Fields
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:04</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="doctrine-queries/raw-sql-queries" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Raw SQL Queries
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:29</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="doctrine-queries/reusing-queries-query-builder" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Reusing Queries with the Query Builder
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:07</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="doctrine-queries/filters" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        Filters
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 10:29</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
                </div>
            </div>
            
            <div class="col-xs-12 col-sm-6">
                                                    <h3 class="course-header-extra-margin account-header course-overview-header">What you'll be learning</h3>
                
                

                <div class="course-overview summary"><p>You already know how to query with SQL, so learning how to do complex
queries with Doctrine should <em>not</em> give you a headache. In this series,
we'll learn the language Doctrine speaks (DQL), as well as the query
builder object, how to use complex query features and even how to run
good ol' fashioned raw SQL queries with Doctrine. Because hey, sometimes
simplicity rules :).</p>
</div>

                                    <div class="related-courses">
                        <h3 class="course-header-extra-margin account-header">
                            Go through <em>all</em> the courses in
                            <a href="../tracks/extras#tools-tools-tools">Dev Tools: Tools, tools, tools!</a>!
                        </h3>
                        <ol>
                                                            <li>
                                    <a href="phpstorm/resume">
                                        <img class="img-circle related-courses-img" src="../imagine/course_tiles_outbound/uploads/screencast/phpstorm:9eef33d4ae5f80460f03089b83f8093d80623d05/phpstorm.png">Lean and Mean Dev with PhpStorm (for Symfony)
                                    </a>
                                </li>
                                                            <li>
                                    <a href="behat/resume">
                                        <img class="img-circle related-courses-img" src="../imagine/course_tiles_outbound/uploads/screencast/behat:caf59f3b22c82c95d3caee5bb0d20cbe4d123cf7/behatv3.png">BDD, Behat, Mink and other Wonderful Things
                                    </a>
                                </li>
                                                            <li>
                                    <a href="twig/resume">
                                        <img class="img-circle related-courses-img" src="../imagine/course_tiles_outbound/uploads/screencast/twig:d2c83b3ff48af299f6e74c91da1d622a9e6d8a62/twig.png">Twig Templating for Friendly Frontend Devs
                                    </a>
                                </li>
                                                            <li>
                                    <a href="alice-fixtures/resume">
                                        <img class="img-circle related-courses-img" src="../imagine/course_tiles_outbound/uploads/screencast/alice-fixtures:e5e27ed02c74d87c0bb0e597d959a53fc99617a9/sf-fixtures-alice.png">Making Fixtures Really Awesome with Alice
                                    </a>
                                </li>
                                                            <li>
                                    <a href="doctrine-queries/resume">
                                        <img class="img-circle related-courses-img" src="../imagine/course_tiles_outbound/uploads/screencast/doctrine-queries:c4c30be78317e26076b8797261ff71d9c4e99033/doctrine-queries.png">Go Pro with Doctrine Queries
                                    </a>
                                </li>
                                                    </ol>
                    </div>
                
                <div>
                    <hr>
                    <h3>Your Guides</h3>
                                            <a href="https://github.com/weaverryan" target="_blank">
                            <img title="Ryan Weaver" data-placement="bottom" class="img-circle contrib-img js-tooltip" src="https://avatars.githubusercontent.com/u/121003?v=3&amp;s=200" alt="Ryan Weaver">
                        </a>
                                            <a href="https://github.com/Leannapelham" target="_blank">
                            <img title="Leanna Pelham" data-placement="bottom" class="img-circle contrib-img js-tooltip" src="https://avatars.githubusercontent.com/u/777948?v=3&amp;s=200" alt="Leanna Pelham">
                        </a>
                                    </div>
            </div>
        </div>

        <div class="row">
            <div class="col-xs-12">
                <h3>Questions? Conversation?</h3>
                                                            <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2838694581" id="dsq-comment-2838694581">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2838694581">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-15</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2838694581" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2838694581" class="dsq-comment-text">
	                                <p>Hi Henri!</p><p>Hmm, that's interesting! So, it appears that your query is retrieving a collection of User object, but you expect Post object (looking at the code, I also expect Post objects!). I'm not sure what the problem is, but I would remove different parts of your code until you get the desired result:</p><p>A) Remove the -&gt;select() and the addSelect() to see if this changes things. <br>B) I'm not sure what the $this-&gt;addUserJoinAndSelect() is doing (I don't see that code here), so it could be part of the problem.</p><p>Let me know what you find out! Mostly, it looks like you're doing just fine - there's something in there that's making "User" the main thing we're querying for, instead of Post... it's odd.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2838280258" id="dsq-comment-2838280258">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/henritompodung/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2838280258">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-15</span>
	                            <span class="dsq-commenter-name">Henri Tompodung</span>
	                        </div>

	                        <div id="dsq-comment-message-2838280258" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2838280258" class="dsq-comment-text">
	                                <p>I have 2 entities (Post &amp; User) without relation association, but i create left join relation with query builder.</p><p>When i'm retrieving data in twig, i get an error like this:</p><p>Neither the property "title" nor one of the methods "title()", "gettitle()"/"istitle()" or "__call()" exist and have public access in class "ModelBundle\Entity\User" in FrontBundle:Blog:index.html.twig at line 42</p><p>Repository:<br>public function findPostJoin()<br>{<br>      $qb = $this-&gt;createQueryBuilder('p');<br>      $qb-&gt;select('p', 'u')<br>            -&gt;leftJoin('ModelBundle:User', 'u', 'WITH', '<a href="http://disq.us/url?url=http%3A%2F%2Fu.id%3AN7-Tbci58lm5Y94A6lItiAkpNXE&amp;cuid=1175718" rel="nofollow noopener">u.id</a> = p.user')<br>            -&gt;addSelect('u') <br>            -&gt;addOrderBy('<a href="http://disq.us/url?url=http%3A%2F%2Fp.id%3AHtSotN6W0iVp2ONz1XPSVpoyswM&amp;cuid=1175718" rel="nofollow noopener">p.id</a>', 'DESC');<br>      $this-&gt;addUserJoinAndSelect($qb);<br>      $query = $qb-&gt;getQuery();<br>      return $query-&gt;getResult();<br>}</p><p>Controller:<br>public function indexAction(Request $request)<br>{<br>     $em       = $this-&gt;getDoctrine()-&gt;getManager();<br>     $post     = $em-&gt;getRepository('ModelBundle:Post')-&gt;findPostJoin();<br>     $category = $em-&gt;getRepository('ModelBundle:Postcategory')-&gt;findBy(['parent' =&gt; null]);</p><p>     $paginator  = $this-&gt;get('knp_paginator');<br>     $pagination = $paginator-&gt;paginate(<br>         $post, /* query NOT result */<br>         $request-&gt;query-&gt;getInt('page', 1), /*page number*/<br>         10/*limit per page*/<br>     );</p><p>     return $this-&gt;render('FrontBundle:Blog:index.html.twig', [<br>         'pagination' =&gt; $pagination,<br>         'categories' =&gt; $category,<br>     ]);<br> }</p><p>Twig:<br>{% for article in pagination %}<br>       {{ article.title }}<br>{% endfor %}</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2818783741" id="dsq-comment-2818783741">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2818783741">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-03</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-2818783741" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2818783741" class="dsq-comment-text">
	                                <p>Haha, yeah, ORM do these things for you! :)</p><p>P.S. You better avoid using "$this-&gt;_em" internal property. It'll help you to find a right place (right repository) for the query and a bit simplified query builder. So the next code:<br></p><pre><code><br>$qbt = $this-&gt;createQueryBuilder('conference');<br>    -&gt;addSelect('place')<br>    -&gt;addSelect('city')<br>    -&gt;innerJoin('conference.place', 'place')<br>    -&gt;innerJoin('place.city', 'city')<br>;<br></code></pre><p></p><p>should be in the "ConferenceRepository". Actually, "$this-&gt;createQueryBuilder('conference')" do `select()` and `from()` method calls for you ;)</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2818748928" id="dsq-comment-2818748928">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/caimastraea/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/5945/6693/avatar92.jpg?1404899644">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2818748928">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-03</span>
	                            <span class="dsq-commenter-name">Caim Astraea</span>
	                        </div>

	                        <div id="dsq-comment-message-2818748928" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2818748928" class="dsq-comment-text">
	                                <p>Ohh &gt;.&lt; Thank ! Can't believe it was so simple when looking through the perspective of entity objects. <br>Think was doing the exact opposite before.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2818472896" id="dsq-comment-2818472896">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2818472896">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-03</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-2818472896" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2818472896" class="dsq-comment-text">
	                                <p>Hey Caim,</p><p>You probably should use next query, because as you pointed: city is a property of place, which (place) is a property of conference. So use this chain in your query:<br></p><pre><code><br>$qbt = $this-&gt;_em-&gt;createQueryBuilder();<br>$qbt<br>    -&gt;select('conference')<br>    -&gt;addSelect('place')<br>    -&gt;addSelect('city')<br>    -&gt;from('AppBundle:Conference', 'conference')<br>    -&gt;innerJoin('conference.place', 'place')<br>    -&gt;innerJoin('place.city', 'city')<br>;<br></code></pre><p></p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2818423261" id="dsq-comment-2818423261">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/caimastraea/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/5945/6693/avatar92.jpg?1404899644">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2818423261">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-03</span>
	                            <span class="dsq-commenter-name">Caim Astraea</span>
	                        </div>

	                        <div id="dsq-comment-message-2818423261" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2818423261" class="dsq-comment-text">
	                                <p>Hello o/</p><p>Having a really hard time thinking of this dql query. I posted on SO also [ <a href="http://disq.us/url?url=http%3A%2F%2Fstackoverflow.com%2Fquestions%2F38722752%2Fdoctrine-left-join-on-unrelated-entity%3ACgpmiR7j3-lxFqdCYt7hyVgfDgg&amp;cuid=1175718" rel="nofollow noopener">http://stackoverflow.com/quest...</a> ]</p><p>Basically I'm looking for a way to return the results of the leftJoin with an (un-associated ?) entity in the same result set.</p><p>Have a conference entity , a place entity , a city entity.</p><p>place is a property of conference<br>    /**<br>     * @var \AppBundle\Entity\Place<br>     *<br>     * @ORM\ManyToOne(targetEntity="AppBundle\Entity\Place")<br>     * @ORM\JoinColumns({<br>     *   @ORM\JoinColumn(name="place_id", referencedColumnName="id", onDelete="SET NULL")<br>     * })<br>     */<br>    private $place;</p><p>and city is a property of place<br>   /**<br>     * @var \AppBundle\Entity\City<br>     *<br>     * @ORM\ManyToOne(targetEntity="AppBundle\Entity\City")<br>     * @ORM\JoinColumns({<br>     *   @ORM\JoinColumn(name="city_id", referencedColumnName="id")<br>     * })<br>     */<br>    private $city;</p><p>I'm trying to retrieve the city information also in the conferences query but not even sure if it's possible to do so with dql?</p><p>This is what I've tried</p><p>       $qbt = $this-&gt;_em-&gt;createQueryBuilder();<br>        $qbt-&gt;select('conference','diffusion','speaker','place','confcity')<br>        -&gt;from('AppBundle:Conference', 'conference')<br>        -&gt;leftJoin('conference.diffusion', 'diffusion')<br>        -&gt;leftJoin('conference.speaker','speaker')<br>        -&gt;leftJoin('<a href="http://disq.us/url?url=http%3A%2F%2Fconference.place%3A4tuhWsGaUBXB4qd2BT2Tql5a9mY&amp;cuid=1175718" rel="nofollow noopener">conference.place</a>','place')<br>        -&gt;leftJoin('AppBundle:City','confcity','WITH', '<a href="http://disq.us/url?url=http%3A%2F%2Fconfcity.id%3AxT1vlrnv0i6uMB-jBSYydfnBaqg&amp;cuid=1175718" rel="nofollow noopener">confcity.id</a> = <a href="http://disq.us/url?url=http%3A%2F%2Fplace.city%3AHcGYmWzr2u7pLcnUZa9g7sXMibE&amp;cuid=1175718" rel="nofollow noopener">place.city</a>' );</p><p>        return $qbt<br>            -&gt;getQuery()<br>            -&gt;setHint(\Doctrine\ORM\Query::HINT_INCLUDE_META_COLUMNS, true)<br>            -&gt;useQueryCache(true)<br>            -&gt;useResultCache(true,3600)<br>            -&gt;getArrayResult();</p><p>However the confcity info is retrieved in another array instead of the main one. I'm thinking this is because there is no direct association between the conference and city. <br>In the meantime I've rewritten the query in raw SQL and it looks something like this but would really love to learn how to do this in DQL :(</p><p>        $conn = $this-&gt;getEntityManager()-&gt;getConnection();<br>        $sql = 'SELECT<br>  <a href="http://disq.us/url?url=http%3A%2F%2Fc0_.id%3AHfb3VE8Wt32AywFu1I8S-YfxRB8&amp;cuid=1175718" rel="nofollow noopener">c0_.id</a> AS id,<br>  c0_.startAt AS startat,<br>  c0_.comment AS comment,<br>  <a href="http://disq.us/url?url=http%3A%2F%2Fd1_.id%3AlPtK9dmCQwQYoKBgAmJFROrzEYk&amp;cuid=1175718" rel="nofollow noopener">d1_.id</a> AS diffusion_id,<br>  d1_.hour AS diffusion_hour,<br>  <a href="http://disq.us/url?url=http%3A%2F%2Fs2_.id%3AIDO4Qda_nA2XiwCSmdZp6HEEYmM&amp;cuid=1175718" rel="nofollow noopener">s2_.id</a> AS speaker_id,<br>  c0_.place_id AS place_id,<br>  c0_.sponsor_id AS sponsor_id,<br>  c0_.tour_id AS tour_id_8,<br>  d1_.movie_id AS diffusion_movie_id,<br>  s2_.contact_id AS speaker_contact_id,<br>  <a href="http://disq.us/url?url=http%3A%2F%2Fc6_.name%3A3IYDNLX_LiAD8WnfjQJXiAjHaHk&amp;cuid=1175718" rel="nofollow noopener">c6_.name</a> AS ville_name,<br>  c6_.postal AS ville_post,<br>  c6_.department as ville_depart<br>FROM<br>  conference c0_<br>  LEFT JOIN conference_diffusion c3_ ON <a href="http://disq.us/url?url=http%3A%2F%2Fc0_.id%3AHfb3VE8Wt32AywFu1I8S-YfxRB8&amp;cuid=1175718" rel="nofollow noopener">c0_.id</a> = c3_.conference_id<br>  LEFT JOIN diffusion d1_ ON <a href="http://disq.us/url?url=http%3A%2F%2Fd1_.id%3AlPtK9dmCQwQYoKBgAmJFROrzEYk&amp;cuid=1175718" rel="nofollow noopener">d1_.id</a> = c3_.diffusion_id<br>  LEFT JOIN conference_speaker c4_ ON <a href="http://disq.us/url?url=http%3A%2F%2Fc0_.id%3AHfb3VE8Wt32AywFu1I8S-YfxRB8&amp;cuid=1175718" rel="nofollow noopener">c0_.id</a> = c4_.conference_id<br>  LEFT JOIN speaker s2_ ON <a href="http://disq.us/url?url=http%3A%2F%2Fs2_.id%3AIDO4Qda_nA2XiwCSmdZp6HEEYmM&amp;cuid=1175718" rel="nofollow noopener">s2_.id</a> = c4_.speaker_id<br>  LEFT JOIN place p5_ ON c0_.place_id = <a href="http://disq.us/url?url=http%3A%2F%2Fp5_.id%3AOe5uIAR7xI6IwsD2r6ZFT0zSbeo&amp;cuid=1175718" rel="nofollow noopener">p5_.id</a><br>  LEFT JOIN city c6_ ON (<a href="http://disq.us/url?url=http%3A%2F%2Fc6_.id%3AxvSC-ymzye4gNJgjcpm57_QMy84&amp;cuid=1175718" rel="nofollow noopener">c6_.id</a> = p5_.city_id)';</p><p>        $stmt = $conn-&gt;prepare($sql);</p><p>        $stmt-&gt;execute();</p><p>        return $stmt-&gt;fetchAll();</p><p>I'm guessing using QueryCache , ResultCache on this would be out of the question but maybe it's possible by createNativeQuery()</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2815990564" id="dsq-comment-2815990564">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2815990564">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-08-01</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2815990564" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2815990564" class="dsq-comment-text">
	                                <p>Awesome, glad it helped! And yep, getTags()-&gt;add() will also work - basically the same as the setTags() method :).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2813577357" id="dsq-comment-2813577357">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/0x90/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/3417/4495/avatar92.jpg?1430963808">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2813577357">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-07-31</span>
	                            <span class="dsq-commenter-name">0x90</span>
	                        </div>

	                        <div id="dsq-comment-message-2813577357" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2813577357" class="dsq-comment-text">
	                                <p>Thanks. :) Yes, that screencast did help. Maybe pretty please update it for Symfony3? In the 2.4 screencast, it was done with getTags()-&gt;add(...) and that worked for what I was doing. Off to break ... I mean, write more code.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2813303014" id="dsq-comment-2813303014">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2813303014">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-07-31</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2813303014" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2813303014" class="dsq-comment-text">
	                                <p>Let me know if that helps :). ManyToMany relationships are both simple, and weird all at the same time. Mostly, it's all about setting the collection onto the collection field. For example, suppose you have a Product and Tag entity, and they are connected via a ManyToMany relationship. To add tags to a product, you would:</p><p></p><pre><code><br>$product = // somehow retrieve 1 product, e.g. query for it<br><br>$tag1 = new Tag('cool stuff');<br>$tag2 = new Tag('other stuff');<br><br>$product-&gt;setTags(array($tag1, $tag2));<br><br>$em = $this-&gt;getDoctrine()-&gt;getManager();<br>$em-&gt;persist($product);<br>$em-&gt;persist($tag1);<br>$em-&gt;persist($tag2);<br>$em-&gt;flush();<br></code></pre><p></p><p>Here, I'm creating 2 brand new Tags and saving those, but you could also query for 2 existing tags. But the point is that you actually pass an array of Tag objects to your Product entity. Also, one additional complication is with the owning versus inverse sides of a relationship (we talk about that in the Symfony2 and Symfony3 tutorials). Basically, in this example, you need the Product.tags property to be the "owning" side of the relationship for this to work. If Tag.products were the owning side, then you would need to set it instead (e.g. $tag-&gt;setProducts(...)).</p><p>I hope this helps! Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2811209414" id="dsq-comment-2811209414">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/0x90/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/3417/4495/avatar92.jpg?1430963808">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2811209414">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-07-30</span>
	                            <span class="dsq-commenter-name">0x90</span>
	                        </div>

	                        <div id="dsq-comment-message-2811209414" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2811209414" class="dsq-comment-text">
	                                <p>Aaaand nevermind. I found the Symfony 2.4 screencasts. I'll watch them to see if they answer my questions (probably do :P).</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2811200505" id="dsq-comment-2811200505">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/0x90/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/3417/4495/avatar92.jpg?1430963808">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2811200505">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-07-29</span>
	                            <span class="dsq-commenter-name">0x90</span>
	                        </div>

	                        <div id="dsq-comment-message-2811200505" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2811200505" class="dsq-comment-text">
	                                <p>Hi. I'm running in to a problem with persisting a many-to-many relationship. Could you maybe cover that in a tutorial or give me a direction to go for information? I found one link, but it was for Symfony 1.4 and not terribly detailed. I keep getting errors that the information I'm persisting needs to be of type Collection|array, which I do explode() it to an array, but ... I have no problem with the ManyToOne/OneToMany relationships, JOINs, etc. But this ManyToMany is giving me a headache. I can get the data just fine if I put it in the JoinTable() manually and display it, I just can't seem to be able to persist it.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2601121996" id="dsq-comment-2601121996">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2601121996">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-04-01</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2601121996" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2601121996" class="dsq-comment-text">
	                                <p>Hey Diego!</p><p>You can only download each video individually now. We made that change so we could update the individual videos more quickly, without needing to re-encode and upload the big final one.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2597171473" id="dsq-comment-2597171473">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/MolloKhan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/9429/4645/avatar92.jpg?1475260109">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2597171473">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-03-30</span>
	                            <span class="dsq-commenter-name">Diego Aguiar</span>
	                        </div>

	                        <div id="dsq-comment-message-2597171473" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2597171473" class="dsq-comment-text">
	                                <p>Hello, is there a way to download the entire course instead of video per video ?<br>I remember that before was possible</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2414759087" id="dsq-comment-2414759087">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2414759087">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-12-17</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2414759087" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2414759087" class="dsq-comment-text">
	                                <p>Hey Jonathan!</p><p>Thanks for the nice words! About the query: I'm not sure, I often have to play with things to see how they'll come out, but that's usually more because I'm trying to structure the SQL so that I get the exact result I want (e.g. 1 row, 2 columns, instead of 10 rows with 2 columns, like you have here).</p><p>In this case, the SQL that's being generated looks like it's returning multiple rows. To fix that (if it's possible), it's probably a matter of structuring your joins, or something similar. In theory, if you did that correctly, you'd get an array result with just 1 items in it instead of 0 (which I realize still isn't quite perfect - I can't remember now if one of the other query methods will flatten this for you).</p><p>But, I do have one suggestion: use select() instead of addSelect() unless you're purposefully intending to get that extra "stuff" back. By that I mean that you have an avgOne, avgTwo and a "0" index, which is an array of 10 objects. If you use select() instead of addSelect(), you should be able to get back just avgOne and avgTwo.</p><p>I hope that's at least *somewhat* helpful :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2414680091" id="dsq-comment-2414680091">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/jonathankeen/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/17476/5806/avatar92.jpg?1466527759">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2414680091">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-12-17</span>
	                            <span class="dsq-commenter-name">Jonathan Keen</span>
	                        </div>

	                        <div id="dsq-comment-message-2414680091" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2414680091" class="dsq-comment-text">
	                                <p>Ryan, another question for you if you have some time.</p><p>When I'm doing something along the lines of: <br></p><pre><code> <br>$qb = $this-&gt;createQueryBuilder('company')<br>    -&gt;addSelect(<br>        'AVG(rs.score) as avgOne, <br>         AVG(CASE WHEN rs.category = :id THEN rs.score ELSE 0 END) as avgTwo'<br>    )<br>    -&gt;leftJoin('company.categories', 'cats')<br>    -&gt;innerJoin('company.scores', 'rs')<br>    -&gt;andWhere('cats.id = :id')<br>    -&gt;setParameter('id', $categoryId)<br>    -&gt;groupBy('company.id')<br>    -&gt;getQuery();<br><br>$result = $qb-&gt;getArrayResult();</code></pre><p></p><p>Is there a more elegant way to return the values of avgOne and avgTwo so that they come back as a "pure" result set rather than "mixed"? I know I can loop over the results to combine them, I'm just wondering if there is something simple I'm missing. Right now I'm getting back: <br></p><pre><code><br>array:2 [▼<br>  0 =&gt; array:3 [▼<br>    0 =&gt; array:10 [▶] (myObject)<br>    "avgOne" =&gt; "4.6667"<br>    "avgTwo" =&gt; "4.4444"<br>  ]<br>  1 =&gt; array:3 [▶] <br>]<br></code></pre><p></p><p>Thanks for all that you do for the community and your customers! </p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2316656980" id="dsq-comment-2316656980">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/jonathankeen/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/17476/5806/avatar92.jpg?1466527759">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2316656980">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-10-20</span>
	                            <span class="dsq-commenter-name">Jonathan Keen</span>
	                        </div>

	                        <div id="dsq-comment-message-2316656980" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2316656980" class="dsq-comment-text">
	                                <p>Ryan,</p><p>Thanks for the inspiration and advice. You rock.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2315819415" id="dsq-comment-2315819415">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2315819415">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-10-19</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2315819415" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2315819415" class="dsq-comment-text">
	                                <p>Hey Jonathan!</p><p>I'll add a few more thoughts then :)</p><p>1) Sometimes more queries is more performant than less queries<br>2) If you're able to add caching later, then that'll be way more performance than even the best query<br>3) Even if this page is hit a lot, performance probably doesn't matter yet. Worry about it later, and optimize using my favorite tool for this: Blackfire.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2315643306" id="dsq-comment-2315643306">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/jonathankeen/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/17476/5806/avatar92.jpg?1466527759">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2315643306">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-10-19</span>
	                            <span class="dsq-commenter-name">Jonathan Keen</span>
	                        </div>

	                        <div id="dsq-comment-message-2315643306" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2315643306" class="dsq-comment-text">
	                                <p>Ryan,</p><p>Thank you! First off, it's just reassuring to know that even someone as experienced as yourself may get a little hung up sometimes on something. Thanks for taking your time to help.</p><p>Yes, I do feel like I might just skip it and go the straight SQL route. Then again I was also pondering the thought of creating those averages via PHP. After getting the hydrated results back, I could create functions such as "getAverageForCategory", "getAverageForCriteria", etc within the Company Entity and iterate over the Score objects. It wouldn't cause more database calls because I could grab the Score with a join while getting the company, but I would be grabbing a lot of Scores.  I do need access to other parts of the Entity as well (name, avatar, other categories it has, etc).</p><p>Heh, I am probably overthinking this a bit, but it's a page that would be hit a lot. I appreciate you letting me pick your brain a bit.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2315565677" id="dsq-comment-2315565677">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2315565677">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-10-19</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2315565677" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2315565677" class="dsq-comment-text">
	                                <p>Hey Jonathan!</p><p>Thanks for the really nice words!!!! You're awesome!</p><p>Ok, your query indeed sounds difficult, and is probably a decent use-case for skipping Doctrine and going to SQL. Can you do it with the QB or DQL? Of course! But don't kill yourself trying to figure it out. Afterall, you won't be hydrating (i.e. being returned) objects, so you're not really taking advantage of many of the ORM features in this query anyways.</p><p>The best advice I can give on making the query is to go through <a href="https://disq.us/url?url=https%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fdoctrine-queries%2Fjoins%3AvGn1Cc9NU7xWasszGc3y98EVhmA&amp;cuid=1175718" rel="nofollow noopener">https://knpuniversity.com/scre...</a> again, and when you join, focus on the specific *property* names on your joins. For example, you'll probably have something like:</p><p><code><pre>    $this-&gt;createQueryBuilder('product')<br>        -&gt;leftJoin('product.scores', 'score')<br>        // ...<br></pre></code></p><p>This is *scores* because you have a OneToMany "scores" property on Product that points to Score. If your property is called something else, rename accordingly. If you haven't mapped this side of the relationship (because the OneToMany side is "inverse", and is optional), then you need to map it. Oh, and overall, with very difficult queries like this, I usually write them in SQL first, and *then* convert to DQL/QB (or maybe I don't care enough and leave it as SQL).</p><p>Good luck!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2315286185" id="dsq-comment-2315286185">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/jonathankeen/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/17476/5806/avatar92.jpg?1466527759">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2315286185">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-10-19</span>
	                            <span class="dsq-commenter-name">Jonathan Keen</span>
	                        </div>

	                        <div id="dsq-comment-message-2315286185" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2315286185" class="dsq-comment-text">
	                                <p>Hey Ryan,</p><p>Loved the course and I look forward to future courses from you. I think you and Leanna have a great way of teaching. Discovering knpuniversity made a world of difference for me. Would love to see some follow ups with more difficult queries.</p><p>One of the things I keep getting stuck on is multiple select statements.</p><p>For instance, I have an entity for a Product that contains a OneToMany relationship on Score. Score has a ManyToOne relationship with Criteria (criteria meaning value, quality, etc) and a ManyToOne with Category. I want to get back multiple companies and get back the results of multiple Scores. For example, an average of overall scores for a Company, an average of scores for a specific Category and Company, an average of scores for a specific Criteria and Company in a single call to the database.</p><p>Is this just something I should do in SQL and skip trying to do in Doctrine? I've been driving myself a little crazy. I'm also guilty of over optimizing as well, I know.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2109644198" id="dsq-comment-2109644198">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/shairyarbaig/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10592/9062/avatar92.jpg?1469787361">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2109644198">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-07-01</span>
	                            <span class="dsq-commenter-name">Shairyar Baig</span>
	                        </div>

	                        <div id="dsq-comment-message-2109644198" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2109644198" class="dsq-comment-text">
	                                <p>Many thanks, I think you should add a feature to your website where developers can ask you queries related to the code they are working on and are stuck. Something like a monthly subscription, i would loveeee that feature and be the first one signing up for it.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2108415725" id="dsq-comment-2108415725">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2108415725">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-06-30</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2108415725" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2108415725" class="dsq-comment-text">
	                                <p>Hey Shairyar!</p><p>So when you call $this-&gt;createQueryBuilder('u') (from within the UserRepository), this *implies* the following:</p><p><code><pre><br>$qb-&gt;from('AppBundle:User', 'u')<br><br>    -&gt;select('u');<br><br></pre></code></p><p>In other words, by default, it selects all data from the User table only, regardless of joins. To grab more data, you have 2 options:</p><p>1) Select the specific fields you want back: $qb-&gt;addSelect('<a href="http://disq.us/url?url=http%3A%2F%2Fu.id%3AN7-Tbci58lm5Y94A6lItiAkpNXE&amp;cuid=1175718" rel="nofollow noopener">u.id</a> as userId, <a href="http://disq.us/url?url=http%3A%2F%2Fa.id%3A9iCmeV5pAHLmxVR3m2znCqjuLQI&amp;cuid=1175718" rel="nofollow noopener">a.id</a> as applicationId, <a href="http://disq.us/url?url=http%3A%2F%2Fo.id%3AVwa0P6_E09YYWBKkKSUChewQgog&amp;cuid=1175718" rel="nofollow noopener">o.id</a> as offerId, o.details');  This will return an associative array, very similar to what you'd expect back from a raw SQL query.</p><p>2) Simply get the User object back and then use your relationships on User to get the other data (something like):</p><p><code></code></p><pre><code><br>$applications = $user-&gt;getApplications();<br><br></code></pre><p></p><p>This assumes you've setup the OneToMany inverse side of the relationship (this would be an applications property on the User entity).</p><p>This method will cause extra queries to be made, but this can avoid that with the strategy shown here: <a href="https://disq.us/url?url=https%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fdoctrine-queries%2Fjoins-reduce-queries%3AKlxSmjHkTrX_uCdBJUpWtDRNqBc&amp;cuid=1175718" rel="nofollow noopener">https://knpuniversity.com/scre...</a></p><p>3) Make multiple queries - query for the User object, and then its applications, etc. Always a good fallback option if things get tricky.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2108155076" id="dsq-comment-2108155076">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/shairyarbaig/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10592/9062/avatar92.jpg?1469787361">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2108155076">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-06-30</span>
	                            <span class="dsq-commenter-name">Shairyar Baig</span>
	                        </div>

	                        <div id="dsq-comment-message-2108155076" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2108155076" class="dsq-comment-text">
	                                <p>Hi,</p><p>Thanks, reason I am running this query is I intend to pull a user's record whose data exist in User and Apply table, Apply table basically holds the applicant's application data and the Offer table hold the status of their application whether it was approved or rejected.</p><p>Now I am able to pull this information using the following query</p><p></p><pre><code><br>$qb = $this-&gt;createQueryBuilder('u')<br>    -&gt;leftJoin('CoreBundle:Apply', 'a', 'WITH', 'a.user = u')<br>    -&gt;leftJoin('AdminBundle:Offer', 'o', 'WITH', 'o.application = a');<br><br></code><br></pre><p></p><p>But the problem with this is it only gives me the user's whose data exist in Offer table/Entity, how can i change the above code to fetch ALL users regardless of their data exist in Offer table or not as long as their data is in Apply table</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2106564301" id="dsq-comment-2106564301">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2106564301">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-06-29</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2106564301" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2106564301" class="dsq-comment-text">
	                                <p>Hey Shairyar!</p><p>If you want, you *can* just execute the raw SQL in Doctrine: <a href="https://disq.us/url?url=https%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fdoctrine-queries%2Fraw-sql-queries%3Aq0T0pCXrdburU2v-Zpo9CAqmZcg&amp;cuid=1175718" rel="nofollow noopener">https://knpuniversity.com/scre...</a>. But I'm guessing you really want to know how to convert it. The key in converting is this: replace table references with *class* references. And a second key: don't include the ON parts in a JOIN - Doctrine is already aware of these. So, in your case, the true DQL query would look something like this:</p><p>SELECT u FROM AppBundle:User u LEFT JOIN user.applications a LEFT JOIN a.offers o</p><p>In order to LEFT JOIN from user to your Apply entity (pe_apply table), you need to have a User.applications property setup, which will be a OneToMany relationship. That's what the user.applications stuff means.</p><p>But also, what's the goal of the query? If you do the above, it will only return User entities to you. In Doctrine, there is no point in doing JOINs, unless you actually select more columns or use the JOIN'ed tables in WHERE statements (for example). For example, we use a join and then actually select a few columns from the joined tables in this tutorial - you can see it here: <a href="https://disq.us/url?url=https%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fdoctrine-queries%2Fselect-specific-fields%3AxdrJRlfecE1b-ibmiwufTIeCw_E&amp;cuid=1175718" rel="nofollow noopener">https://knpuniversity.com/scre...</a>.</p><p>Let me know if this makes sense!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2106271390" id="dsq-comment-2106271390">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/shairyarbaig/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10592/9062/avatar92.jpg?1469787361">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2106271390">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-06-29</span>
	                            <span class="dsq-commenter-name">Shairyar Baig</span>
	                        </div>

	                        <div id="dsq-comment-message-2106271390" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2106271390" class="dsq-comment-text">
	                                <p>I am trying to convert an sql query into a doctrine query and so far I am not having any luck this is the query I have which runs perfectly fine in phpmyadmin</p><p></p><pre><code><br>SELECT * FROM pe_users u<br>LEFT JOIN pe_apply a ON u.id = a.user<br>LEFT JOIN pe_offer o ON a.id = o.application<br></code><br></pre><p></p><p>However when I add this query in a custom repository things break down</p><p></p><pre><code><br>namespace Acme\AdminBundle\Repository;<br><br>use Doctrine\ORM\EntityRepository;<br><br>class AdminRepository extends EntityRepository{<br>    public function findAllAppByStatus(){<br>        $query = $this-&gt;getEntityManager()-&gt;createQuery(<br>            'SELECT * FROM pe_users u<br>             LEFT JOIN pe_apply a ON u.id = a.user<br>             LEFT JOIN pe_offer o ON a.id = o.application<br>             ');<br>        try {<br>            return $query-&gt;getSingleResult();<br>        } catch (\Doctrine\ORM\NoResultException $e) {<br>            return null;<br>        }<br>    }<br>}<br></code><br></pre><p></p><p>I even tried</p><p></p><pre><code><br>$query = "SELECT * FROM pe_users u LEFT JOIN pe_apply a ON u.id = a.user LEFT JOIN pe_offer o ON a.id = o.application";<br>        $q = $this-&gt;getEntityManager()-&gt;createQuery($query);<br>        return $q-&gt;execute();<br></code><br></pre><p></p><p>but the error i see is <br>[Syntax Error] line 0, col 7: Error: Expected IdentificationVariable | ScalarExpression | AggregateExpression | FunctionDeclaration | PartialObjectExpression | "(" Subselect ")" | CaseExpression, got '*'</p><p>What am i doing wrong and how can i make it work?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_56';var disqus_url = 'https://knpuniversity.com/screencast/doctrine-queries';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../about">About</a></li>
                            <li><a class="knp-color-black" href="../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
        <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_dashboard',
            {"course":"doctrine-queries"}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../js/CourseNotification.js"></script>

    <script>
        jQuery(document).ready(function() {
            var courseNotification = new Core.CourseNotification($('#course-subscription-wrapper'));

            // Highlight related courses when page is loaded
            var relatedCourseItems = jQuery('.related-courses').find('li');
            var courseChapterItems = jQuery('.chapter-list').find('li');
            // Event listeners
            jQuery(window).on('hashchange', function() {
                // Highlight related courses on every hash change:
                // it allows to avoid page reloading after each change,
                // useful for debugging :)
                highlightItems('C', relatedCourseItems);
                highlightItems('CH', courseChapterItems);
            });
            highlightItems('C', relatedCourseItems);
            highlightItems('CH', courseChapterItems);

            /**
             * Highlight specified items on overview course page like GitHub highlights code lines.
             * Enumerate course ordinal numbers in list with comma using URI hash like "#C:1,4,5".
             * Supported keys:
             * - "C" for related courses
             * - "CH" for course chapters
             *
             * For example, in order to highlight 1st, 4th and 5th course chapte items use:
             * http://knpu.l/screencast/php#CH:1,4,5
             */
            function highlightItems(key, jQueryListItems)
            {
                // Reset all highlighted before items
                jQueryListItems.removeClass('highlighted-bg');
                if (!key) {
                    return;
                }

                var hash = window.location.hash;
                var pattern = new RegExp('^#'+key+':([0-9]+(,[0-9]+)*)');
                if (0 === hash.search(pattern)) {
                    // Try to match at least one item index in hash
                    // and handle highlighting only if it found
                    var matches = hash.match(pattern);
                    var itemIndexEnumeration = matches[1];
                    if (itemIndexEnumeration) {
                        var itemIndexArray = itemIndexEnumeration.split(',');
                        itemIndexArray.forEach(function (value) {
                            var index = value - 1; // normalize index based on order number
                            jQueryListItems
                                    .filter(':eq(' + index + ')')
                                    .addClass('highlighted-bg');
                        });

                        // Find the first highlighted item and scroll to it
                        var minIndex = Math.min.apply(Math, itemIndexArray) - 1;
                        jQuery.smoothScroll({
                            scrollTarget: jQueryListItems.filter(':eq(' + minIndex + ')')
                        });
                    }
                }
            }
        });
    </script>
<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":294,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
