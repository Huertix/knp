<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Using a Test Database > Symfony RESTful API: Course 1 | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 41850
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: PUT\x20is\x20for\x20Updating <i class="fa fa-play"></i>',
            'url': '/screencast/symfony-rest/put-programmer#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="In this series, we get to work: by building the same API in the
[REST series](http://knpuniversity.com/screencast/rest), but leveraging
all the amazing tools and libraries of the Symfony framework. If terminology
like representations, resources, and hypermedia are new to you, start
with the [REST series](http://knpuniversity.com/screencast/rest) and
then come back. And get ready to get your (API) mind blown.

In Course 1, we&#039;ll start quick with:

* Build your first functional POST endpoint
* Decoding the Request body
* Using forms to handle incoming data
* Writing tests for your API
* Handling data &quot;seeding&quot; for your tests
* GET, PUT, DELETE and PATCH endpoints
* Using the JMS Serializer
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Using a Test Database">
<meta property="og:description" content="In this series, we get to work: by building the same API in the
[REST series](http://knpuniversity.com/screencast/rest), but leveraging
all the amazing tools and libraries of the Symfony framework">
<meta property="og:url" content="http://knpuniversity.com/screencast/symfony-rest/test-database">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/symfony-rest:a5dc486f568b17f2957f648b5f78a465396f48e4/rest-sf.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="test-database#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        13.
                            Using a Test Database
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">Symfony RESTful API: Course 1</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="post" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        POST To Create
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="post-json-body" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        Finish POST with a Form
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:42</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="form-post" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        Handling data with a Form
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:03</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="get-one" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        GET one Programmer
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:20</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="tightening-up-response" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Tightening up the Response
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:51</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="get-collection" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        GET a Collection of Programmers
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:24</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="first-test" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Add a Test!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:00</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="test-code-reuse" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Test Code Reuse
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:31</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="tests-clear-data" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Tests with the Container
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:23</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="mad-test-debugging" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        Mad Test Debugging
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:03</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="property-access-fixtures" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Test Fixtures and the PropertyAccess Component
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:24</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="response-asserter" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                12.
                        The ResponseAsserter!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:21</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="test-database" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                13.
                        Using a Test Database
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:52</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="put-programmer" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                14.
                        PUT is for Updating
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:41</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="readonly-fields" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                15.
                        Read-Only Fields
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:26</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="delete-programmer" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                16.
                        DELETE is for Saying Goodbye
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:59</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="patch-programmer" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                17.
                        PATCH is (also) for Updating (basically)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:18</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="serializer-basics" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                18.
                        Using a Serializer
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="centralizing-response" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                19.
                        Centralize that Response!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:40</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="serializer-control" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                20.
                        Taking Control of the Serializer
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:21</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/symfony-rest" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Using a Test Database</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>Symfony RESTful API: Course 1 Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $10.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="put-programmer#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="test-database#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="test-database#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (24)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script markdown-content">
                                                                                        <a href="https://github.com/knpuniversity/symfony2-rest/edit/master/knpu/episode1/test-database.md" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    <p>We're using the built-in PHP web server running on port 8000. We
have that hardcoded at the top of <code>ApiTestCase</code>: when the Client is
created, it <em>always</em> goes to <code>localhost:8000</code>. Bummer! All of our fellow
code battlers will need to have the exact same setup.</p>
<p>We need to make this configurable - create a new variable <code>$baseUrl</code> and set it
to an environment variable called <code>TEST_BASE_URL</code> - I'm making that name
up. Use this for the <code>base_url</code> option:</p>
<p><div class="code-block-wrapper" data-code-block-guid="8ed091385d">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-273" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            273 lines <span class="meta-divider"></span> <span title="src/AppBundle/Test/ApiTestCase.php">src/AppBundle/Test/ApiTestCase.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-45" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 45
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="46"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setUpBeforeClass</span><span class="hljs-params">()</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="47"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="48"></td>
            <td class="blob-code">        $baseUrl = getenv(<span class="hljs-string">'TEST_BASE_URL'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="49"></td>
            <td class="blob-code">        <span class="hljs-keyword">self</span>::$staticClient = <span class="hljs-keyword">new</span> Client([</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="50"></td>
            <td class="blob-code">            <span class="hljs-string">'base_url'</span> =&gt; $baseUrl,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="51"></td>
            <td class="blob-code">            <span class="hljs-string">'defaults'</span> =&gt; [</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="52"></td>
            <td class="blob-code">                <span class="hljs-string">'exceptions'</span> =&gt; <span class="hljs-keyword">false</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="53"></td>
            <td class="blob-code">            ]</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="54"></td>
            <td class="blob-code">        ]);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="55-59" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 55 - 59
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="60"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="61-273" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 61 - 273
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>There are endless ways to set environment variables. But we want to at least
give this a default value. Open up <code>app/phpunit.xml.dist</code>. Get rid of those
comments - we want a <code>php</code> element with an <code>env</code> node inside. I'll paste
that in:</p>
<p><div class="code-block-wrapper" data-code-block-guid="fa4f904887">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-36" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            36 lines <span class="meta-divider"></span> <span title="app/phpunit.xml.dist">app/phpunit.xml.dist</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-3" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 3
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="4"></td>
            <td class="blob-code"><span class="hljs-tag">&lt;<span class="hljs-name">phpunit</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">"http://www.w3.org/2001/XMLSchema-instance"</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="5"></td>
            <td class="blob-code">         <span class="hljs-attr">xsi:noNamespaceSchemaLocation</span>=<span class="hljs-string">"http://schema.phpunit.de/4.1/phpunit.xsd"</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="6"></td>
            <td class="blob-code">         <span class="hljs-attr">backupGlobals</span>=<span class="hljs-string">"false"</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="7"></td>
            <td class="blob-code">         <span class="hljs-attr">colors</span>=<span class="hljs-string">"true"</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="8"></td>
            <td class="blob-code">         <span class="hljs-attr">bootstrap</span>=<span class="hljs-string">"bootstrap.php.cache"</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="9"></td>
            <td class="blob-code">&gt;</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="10-17" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 10 - 17
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="18"></td>
            <td class="blob-code">    <span class="hljs-tag">&lt;<span class="hljs-name">php</span>&gt;</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="19"></td>
            <td class="blob-code">        <span class="hljs-tag">&lt;<span class="hljs-name">env</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"TEST_BASE_URL"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"http://localhost:8000"</span> /&gt;</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="20"></td>
            <td class="blob-code">    <span class="hljs-tag">&lt;/<span class="hljs-name">php</span>&gt;</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="21-34" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 21 - 34
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="35"></td>
            <td class="blob-code"><span class="hljs-tag">&lt;/<span class="hljs-name">phpunit</span>&gt;</span></td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>If you have our setup, everything just works. If not, you can 
set this environment variable or create a <code>phpunit.xml</code> file 
to override everything.</p>
<p>Let's double-check that this all works:</p>
<pre><code class="language-bash"><div class="line">phpunit -c app --filter testGETProgrammersCollection src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php</div></code></pre>
<h2 id="tests-killed-our-database">Tests Killed our Database <a class="headerlink" href="test-database#tests-killed-our-database" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>One <em>little</em> bummer is that the tests are using our development database.
Since those create a <code>weaverryan</code> user with password <code>foo</code>, that still works.
But the cute programmer we created earlier is gone - they've been wiped out,
sent to /dev/null... hate to see that.</p>
<h2 id="configuring-the-test-environment">Configuring the test Environment <a class="headerlink" href="test-database#configuring-the-test-environment" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Symfony has a <code>test</code> environment for <em>just</em> this reason. So let's use it!
Start by copying <code>app_dev.php</code> to <code>app_test.php</code>, then change the environment
key from <code>dev</code> to <code>test</code>. To know if this all works, put a temporary
<code>die</code> statement right on top:</p>
<p><div class="code-block-wrapper" data-code-block-guid="4517e45d88">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-31" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            31 lines <span class="meta-divider"></span> <span title="web/app_test.php">web/app_test.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="1"></td>
            <td class="blob-code"><span class="hljs-meta">&lt;?php</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="2"></td>
            <td class="blob-code"><span class="hljs-keyword">die</span>(<span class="hljs-string">'working?'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="3-24" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 3 - 24
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="25"></td>
            <td class="blob-code">$kernel = <span class="hljs-keyword">new</span> AppKernel(<span class="hljs-string">'test'</span>, <span class="hljs-keyword">true</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="26-31" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 26 - 31
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>We'll setup our tests to hit <em>this</em> file instead of <code>app_dev.php</code>, which
is being used now because Symfony's <code>server:run</code> command sets up the web
server with that as the default.</p>
<p>Once we do that, we can setup the <code>test</code> environment to use a different database
name. Open <code>config.yml</code> and copy the <code>doctrine</code> configuration. Paste it
into <code>config_test.yml</code> to override the original. All we really want to
change is <code>dbname</code>. I like to just take the real database name and suffix
it with <code>_test</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="419438bc81">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-21" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            21 lines <span class="meta-divider"></span> <span title="app/config/config_test.yml">app/config/config_test.yml</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-17" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 17
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="18"></td>
            <td class="blob-code"><span class="hljs-attr">doctrine:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="19"></td>
            <td class="blob-code"><span class="hljs-attr">    dbal:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="20"></td>
            <td class="blob-code"><span class="hljs-attr">        dbname:</span>   <span class="hljs-string">"%database_name%_test"</span></td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Ok, last step. In <code>phpunit.xml.dist</code>, add a <code>/app_test.php</code> to the end of
the URL. In theory, all our API requests will now hit <em>this</em> front controller.</p>
<p>Run the test! This <em>shouldn't</em> pass - it should hit that <code>die</code>
statement on every endpoint:</p>
<pre><code class="language-bash"><div class="line">phpunit -c app --filter testGETProgrammersCollection src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php</div></code></pre>
<p>They fail! But not for the reason we wanted:</p>
<pre><code>Unknown database `symfony_rest_recording_test`</code></pre>
<p>Woops, I forgot to create the new test database. Fix this with 
<code>doctrine:database:create</code> in the <code>test</code> environment and <code>doctrine:schema:create</code>:</p>
<pre><code class="language-bash"><div class="line">php app/console doctrine:database:create --env=test</div><div class="line">php app/console doctrine:schema:create --env=test</div></code></pre>
<p>Try it again:</p>
<pre><code class="language-bash"><div class="line">phpunit -c app --filter testGETProgrammersCollection src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php</div></code></pre>
<p>Huh, it passed. <em>Not</em> expected. We should be hitting this <code>die</code> statement.
Something weird is going on.</p>
<h2 id="debugging-weird-failing-requests">Debugging Weird/Failing Requests <a class="headerlink" href="test-database#debugging-weird-failing-requests" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Go into <code>ProgrammerControllerTest</code> to debug this. We <em>should</em> be going to
a URL with <code>app_test.php</code> at the front, but it <em>seems</em> like that's not happening.
Use <code>$this-&gt;printLastRequestUrl()</code> after making the request:</p>
<p><div class="code-block-wrapper" data-code-block-guid="7d8164e463">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-73" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            73 lines <span class="meta-divider"></span> <span title="src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php">src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-53" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 53
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="54"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">testGETProgrammersCollection</span><span class="hljs-params">()</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="55"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="56-64" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 56 - 64
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="65"></td>
            <td class="blob-code">        $response = <span class="hljs-keyword">$this</span>-&gt;client-&gt;get(<span class="hljs-string">'/api/programmers'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="66"></td>
            <td class="blob-code">        <span class="hljs-keyword">$this</span>-&gt;printLastRequestUrl();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="67-70" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 67 - 70
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="71"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="72-73" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 72 - 73
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>This is one of the helper functions I wrote - it shows the <em>true</em> URL that
Guzzle is using.</p>
<p>Now run the test:</p>
<pre><code class="language-bash"><div class="line">phpunit -c app --filter testGETProgrammersCollection src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php</div></code></pre>
<p>Huh, so there's <em>not</em> <code>app_test.php</code> in the URL. Ok, so here's the deal.
With Guzzle, if you have this opening slash in the URL, it takes that string
and puts it right after the domain part of your <code>base_url</code>. Anything after
that gets run over. We <em>could</em> fix this by taking out the opening slash
everywhere - like <code>api/programmers</code> - but I just don't like that: it looks
weird.</p>
<h2 id="properly-prefixing-all-uris">Properly Prefixing all URIs <a class="headerlink" href="test-database#properly-prefixing-all-uris" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Instead, get rid of the <code>app_test.php</code> part in <code>phpunit.xml.dist</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="11755b5401">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-36" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            36 lines <span class="meta-divider"></span> <span title="app/phpunit.xml.dist">app/phpunit.xml.dist</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-3" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 3
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="4"></td>
            <td class="blob-code"><span class="hljs-tag">&lt;<span class="hljs-name">phpunit</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">"http://www.w3.org/2001/XMLSchema-instance"</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="5-17" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 5 - 17
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="18"></td>
            <td class="blob-code">    <span class="hljs-tag">&lt;<span class="hljs-name">php</span>&gt;</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="19"></td>
            <td class="blob-code">        <span class="hljs-tag">&lt;<span class="hljs-name">env</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"TEST_BASE_URL"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"http://localhost:8000"</span> /&gt;</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="20"></td>
            <td class="blob-code">    <span class="hljs-tag">&lt;/<span class="hljs-name">php</span>&gt;</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="21-34" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 21 - 34
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="35"></td>
            <td class="blob-code"><span class="hljs-tag">&lt;/<span class="hljs-name">phpunit</span>&gt;</span></td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>We'll solve this a different way. When the <code>Client</code> is created in <code>ApiTestCase</code>,
we have the chance to attach listeners to it. Basically, we can hook into
different points, like right before a request is sent or right after. Actually,
I'm already doing that to keep track of the Client's history for some debugging
stuff.</p>
<p>I'll paste some code, and add a <code>use</code> statement for this <code>BeforeEvent</code> class:</p>
<p><div class="code-block-wrapper" data-code-block-guid="4819b3285d">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-283" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            283 lines <span class="meta-divider"></span> <span title="src/AppBundle/Test/ApiTestCase.php">src/AppBundle/Test/ApiTestCase.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-10" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 10
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="11"></td>
            <td class="blob-code"><span class="hljs-keyword">use</span> <span class="hljs-title">GuzzleHttp</span>\<span class="hljs-title">Event</span>\<span class="hljs-title">BeforeEvent</span>;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="12-20" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 12 - 20
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="21"></td>
            <td class="blob-code"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ApiTestCase</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">KernelTestCase</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="22"></td>
            <td class="blob-code"></span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="23-46" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 23 - 46
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="47"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setUpBeforeClass</span><span class="hljs-params">()</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="48"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="49-59" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 49 - 59
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="60"></td>
            <td class="blob-code">        <span class="hljs-comment">// guaranteeing that /app_test.php is prefixed to all URLs</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="61"></td>
            <td class="blob-code">        <span class="hljs-keyword">self</span>::$staticClient-&gt;getEmitter()</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="62"></td>
            <td class="blob-code">            -&gt;on(<span class="hljs-string">'before'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(BeforeEvent $event)</span> </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="63"></td>
            <td class="blob-code">                $path = $event-&gt;getRequest()-&gt;getPath();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="64"></td>
            <td class="blob-code">                <span class="hljs-keyword">if</span> (strpos($path, <span class="hljs-string">'/api'</span>) === <span class="hljs-number">0</span>) {</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="65"></td>
            <td class="blob-code">                    $event-&gt;getRequest()-&gt;setPath(<span class="hljs-string">'/app_test.php'</span>.$path);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="66"></td>
            <td class="blob-code">                }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="67"></td>
            <td class="blob-code">            });</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="68-69" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 68 - 69
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="70"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="71-281" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 71 - 281
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="282"></td>
            <td class="blob-code">}</td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Ah Guzzle - you're so easy to understand sometimes! So as you can probably
guess, this function is called <em>before</em> every request is made. All we do
is look to see if the path starts with <code>/api</code>. If it does, prefix that with
<code>/app_test.php</code>. This will make every request use that front controller,
without ever needing to think about that in the tests.</p>
<p>Give it another shot:</p>
<pre><code class="language-bash"><div class="line">phpunit -c app --filter testGETProgrammersCollection src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php</div></code></pre>
<p>Errors! Yes - it doesn't see a <code>programmers</code> property in the response because
all we have is this crumby die statement text. Now that we know things hit
<code>app_test.php</code>, go take that <code>die</code> statement out of it. And remove the
<code>printLastRequestUrl()</code>. Run the entire test suite:</p>
<pre><code class="language-bash"><div class="line">phpunit -c app</div></code></pre>
<p>Almost! There's 1 failure! Inside testPOST - we're asserting that the <code>Location</code>
header is this string, but now it has the <code>app_test.php</code> part in it. That's
a false failure - our code <em>is</em> really working. Let's soften that test a bit.
How about replacing <code>assertEquals()</code> with <code>assertStringEndsWith()</code>. Now
let's see some passing:</p>
<pre><code class="language-bash"><div class="line">phpunit -c app</div></code></pre>
<p>Yay!</p>

    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2944909850" id="dsq-comment-2944909850">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2944909850">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-10-11</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2944909850" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2944909850" class="dsq-comment-text">
	                                <p>No worries - thanks again for the post!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2943609784" id="dsq-comment-2943609784">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/brunoplima/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/21277/6814/avatar92.jpg?1476130532">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2943609784">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-10-10</span>
	                            <span class="dsq-commenter-name">Bruno Lima</span>
	                        </div>

	                        <div id="dsq-comment-message-2943609784" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2943609784" class="dsq-comment-text">
	                                <p>Thank you. And sorry. :) It looks like I posted my comment on the wrong place. I'm already on course 4, but I came back here in order to remember that app_test.php prefix and to find out if this good piece of code was being underused or if I did something wrong.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2943187889" id="dsq-comment-2943187889">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2943187889">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-10-10</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2943187889" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2943187889" class="dsq-comment-text">
	                                <p>Hey Bruno!</p><p>Nice looking into this - I think you're right! At one point, I think we're *not* yet using the test environment, and I think I setup this nice little feature during that :). So, this comes down to 2 things (and thanks for pointing it out):</p><p>1) It looks like the code for Symfony3 / Guzzle6 should be updated to avoid that Array to string conversion. I can check into that.</p><p>2) I agree to *not* enable the profiler for tests - it does really slow things down. But, you could - if you were having some issues - enable it temporarily, which is when this line would kick into shape and help give you the URL to the profiler. I should add a note about this - it's a nice feature, but it needs to be highlighted.</p><p>So, I need to look into the code still, but it seems like you're absolutely right. Thanks for asking about this!</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2941783180" id="dsq-comment-2941783180">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/brunoplima/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/21277/6814/avatar92.jpg?1476130532">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2941783180">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-10-09</span>
	                            <span class="dsq-commenter-name">Bruno Lima</span>
	                        </div>

	                        <div id="dsq-comment-message-2941783180" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2941783180" class="dsq-comment-text">
	                                <p>Hi Ryan, I have a question: Since the default `config_test.yml` disables the Symfony web profiler, this `if` clause will never true on `ApiTestCase.php` (the most recent version, so far, already on Symfony 3):</p><p>```<br>$profilerUrl = $response-&gt;getHeader('X-Debug-Token-Link'); // header not provided<br>if ($profilerUrl) { // never evaluated as true<br>    $fullProfilerUrl = $response-&gt;getHeader('Host').$profilerUrl[0]; // Results in "Array to string conversion"<br>```</p><p>So one can't realize that `$response-&gt;getHeader('Host')` returns an array and can't be converted to string. Only `$profilerUrl[0]` is fine.<br>Did you changed the configuration or stopped using the web profiler? Is it worth to enabled it? Symfony itself recommends disable for performance.</p><p>Thank you.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2882867430" id="dsq-comment-2882867430">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2882867430">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-09-08</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2882867430" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2882867430" class="dsq-comment-text">
	                                <p>Hey Tael!</p><p>Ah, you're of course right :). I made this change recently, but I totally reversed it! Thanks for catching it and commenting. I've just made the fix (<a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fknpuniversity%2Fsymfony2-rest%2Fcommit%2F177607b4737e1b8635c939e9ae48c38bfcda9c68%29%3AMPY8vIFyoCFXU4jdDkPJRl6WYCE&amp;cuid=1175718" rel="nofollow noopener">https://github.com/knpuniversi...</a> and am deploying it now!</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2881968198" id="dsq-comment-2881968198">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/taelkim/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/7615/3651/avatar92.jpg?1473305472">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2881968198">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-09-08</span>
	                            <span class="dsq-commenter-name">Tael Kim</span>
	                        </div>

	                        <div id="dsq-comment-message-2881968198" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2881968198" class="dsq-comment-text">
	                                <p>If I doesn't wrong,<br>this downloaded code will be fixed.</p><p>/src/AppBundle/Test/ApiTestCase.php<br>----------------------------<br>62        $baseUrl = getenv('TEST_BASE_URL');<br>63        if ($baseUrl) {<br>64           static::fail('No TEST_BASE_URL environmental variable set in phpunit.xml.');<br>65        }<br>----------------------------<br>TO<br>----------------------------<br>62        $baseUrl = getenv('TEST_BASE_URL');<br>63        if (!$baseUrl) {<br>64           static::fail('No TEST_BASE_URL environmental variable set in phpunit.xml.');<br>65        }<br>----------------------------</p><p>if baseUrl loaded correctly, It's no error. doesn't it?</p><p>please check and reply <a data-dsq-mention="weaverryan:disqus" href="https://disqus.com/by/weaverryan/" rel="nofollow noopener">weaverryan</a>   :D</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2756697841" id="dsq-comment-2756697841">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2756697841">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-29</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2756697841" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2756697841" class="dsq-comment-text">
	                                <p>Great news :) - thanks for the update!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2756473315" id="dsq-comment-2756473315">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/stasgoshtein/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2756473315">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-29</span>
	                            <span class="dsq-commenter-name">Stas Goshtein</span>
	                        </div>

	                        <div id="dsq-comment-message-2756473315" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2756473315" class="dsq-comment-text">
	                                <p>Hi, Ryan and Victor. Just wanted to give you an update.<br>I started everything from scratch and now it is working perfectly. I suppose it was some extra char in one of Yamls.<br>Or may be the fact, that I also copied routes_dev.yml to routes_test.yml</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2744150178" id="dsq-comment-2744150178">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2744150178">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-22</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-2744150178" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2744150178" class="dsq-comment-text">
	                                <p>Ah, if your DEV is working perfectly, most likely my advise doesn't help. (</p><p>BTW, when you upgrade Guzzle up to 6, did you change "base_url" to the "base_uri" for Guzzle client?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2744132677" id="dsq-comment-2744132677">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/stasgoshtein/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2744132677">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-22</span>
	                            <span class="dsq-commenter-name">Stas Goshtein</span>
	                        </div>

	                        <div id="dsq-comment-message-2744132677" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2744132677" class="dsq-comment-text">
	                                <p>Hi, Victor, thank you for your answer.<br>Yes, my DEV is working perfectly, all tests are now running on it without problem.<br>I will try what you suggested about NGINx config and will keep thread updated.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2744100195" id="dsq-comment-2744100195">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2744100195">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-22</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-2744100195" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2744100195" class="dsq-comment-text">
	                                <p>Hey Stas!</p><p>I suppose your PROD environment works well, right? Does your app work in DEV environment correctly? I mean can you serf <code>/app_dev.php/api/core/actions/add</code> directly? It's strange if it works in DEV but not in TEST.</p><p>If app does not work in DEV too, then could you try to use for <code>^/(app_dev|app_test|config)\.php(/|$)</code> the same configuration directives which are used in <code>^/app\.php(/|$)</code>? And comment out every <code>internal;</code> directive in your Nginx Symfony config for debug purpose. And don't forget to restart Nginx after any config changes!</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2744064561" id="dsq-comment-2744064561">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/stasgoshtein/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2744064561">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-22</span>
	                            <span class="dsq-commenter-name">Stas Goshtein</span>
	                        </div>

	                        <div id="dsq-comment-message-2744064561" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2744064561" class="dsq-comment-text">
	                                <p>Hi, Ryan, thanks for replying first of all. Getting the same message from browser and also from Postman. I tried about 5 different NGINX configs as well. Cleared caches few time - no success for now. Will probably run Unit testing from Jenkins on another server to keep my DEV database.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2743416407" id="dsq-comment-2743416407">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2743416407">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-21</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2743416407" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2743416407" class="dsq-comment-text">
	                                <p>Hi Stas!</p><p>Ah, interesting... So the key thing I'm looking at is the error from Symfony: No route found for GET /app_test.php/api/core/actions/add. That app_test.php part should *not* be in there. Obviously, we *do* go to /app_test.php/api/core/actions/add, but since app_test.php is a PHP file that's executed, Symfony ultimately thinks that the URL is /api/core/actions/add. So having the "app_test.php" in the error message is our clue. I can think of 2 ways this is happening:</p><p>1) Somehow, we're actually requesting /app_test.php/app_test.php/api/core/actions/add<br>2) Something is misconfigured in Nginx, and so even though app_test.php is being executed, some bad information is being placed into $_SERVER.</p><p>I assume this all works if you just surf to the URL (/app_test.php/api/core/actions/add) directly? If so, we need to really be sure that the URL that's being requested is correct. I know the top of the error messages says you made a request to /api/core/actions/add... but I'm not sure I trust it :)</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2738877652" id="dsq-comment-2738877652">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/stasgoshtein/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2738877652">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-19</span>
	                            <span class="dsq-commenter-name">Stas Goshtein</span>
	                        </div>

	                        <div id="dsq-comment-message-2738877652" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2738877652" class="dsq-comment-text">
	                                <p>Hi, guys, having some stupid problem, after following your chapter and also applying Ryan's new APITestCase for Guzzle 6 and Symfony3, my app won't find routes in test env.</p><p>Failure! when making the following request:<br>GET: <a href="http://disq.us/url?url=http%3A%2F%2Fapi.lovelock.ws%2Fapi%2Fcore%2Factions%2Fadd%3AYKJGKexF-1giQT0okgatzDhP-Uk&amp;cuid=1175718" rel="nofollow noopener">http://api.lovelock.ws/api/cor...</a></p><p>Server: nginx/1.10.1<br>Content-Type: application/problem+json<br>Transfer-Encoding: chunked<br>Connection: keep-alive<br>X-Powered-By: PHP/7.0.7<br>Cache-Control: no-cache<br>Date: Sun, 19 Jun 2016 12:48:04 GMT<br>{<br>    "detail": "No route found for \"GET \/app_test.php\/api\/core\/actions\/add\"",<br>    "status": 404,<br>    "type": "about:blank",<br>    "title": "Not Found"<br>}<br>F                                                                   1 / 1 (100%)</p><p>Time: 3.32 seconds, Memory: 18.00MB</p><p>There was 1 failure:</p><p>1) APIBundle\Tests\Controller\CoreActionControllerTest::testCoreActionGetByName<br>Failed asserting that 404 matches expected 200.</p><p>Have to mention, that test DB is working and test.log is created and written.<br>My server config is NGINX/FPM and config is default recommended by NGINX, however I only change this line to pass app_test.php to FPM:</p><p>location ~ ^/(app_dev|app_test|config)\.php(/|$) {<br>.....<br>}<br></p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2721986530" id="dsq-comment-2721986530">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2721986530">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-09</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2721986530" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2721986530" class="dsq-comment-text">
	                                <p>You're absolutely correct about the absolute paths (and I *do* think this was something that was added in some more recent versions of Guzzle). To get around it, we use a middleware that adds the app_test.php even when the URL starts with a slash. It's an annoying little thing to need to add, but it works pretty well. Here's the Guzzle 6 version for those who are curious: <a href="https://disq.us/url?url=https%3A%2F%2Fgist.github.com%2Fweaverryan%2F72d529bac4fb5c4892d98b6c57e45ca5%23file-apitestcase-php-L48%3AoTysqIAy5ogWitOy2N7FTzApc_g&amp;cuid=1175718" rel="nofollow noopener">https://gist.github.com/weaver...</a></p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2720842702" id="dsq-comment-2720842702">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/dermeck/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/21100/3442/avatar92.jpg?1465468745">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2720842702">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-09</span>
	                            <span class="dsq-commenter-name">dermeck</span>
	                        </div>

	                        <div id="dsq-comment-message-2720842702" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2720842702" class="dsq-comment-text">
	                                <p>Hey I just had  a similar problem although the response was not empty Guzzle was kind of ignoring the "/app_test.php" part of the base url. The problem was that in my setup (Symfony 3, Guzzle ^6.2) Guzzle overrides the path if the request uses an absolute path like "/api/...". Using "api/..." instead solved the problem for me.</p><p>Since it worked in the video I suppose this might be an issue with the later versions.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2645261074" id="dsq-comment-2645261074">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2645261074">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-04-27</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2645261074" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2645261074" class="dsq-comment-text">
	                                <p>Hi Roy!</p><p>Hmm, a few things to check:</p><p>1) Try renaming (in phpunit.xml.dist) the variable to something different - e.g. TEST_BASE_API_URL. I just want to make sure nothing is overriding the other value :).</p><p>2) Make sure your phpunit.xml.dist looks exactly like mine - you can see the entire file if you expand the code blocks on this page.</p><p>Let me know if you find anything out!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2643631279" id="dsq-comment-2643631279">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/RHochstenbach/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/588/7540/avatar92.jpg?1461682041">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2643631279">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-04-26</span>
	                            <span class="dsq-commenter-name">Roy Hochstenbach</span>
	                        </div>

	                        <div id="dsq-comment-message-2643631279" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2643631279" class="dsq-comment-text">
	                                <p>Setting the 'TEST_BASE_URL' value in phpunit.xml.dist doesn't seem to be working. getenv('TEST_BASE_URL') returns an empty response.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2529008014" id="dsq-comment-2529008014">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2529008014">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-22</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2529008014" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2529008014" class="dsq-comment-text">
	                                <p>Hi Mihail!</p><p>Hmm, 2.62 seconds for 3 functional tests (each includes a real HTTP request) seems *really* good to me. If all your tests run that fast, you could have hundreds of tests and they would still execute in just a few minutes. Also, if there are performance gains you can get, it's possible that the database is not the problem. If you're interested, I'd recommend using <a href="http://disq.us/url?url=http%3A%2F%2FBlackfire.io%3AIW51sySQHAe7p3kQZY_XICQoKHw&amp;cuid=1175718" rel="nofollow noopener">Blackfire.io</a> from the command line. I've never tried it before (I've wanted to), but it should be able to profile your tests being run: telling you exactly what is and is not taking up performance.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2522188560" id="dsq-comment-2522188560">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_fvhM6qCQNy/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/19657/3705/avatar92.jpg?1467706588">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2522188560">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-18</span>
	                            <span class="dsq-commenter-name">Mihail</span>
	                        </div>

	                        <div id="dsq-comment-message-2522188560" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2522188560" class="dsq-comment-text">
	                                <p>Hi Ryan!</p><p>I try to follow this tutorial by using SF2.7 and modified ApiTestCase to extend WebTestCase using the idea from Symfony Jobeet tutorial for SQLite. <a href="https://disq.us/url?url=https%3A%2F%2Fgist.github.com%2Fbamper%2F63ac153857f3f34cdab3%3A1l2FP9FkeC_srzh647E7nUKnA6I&amp;cuid=1175718" rel="nofollow noopener">https://gist.github.com/bamper...</a></p><p>Now all 3 tests work with test.sqlite database at this point, but a little bit slower: Time: 2.62 seconds, Memory: 27.75Mb</p><p>Would you be so kind to look at this file and give some advice on what can be improved further and whether there are any drawbacks with this approach?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2503563279" id="dsq-comment-2503563279">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2503563279">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-09</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2503563279" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2503563279" class="dsq-comment-text">
	                                <p>Hey again!</p><p>No worries :). Sorry for the late reply - this was a tougher question initially and I had to get back from a conference!</p><p>To answer your question directly: I don't know (but I could probably find out). But, I might have a simpler way. Have you tried:</p><p>A) Creating the file sqlite database.<br>B) Copy it to something like myDb.template<br>C) At the beginning of each test, don't rebuild the DB, just copy the file from myDb.template to myDb (assuming that's your real DB name in the test environment). Do this *before* you boot your kernel.<br>D) Run your tests, which will use the already-perfectly-populated new database file.</p><p>I don't know if this works (I can't think why no?) - but I've often wondered if it would! And if so, I think it would be faster than an in-memory database that you need to rebuild on every test.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2492807785" id="dsq-comment-2492807785">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/zacball/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/13583/1115/avatar92.jpg?1418711116">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2492807785">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-02</span>
	                            <span class="dsq-commenter-name">zacball</span>
	                        </div>

	                        <div id="dsq-comment-message-2492807785" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2492807785" class="dsq-comment-text">
	                                <p>Wow, thanks for the full length reply.  I should have been more specific in my question.  I actually wasnt following along with the entire series, was just looking to cherry pick some info I was looking for.  :)  I am using the client object so an example of one of my tests looks like this: <a href="https://disq.us/url?url=https%3A%2F%2Fgist.github.com%2Fzball%2F65981fd8d239295a1348%3ACadqBoHYrU_VeLLvrDmJ974GWeA&amp;cuid=1175718" rel="nofollow noopener">https://gist.github.com/zball/...</a></p><p>I wanted to avoid using a separate testing db, and just wanted to use an in memory version of sqlite.  Currently the sqlite is stored in a file and the db is created and destroyed on every test to ensure that every single test is run on a nice clean version of the db.  It works, but its SUPER slow.</p><p>This is config_test.yml: <a href="https://disq.us/url?url=https%3A%2F%2Fgist.github.com%2Fzball%2F8c362141bf4911d74977%3A4WY8YMZuEoJLvfCqC-teaQy78zw&amp;cuid=1175718" rel="nofollow noopener">https://gist.github.com/zball/...</a>.  If I change the path to :memory:, nothing happens.</p><p>Anyways, I greatly appreciate your previous reply and if what Im attempting just isnt possible, doesnt make any sense, or is out of the scope of the video just let me know.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2492494721" id="dsq-comment-2492494721">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2492494721">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-02</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2492494721" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2492494721" class="dsq-comment-text">
	                                <p>Hi there!</p><p>Ok, great question. First, using the "memory" SQLite database will *not* be possible if you're testing how we are - i.e. using something like Guzzle. Here's why:</p><p>1) In the test file, PHP initializes, you boot Symfony and tell it to create an in-memory database with some code in it.<br>2) Still in the file, you use Guzzle to make an *external* HTTP request to Symfony. The key is "external" - this is literally the same as making a web request to some code that lives on an entirely different server. Sure, your code all lives together on the same machine - but since this is an external, real HTTP request, your web server gets called and *it* loads up a new *fresh* PHP process and boots a *new* Symfony application. That HTTP request that's processing and *your* test code are not in the same PHP process: they're totally independent and cannot share anything in memory.</p><p>So, it's not Doctrine's issue or anything else - it's just not possible. Now, if you use Symfony's built-in testing tools - i.e. its Client object that's covered in the Symfony docs, then you *can* do this. That's because those are "fake" HTTP requests: it uses your already-booted Symfony app and sends requests into it. In this case there is just *one* PHP process and you *can* share memory. However, I prefer using real HTTP requests via Guzzle... because for me, this is simpler and you're really testing your API like a real, external user.</p><p>To accomplish what you want, I would try something like this:</p><p>A) Use a file-based SQL file<br>B) Load up that file with all the tables+data you want (i.e. you could run your fixtures to populate this file).<br>C) Copy this file to some other filename - e.g. db.template<br>D) At the *very* beginning of your test (probably even before Symfony is booted), copy "db.template" to whatever your *real* database file name should be (e.g. main.db). Then, at the end of the test, simple delete your "main.db" file to reset things.</p><p>I would still recommend sending your web requests through app_test.php, because you can then configure the test environment to use a different database filename (e.g. main_test.db)... which is nice only so that when you test, it doesn't completely kill your development database.</p><p>I think this is an issue we need to make *very* easy in Symfony - it's a really nice setup.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2491843428" id="dsq-comment-2491843428">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/zacball/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/13583/1115/avatar92.jpg?1418711116">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2491843428">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-02-02</span>
	                            <span class="dsq-commenter-name">zacball</span>
	                        </div>

	                        <div id="dsq-comment-message-2491843428" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2491843428" class="dsq-comment-text">
	                                <p>I have been trying to accomplish testing using sqlite and having no luck.  Here is an example from others of my issue: <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fdoctrine%2Fdbal%2Fissues%2F1518%23issuecomment-174101717%3Ag5pOWF5Ngswk3TXFWnTuAY0IDbk&amp;cuid=1175718" rel="nofollow noopener">https://github.com/doctrine/db...</a> .  Is there a way to accomplish this?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_test-database';var disqus_url = 'https://knpuniversity.com/screencast/symfony-rest/test-database';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="put-programmer#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/symfony-rest/test-database" addthis:title="Symfony RESTful API: Course 1">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"symfony-rest","courseIsOwned":false,"chapter":"Using a Test Database","chapterNumber":13,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Symfony RESTful API: Course 1';
        Core.courseId = 58
        Core.courseIsOwned = false;
        Core.courseSlug = 'symfony-rest';
                    Core.chapterTitle = 'Using a Test Database';
            Core.chapterNumber = 13;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'test-database';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

</body>
</html>
