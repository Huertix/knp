<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Using a Serializer > Symfony RESTful API: Course 1 | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 41855
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: Centralize\x20that\x20Response\x21 <i class="fa fa-play"></i>',
            'url': '/screencast/symfony-rest/centralizing-response#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="In this series, we get to work: by building the same API in the
[REST series](http://knpuniversity.com/screencast/rest), but leveraging
all the amazing tools and libraries of the Symfony framework. If terminology
like representations, resources, and hypermedia are new to you, start
with the [REST series](http://knpuniversity.com/screencast/rest) and
then come back. And get ready to get your (API) mind blown.

In Course 1, we&#039;ll start quick with:

* Build your first functional POST endpoint
* Decoding the Request body
* Using forms to handle incoming data
* Writing tests for your API
* Handling data &quot;seeding&quot; for your tests
* GET, PUT, DELETE and PATCH endpoints
* Using the JMS Serializer
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Using a Serializer">
<meta property="og:description" content="In this series, we get to work: by building the same API in the
[REST series](http://knpuniversity.com/screencast/rest), but leveraging
all the amazing tools and libraries of the Symfony framework">
<meta property="og:url" content="http://knpuniversity.com/screencast/symfony-rest/serializer-basics">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/symfony-rest:a5dc486f568b17f2957f648b5f78a465396f48e4/rest-sf.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="serializer-basics#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        18.
                            Using a Serializer
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">Symfony RESTful API: Course 1</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="post" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        POST To Create
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="post-json-body" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        Finish POST with a Form
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:42</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="form-post" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        Handling data with a Form
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:03</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="get-one" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        GET one Programmer
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:20</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="tightening-up-response" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Tightening up the Response
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:51</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="get-collection" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        GET a Collection of Programmers
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:24</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="first-test" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Add a Test!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:00</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="test-code-reuse" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Test Code Reuse
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:31</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="tests-clear-data" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Tests with the Container
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:23</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="mad-test-debugging" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        Mad Test Debugging
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:03</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="property-access-fixtures" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Test Fixtures and the PropertyAccess Component
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:24</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="response-asserter" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                12.
                        The ResponseAsserter!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:21</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="test-database" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                13.
                        Using a Test Database
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:52</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="put-programmer" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                14.
                        PUT is for Updating
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:41</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="readonly-fields" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                15.
                        Read-Only Fields
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:26</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="delete-programmer" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                16.
                        DELETE is for Saying Goodbye
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:59</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="patch-programmer" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                17.
                        PATCH is (also) for Updating (basically)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:18</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="serializer-basics" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                18.
                        Using a Serializer
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="centralizing-response" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                19.
                        Centralize that Response!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:40</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="serializer-control" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                20.
                        Taking Control of the Serializer
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:21</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/symfony-rest" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Using a Serializer</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>Symfony RESTful API: Course 1 Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $10.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="centralizing-response#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="serializer-basics#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="serializer-basics#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script markdown-content">
                                                                                        <a href="https://github.com/knpuniversity/symfony2-rest/edit/master/knpu/episode1/serializer-basics.md" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    <p>We're turning Programmers into JSON by hand inside <code>serializeProgrammer()</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="3e2386fd74">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-158" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            158 lines <span class="meta-divider"></span> <span title="src/AppBundle/Controller/Api/ProgrammerController.php">src/AppBundle/Controller/Api/ProgrammerController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-15" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 15
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="16"></td>
            <td class="blob-code"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ProgrammerController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BaseController</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="17"></td>
            <td class="blob-code"></span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="18-147" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 18 - 147
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="148"></td>
            <td class="blob-code">    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">serializeProgrammer</span><span class="hljs-params">(Programmer $programmer)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="149"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="150"></td>
            <td class="blob-code">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">array</span>(</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="151"></td>
            <td class="blob-code">            <span class="hljs-string">'nickname'</span> =&gt; $programmer-&gt;getNickname(),</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="152"></td>
            <td class="blob-code">            <span class="hljs-string">'avatarNumber'</span> =&gt; $programmer-&gt;getAvatarNumber(),</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="153"></td>
            <td class="blob-code">            <span class="hljs-string">'powerLevel'</span> =&gt; $programmer-&gt;getPowerLevel(),</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="154"></td>
            <td class="blob-code">            <span class="hljs-string">'tagLine'</span> =&gt; $programmer-&gt;getTagLine(),</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="155"></td>
            <td class="blob-code">        );</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="156"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="157"></td>
            <td class="blob-code">}</td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>That's pretty ok with just one resource, but this will be a pain when we
have a lot more - especially when resources start having relations to other
resources. It'll turn into a whole soap opera. To make this way more fun, 
we'll use a serializer library: code that's really good at turning objects 
into an array, or JSON or XML.</p>
<p>The one we'll use is called "JMS Serializer" and there's a bundle for it called
<a href="http://jmsyst.com/bundles/JMSSerializerBundle">JMSSerializerBundle</a>. This
is a <em>fanstatic</em> library and incredibly powerful. It <em>can</em> get complex in
a few cases, but we'll cover those. You should also know that this library
is not maintained all that well anymore and you'll see a little bug that we'll
have to work around. But it's been around for years, it's really stable and
has a lot of users.</p>
<p>Symfony itself ships with a serializer, Symfony 2.7 has a lot of features that 
JMS Serializer has. There's a push inside Symfony to make it eventually replace 
JMS Serialize for most use-cases. So, keep an eye on that. Oh, and JMS Serializer 
is licensed under Apache2, which is a little bit less permissive than MIT, which 
is Symfony's license. If that worries you, look into it further.</p>
<p>With all that out of the way, let's get to work. Copy the <code>composer require</code>
line and paste it into the terminal:</p>
<pre><code class="language-bash"><div class="line">composer require jms/serializer-bundle</div></code></pre>
<p>While we're waiting, copy the bundle line and add this into our <code>AppKernel</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="0fdffc1c5f">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-40" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            40 lines <span class="meta-divider"></span> <span title="app/AppKernel.php">app/AppKernel.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-5" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 5
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="6"></td>
            <td class="blob-code"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppKernel</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Kernel</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="7"></td>
            <td class="blob-code"></span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="8"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">registerBundles</span><span class="hljs-params">()</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="9"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="10"></td>
            <td class="blob-code">        $bundles = <span class="hljs-keyword">array</span>(</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="11-19" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 11 - 19
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="20"></td>
            <td class="blob-code">            <span class="hljs-keyword">new</span> \JMS\SerializerBundle\JMSSerializerBundle(),</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="21"></td>
            <td class="blob-code">        );</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="22-31" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 22 - 31
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="32"></td>
            <td class="blob-code">        <span class="hljs-keyword">return</span> $bundles;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="33"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="34-40" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 34 - 40
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>This gives us a new service calld <code>jms_serializer</code>, which can turn any object
into JSON or XML. Not unlike a Harry Potter wizarding spell.... accio JSON!
So in the controller, rename <code>serializeProgrammer</code> to <code>serialize</code> and make 
the argument <code>$data</code>, so you can pass it anything. And inside, just return 
<code>$this-&gt;container-&gt;get('jms_serializer')</code> and call <code>serialize()</code> on that, passing it <code>$data</code> and <code>json</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="1cb9a4e0f6">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-151" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            151 lines <span class="meta-divider"></span> <span title="src/AppBundle/Controller/Api/ProgrammerController.php">src/AppBundle/Controller/Api/ProgrammerController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-15" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 15
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="16"></td>
            <td class="blob-code"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ProgrammerController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BaseController</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="17"></td>
            <td class="blob-code"></span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="18-144" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 18 - 144
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="145"></td>
            <td class="blob-code">    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">serialize</span><span class="hljs-params">($data)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="146"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="147"></td>
            <td class="blob-code">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;container-&gt;get(<span class="hljs-string">'jms_serializer'</span>)</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="148"></td>
            <td class="blob-code">            -&gt;serialize($data, <span class="hljs-string">'json'</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="149"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="150"></td>
            <td class="blob-code">}</td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>PhpStorm is angry, just because composer hasn't finished downloading yet:
we're working ahead.</p>
<p>Find everywhere we used <code>serializeProgrammer()</code> and change those. The only
trick is that it's not returning an array anymore, it's returning JSON. So
I'll say <code>$json = $this-&gt;serialize($programmer)</code>. And we can't use <code>JsonResponse</code>
anymore, or it'll encode things twice. Create a regular <code>Response</code> instead.
Copy this and repeat the same thing in <code>showAction()</code>. Use a normal <code>Response</code>
here too:</p>
<p><div class="code-block-wrapper" data-code-block-guid="be8d29cc5e">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-151" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            151 lines <span class="meta-divider"></span> <span title="src/AppBundle/Controller/Api/ProgrammerController.php">src/AppBundle/Controller/Api/ProgrammerController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-21" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 21
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="22"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">newAction</span><span class="hljs-params">(Request $request)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="23"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="24-33" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 24 - 33
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="34"></td>
            <td class="blob-code">        $json = <span class="hljs-keyword">$this</span>-&gt;serialize($programmer);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="35"></td>
            <td class="blob-code">        $response = <span class="hljs-keyword">new</span> Response($json, <span class="hljs-number">201</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="36-39" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 36 - 39
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="40"></td>
            <td class="blob-code">        $response-&gt;headers-&gt;set(<span class="hljs-string">'Location'</span>, $programmerUrl);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="41"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="42"></td>
            <td class="blob-code">        <span class="hljs-keyword">return</span> $response;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="43"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="44-48" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 44 - 48
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="49"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">showAction</span><span class="hljs-params">($nickname)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="50"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="51-61" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 51 - 61
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="62"></td>
            <td class="blob-code">        $json = <span class="hljs-keyword">$this</span>-&gt;serialize($programmer);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="63"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="64"></td>
            <td class="blob-code">        $response = <span class="hljs-keyword">new</span> Response($json, <span class="hljs-number">200</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="65"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="66"></td>
            <td class="blob-code">        <span class="hljs-keyword">return</span> $response;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="67"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="68-151" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 68 - 151
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>For <code>listAction</code>, life gets easier. Just put the <code>$programmers</code> array inside 
the <code>$data</code> array and then pass this big structure into the <code>serialize()</code> function:</p>
<p><div class="code-block-wrapper" data-code-block-guid="d1149887b9">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-151" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            151 lines <span class="meta-divider"></span> <span title="src/AppBundle/Controller/Api/ProgrammerController.php">src/AppBundle/Controller/Api/ProgrammerController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-72" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 72
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="73"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">listAction</span><span class="hljs-params">()</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="74"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="75"></td>
            <td class="blob-code">        $programmers = <span class="hljs-keyword">$this</span>-&gt;getDoctrine()</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="76"></td>
            <td class="blob-code">            -&gt;getRepository(<span class="hljs-string">'AppBundle:Programmer'</span>)</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="77"></td>
            <td class="blob-code">            -&gt;findAll();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="78"></td>
            <td class="blob-code">        $json = <span class="hljs-keyword">$this</span>-&gt;serialize([<span class="hljs-string">'programmers'</span> =&gt; $programmers]);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="79"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="80"></td>
            <td class="blob-code">        $response = <span class="hljs-keyword">new</span> Response($json, <span class="hljs-number">200</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="81"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="82"></td>
            <td class="blob-code">        <span class="hljs-keyword">return</span> $response;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="83"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="84-151" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 84 - 151
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>The serializer has no problem serializing arrays of things. Make the same
changes in <code>updateAction()</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="5cd1be7278">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-151" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            151 lines <span class="meta-divider"></span> <span title="src/AppBundle/Controller/Api/ProgrammerController.php">src/AppBundle/Controller/Api/ProgrammerController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-88" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 88
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="89"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updateAction</span><span class="hljs-params">($nickname, Request $request)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="90"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="91-108" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 91 - 108
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="109"></td>
            <td class="blob-code">        $json = <span class="hljs-keyword">$this</span>-&gt;serialize($programmer);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="110"></td>
            <td class="blob-code">        $response = <span class="hljs-keyword">new</span> Response($json, <span class="hljs-number">200</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="111"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="112"></td>
            <td class="blob-code">        <span class="hljs-keyword">return</span> $response;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="113"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="114-151" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 114 - 151
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Great! Let's check on Composer. It's done, so let's try our entire test
suite:</p>
<pre><code class="language-bash"><div class="line">phpunit -c app</div></code></pre>
<p>Ok, things are <em>not</em> going well. One of them says:</p>
<pre><code>Error reading property "avatarNumber" from available keys
(id, nickname, avatar_number, power_level)</code></pre>
<p>The responses on top show the same thing: all our properties are being underscored.
The JMS Serializer library does this by default... which I kinda hate. So
we're going to turn it off.</p>
<p>The library has something called a "naming strategy" - basically how it transforms
property names into JSON or XML keys. You can see some of this inside the
bundle's configuration. They have a built-in class for doing nothing: it's
called the "identical" naming strategy. Unfortunately, the bundle has a bug
that makes this not configurable in the normal way. Instead, we need to go 
kung-foo on it.</p>
<p>Open up <code>config.yml</code>. I'll paste a big long ugly new parameter here:</p>
<p><div class="code-block-wrapper" data-code-block-guid="10faf628df">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-79" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            79 lines <span class="meta-divider"></span> <span title="app/config/config.yml">app/config/config.yml</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-5" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 5
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="6"></td>
            <td class="blob-code"><span class="hljs-attr">parameters:</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="7"></td>
            <td class="blob-code">    <span class="hljs-comment"># a hack - should be configurable under jms_serializer, but the property_naming.id</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="8"></td>
            <td class="blob-code">    <span class="hljs-comment"># doesn't seem to be taken into account at all.</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="9"></td>
            <td class="blob-code">    jms_serializer.camel_case_naming_strategy.class: JMS\Serializer\Naming\IdenticalPropertyNamingStrategy</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="10-79" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 10 - 79
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>This creates a new parameter called <code>jms_serializer.camel_case_naming_strategy.class</code>.
I'm setting this to <code>JMS\Serializer\Naming\IdenticalPropertyNamingStrategy</code>.
That is a total hack - I only know to do this because I went deep enough
into the bundle to find this. If you want to know how this works, check out
our <a href="https://knpuniversity.com/screencast/symfony-journey-di">Journey to the Center of Symfony: Dependency Injection</a>
screencast: it's good nerdy stuff. The important thing for us is that this
will leave our property names alone.</p>
<p>So now if we run the test:</p>
<pre><code class="language-bash"><div class="line">phpunit -c app</div></code></pre>
<p>we still have failures. But in the dumped response, our property names are
back!</p>

    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_serializer-basics';var disqus_url = 'https://knpuniversity.com/screencast/symfony-rest/serializer-basics';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="centralizing-response#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/symfony-rest/serializer-basics" addthis:title="Symfony RESTful API: Course 1">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"symfony-rest","courseIsOwned":false,"chapter":"Using a Serializer","chapterNumber":18,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Symfony RESTful API: Course 1';
        Core.courseId = 58
        Core.courseIsOwned = false;
        Core.courseSlug = 'symfony-rest';
                    Core.chapterTitle = 'Using a Serializer';
            Core.chapterNumber = 18;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'serializer-basics';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

</body>
</html>
