<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>PUT is for Updating > Symfony RESTful API: Course 1 | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 41851
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: Read\x2DOnly\x20Fields <i class="fa fa-play"></i>',
            'url': '/screencast/symfony-rest/readonly-fields#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="In this series, we get to work: by building the same API in the
[REST series](http://knpuniversity.com/screencast/rest), but leveraging
all the amazing tools and libraries of the Symfony framework. If terminology
like representations, resources, and hypermedia are new to you, start
with the [REST series](http://knpuniversity.com/screencast/rest) and
then come back. And get ready to get your (API) mind blown.

In Course 1, we&#039;ll start quick with:

* Build your first functional POST endpoint
* Decoding the Request body
* Using forms to handle incoming data
* Writing tests for your API
* Handling data &quot;seeding&quot; for your tests
* GET, PUT, DELETE and PATCH endpoints
* Using the JMS Serializer
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="PUT is for Updating">
<meta property="og:description" content="In this series, we get to work: by building the same API in the
[REST series](http://knpuniversity.com/screencast/rest), but leveraging
all the amazing tools and libraries of the Symfony framework">
<meta property="og:url" content="http://knpuniversity.com/screencast/symfony-rest/put-programmer">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/symfony-rest:a5dc486f568b17f2957f648b5f78a465396f48e4/rest-sf.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="put-programmer#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        14.
                            PUT is for Updating
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">Symfony RESTful API: Course 1</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="post" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        POST To Create
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="post-json-body" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        Finish POST with a Form
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:42</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="form-post" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        Handling data with a Form
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:03</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="get-one" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        GET one Programmer
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:20</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="tightening-up-response" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Tightening up the Response
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:51</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="get-collection" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        GET a Collection of Programmers
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:24</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="first-test" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Add a Test!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:00</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="test-code-reuse" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Test Code Reuse
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:31</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="tests-clear-data" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Tests with the Container
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:23</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="mad-test-debugging" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        Mad Test Debugging
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:03</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="property-access-fixtures" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Test Fixtures and the PropertyAccess Component
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:24</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="response-asserter" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                12.
                        The ResponseAsserter!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:21</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="test-database" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                13.
                        Using a Test Database
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:52</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="put-programmer" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                14.
                        PUT is for Updating
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:41</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="readonly-fields" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                15.
                        Read-Only Fields
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:26</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="delete-programmer" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                16.
                        DELETE is for Saying Goodbye
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:59</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="patch-programmer" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                17.
                        PATCH is (also) for Updating (basically)
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:18</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="serializer-basics" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                18.
                        Using a Serializer
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="centralizing-response" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                19.
                        Centralize that Response!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:40</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="serializer-control" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                20.
                        Taking Control of the Serializer
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:21</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/symfony-rest" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">PUT is for Updating</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>Symfony RESTful API: Course 1 Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $10.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="readonly-fields#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="put-programmer#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="put-programmer#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script markdown-content">
                                                                                        <a href="https://github.com/knpuniversity/symfony2-rest/edit/master/knpu/episode1/put-programmer.md" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    <p>Suppose now that someone using our API needs to <em>edit</em> a programmer: maybe
they want to change its avatar. What HTTP method should we use? And what should 
the endpoint return? Answering those questions is one of the reasons we always 
start by writing a test - it's like the design phase of a feature.</p>
<p>Create a <code>public function testPUTProgrammer()</code> method:</p>
<p><div class="code-block-wrapper" data-code-block-guid="a7fd55ca52">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-92" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            92 lines <span class="meta-divider"></span> <span title="src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php">src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-71" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 71
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="72"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">testPUTProgrammer</span><span class="hljs-params">()</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="73"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="74-89" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 74 - 89
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="90"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="91-92" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 91 - 92
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p><em>Usually</em>, if you want to edit a resource, you'll use the PUT HTTP method.
And so far, we've seen POST for creating and PUT for updating. But it's more
complicated than that, and involves PUT being idempotent. We have a full 5
minute video on this in our original REST screencast (see
<a href="../rest/put-versus-post">PUT versus POST</a>),
and if you don't know the difference between PUT and POST, you should geek
out on this.</p>
<p>Inside the test, copy the <code>createProgrammer()</code> for CowboyCoder from earlier.
Yep, this programmer definitely needs his avatar changed. Next copy the request
and assert stuff from <code>testGETProgrammer()</code> and add that. Ok, what needs
to be updated. Change the request from <code>get()</code> to <code>put()</code>. And like earlier,
we need to send a JSON string <code>body</code> in the request. Grab one of the <code>$data</code>
arrays from earlier, add it here, then <code>json_encode()</code> it for the body. This
is a combination of stuff we've already done:</p>
<p><div class="code-block-wrapper" data-code-block-guid="2ea197b91b">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-92" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            92 lines <span class="meta-divider"></span> <span title="src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php">src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-71" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 71
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="72"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">testPUTProgrammer</span><span class="hljs-params">()</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="73"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="74"></td>
            <td class="blob-code">        <span class="hljs-keyword">$this</span>-&gt;createProgrammer(<span class="hljs-keyword">array</span>(</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="75"></td>
            <td class="blob-code">            <span class="hljs-string">'nickname'</span> =&gt; <span class="hljs-string">'CowboyCoder'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="76"></td>
            <td class="blob-code">            <span class="hljs-string">'avatarNumber'</span> =&gt; <span class="hljs-number">5</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="77"></td>
            <td class="blob-code">            <span class="hljs-string">'tagLine'</span> =&gt; <span class="hljs-string">'foo'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="78"></td>
            <td class="blob-code">        ));</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="79"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="80"></td>
            <td class="blob-code">        $data = <span class="hljs-keyword">array</span>(</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="81-83" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 81 - 83
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="84"></td>
            <td class="blob-code">        );</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="85"></td>
            <td class="blob-code">        $response = <span class="hljs-keyword">$this</span>-&gt;client-&gt;put(<span class="hljs-string">'/api/programmers/CowboyCoder'</span>, [</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="86"></td>
            <td class="blob-code">            <span class="hljs-string">'body'</span> =&gt; json_encode($data)</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="87"></td>
            <td class="blob-code">        ]);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="88-89" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 88 - 89
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="90"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="91-92" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 91 - 92
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>For a PUT request, you're supposed to send the <em>entire</em> resource in the body,
even if you only want to update one field. So we need to send <code>nickname</code>,
<code>avatarNumber</code> <em>and</em> <code>tagLine</code>. Update the <code>$data</code> array so the <code>nickname</code>
matches <code>CowboyCoder</code>, but change the <code>avatarNumber</code> to 2. We won't update
the <code>tagLine</code>, so send <code>foo</code> and add that to <code>createProgrammer()</code> to make
sure this is CowboyCoder's starting <code>tagLine</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="25591ea067">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-92" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            92 lines <span class="meta-divider"></span> <span title="src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php">src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-71" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 71
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="72"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">testPUTProgrammer</span><span class="hljs-params">()</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="73"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="74"></td>
            <td class="blob-code">        <span class="hljs-keyword">$this</span>-&gt;createProgrammer(<span class="hljs-keyword">array</span>(</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="75-76" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 75 - 76
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="77"></td>
            <td class="blob-code">            <span class="hljs-string">'tagLine'</span> =&gt; <span class="hljs-string">'foo'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="78"></td>
            <td class="blob-code">        ));</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="79"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="80"></td>
            <td class="blob-code">        $data = <span class="hljs-keyword">array</span>(</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="81"></td>
            <td class="blob-code">            <span class="hljs-string">'nickname'</span> =&gt; <span class="hljs-string">'CowboyCoder'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="82"></td>
            <td class="blob-code">            <span class="hljs-string">'avatarNumber'</span> =&gt; <span class="hljs-number">2</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="83"></td>
            <td class="blob-code">            <span class="hljs-string">'tagLine'</span> =&gt; <span class="hljs-string">'foo'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="84"></td>
            <td class="blob-code">        );</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="85"></td>
            <td class="blob-code">        $response = <span class="hljs-keyword">$this</span>-&gt;client-&gt;put(<span class="hljs-string">'/api/programmers/CowboyCoder'</span>, [</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="86"></td>
            <td class="blob-code">            <span class="hljs-string">'body'</span> =&gt; json_encode($data)</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="87"></td>
            <td class="blob-code">        ]);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="88-89" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 88 - 89
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="90"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="91-92" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 91 - 92
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>This will create the Programmer in the database then send a PUT request where
only the <code>avatarNumber</code> is different. Asserting a 200 status code is perfect, and
like most endpoints, we'll return the JSON programmer. But, we're already
testing the JSON pretty well in other spots. So here, just do a sanity check: assert
that the <code>avatarNumber</code> has in fact changed to 2:</p>
<p><div class="code-block-wrapper" data-code-block-guid="f0fe136d49">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-92" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            92 lines <span class="meta-divider"></span> <span title="src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php">src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-71" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 71
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="72"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">testPUTProgrammer</span><span class="hljs-params">()</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="73"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="74-84" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 74 - 84
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="85"></td>
            <td class="blob-code">        $response = <span class="hljs-keyword">$this</span>-&gt;client-&gt;put(<span class="hljs-string">'/api/programmers/CowboyCoder'</span>, [</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="86"></td>
            <td class="blob-code">            <span class="hljs-string">'body'</span> =&gt; json_encode($data)</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="87"></td>
            <td class="blob-code">        ]);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="88-88" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... line 88
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="89"></td>
            <td class="blob-code">        <span class="hljs-keyword">$this</span>-&gt;asserter()-&gt;assertResponsePropertyEquals($response, <span class="hljs-string">'avatarNumber'</span>, <span class="hljs-number">2</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="90"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="91-92" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 91 - 92
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Ready? Try it out, with a <code>--filter testPUTProgrammer</code> to only run <em>this</em>
one:</p>
<pre><code class="language-bash"><div class="line">phpunit -c app --filter testPUTProgrammer</div></code></pre>
<p>Hey, a 405 error! Method not allowed. That makes perfect sense: we haven't
added this endpoint yet. Test check! Let's code!</p>
<h2 id="adding-the-put-controller">Adding the PUT Controller <a class="headerlink" href="put-programmer#adding-the-put-controller" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Add a <code>public function updateAction()</code>. The start of this will look a lot
like <code>showAction()</code>, so copy its Route stuff, but change the method to <code>PUT</code>,
and change the name so it's unique. For arguments, add <code>$nickname</code> and also
<code>$request</code>, because we'll need that in a second:</p>
<p><div class="code-block-wrapper" data-code-block-guid="945fee7f14">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-130" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            130 lines <span class="meta-divider"></span> <span title="src/AppBundle/Controller/Api/ProgrammerController.php">src/AppBundle/Controller/Api/ProgrammerController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-87" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 87
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="88"></td>
            <td class="blob-code">    <span class="hljs-comment">/**</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="89"></td>
            <td class="blob-code">     * <span class="hljs-doctag">@Route</span>("/api/programmers/{nickname}")</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="90"></td>
            <td class="blob-code">     * <span class="hljs-doctag">@Method</span>("PUT")</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="91"></td>
            <td class="blob-code">     */</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="92"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updateAction</span><span class="hljs-params">($nickname, Request $request)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="93"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="94-116" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 94 - 116
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="117"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="118-130" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 118 - 130
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Ok, we have two easy jobs: query for the <code>Programmer</code> then update it from
the JSON. Steal the query logic from <code>showAction()</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="2c414fe811">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-130" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            130 lines <span class="meta-divider"></span> <span title="src/AppBundle/Controller/Api/ProgrammerController.php">src/AppBundle/Controller/Api/ProgrammerController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-91" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 91
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="92"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updateAction</span><span class="hljs-params">($nickname, Request $request)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="93"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="94"></td>
            <td class="blob-code">        $programmer = <span class="hljs-keyword">$this</span>-&gt;getDoctrine()</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="95"></td>
            <td class="blob-code">            -&gt;getRepository(<span class="hljs-string">'AppBundle:Programmer'</span>)</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="96"></td>
            <td class="blob-code">            -&gt;findOneByNickname($nickname);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="97"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="98"></td>
            <td class="blob-code">        <span class="hljs-keyword">if</span> (!$programmer) {</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="99"></td>
            <td class="blob-code">            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">$this</span>-&gt;createNotFoundException(sprintf(</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="100"></td>
            <td class="blob-code">                <span class="hljs-string">'No programmer found with nickname "%s"'</span>,</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="101"></td>
            <td class="blob-code">                $nickname</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="102"></td>
            <td class="blob-code">            ));</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="103"></td>
            <td class="blob-code">        }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="104-116" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 104 - 116
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="117"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="118-130" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 118 - 130
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>The updating part is something we did in the original POST endpoint. Steal
<em>everything</em> from <code>newAction()</code>, though we don't need all of it. Yes yes,
we <em>will</em> have some code duplication for a bit. Just trust me - we'll reorganize
things over time. Get rid of the <code>new Programmer()</code> line - we're querying
for one. And take out the <code>setUser()</code> code too: that's just needed on create.
And because we're not creating a resource, we don't need the <code>Location</code> header
and the status code should be 200, not 201:</p>
<p><div class="code-block-wrapper" data-code-block-guid="4d8ec4b0c5">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-130" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            130 lines <span class="meta-divider"></span> <span title="src/AppBundle/Controller/Api/ProgrammerController.php">src/AppBundle/Controller/Api/ProgrammerController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-91" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 91
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="92"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updateAction</span><span class="hljs-params">($nickname, Request $request)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="93"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="94-104" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 94 - 104
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="105"></td>
            <td class="blob-code">        $data = json_decode($request-&gt;getContent(), <span class="hljs-keyword">true</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="106"></td>
            <td class="blob-code">        $form = <span class="hljs-keyword">$this</span>-&gt;createForm(<span class="hljs-keyword">new</span> ProgrammerType(), $programmer);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="107"></td>
            <td class="blob-code">        $form-&gt;submit($data);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="108"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="109"></td>
            <td class="blob-code">        $em = <span class="hljs-keyword">$this</span>-&gt;getDoctrine()-&gt;getManager();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="110"></td>
            <td class="blob-code">        $em-&gt;persist($programmer);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="111"></td>
            <td class="blob-code">        $em-&gt;flush();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="112"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="113"></td>
            <td class="blob-code">        $data = <span class="hljs-keyword">$this</span>-&gt;serializeProgrammer($programmer);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="114"></td>
            <td class="blob-code">        $response = <span class="hljs-keyword">new</span> JsonResponse($data, <span class="hljs-number">200</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="115"></td>
            <td class="blob-code"></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="116"></td>
            <td class="blob-code">        <span class="hljs-keyword">return</span> $response;</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="117"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="118-130" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 118 - 130
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Done! And if you look at the function, it's really simple. Most of the duplication
is for pretty mundane code, like creating a form and saving the <code>Programmer</code>.
Creating endpoints is already really easy.</p>
<p>Before I congratulate us any more, let's give this a try:</p>
<pre><code class="language-bash"><div class="line">phpunit -c app --filter testPUTProgrammer</div></code></pre>
<p>Uh oh! 404! But check out that really clear error message from the response:</p>
<pre><code>No programmer found for username UnitTester</code></pre>
<p>Well yea! Because we should be editing CowboyCoder. In <code>ProgrammerControllerTest</code>,
I made a copy-pasta error! Update the PUT URL to be <code>/api/programmers/CowboyCoder</code>,
not <code>UnitTester</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="3242209be5">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-92" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            92 lines <span class="meta-divider"></span> <span title="src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php">src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-71" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 71
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="72"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">testPUTProgrammer</span><span class="hljs-params">()</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="73"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="74-84" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 74 - 84
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="85"></td>
            <td class="blob-code">        $response = <span class="hljs-keyword">$this</span>-&gt;client-&gt;put(<span class="hljs-string">'/api/programmers/CowboyCoder'</span>, [</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="86"></td>
            <td class="blob-code">            <span class="hljs-string">'body'</span> =&gt; json_encode($data)</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="87"></td>
            <td class="blob-code">        ]);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="88-89" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 88 - 89
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="90"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="91-92" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 91 - 92
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Now we're ready again:</p>
<pre><code class="language-bash"><div class="line">phpunit -c app --filter testPUTProgrammer</div></code></pre>
<p>We're passing!</p>
<h2 id="centralizing-form-data-processing">Centralizing Form Data Processing <a class="headerlink" href="put-programmer#centralizing-form-data-processing" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Before we go on we need to clean up some of this duplication. It's small, 
but each write endpoint is processing the request body in the same way: by 
fetching the content from the request, calling <code>json_decode()</code> on that, then 
passing it to <code>$form-&gt;submit()</code>.</p>
<p>Create a new private function called <code>processForm()</code>. This will have two
arguments - <code>$request</code> and the form object, which is a <code>FormInterface</code> instance,
not that that's too important:</p>
<p><div class="code-block-wrapper" data-code-block-guid="cc047a0d41">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-133" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            133 lines <span class="meta-divider"></span> <span title="src/AppBundle/Controller/Api/ProgrammerController.php">src/AppBundle/Controller/Api/ProgrammerController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-116" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 116
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="117"></td>
            <td class="blob-code">    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">processForm</span><span class="hljs-params">(Request $request, FormInterface $form)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="118"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="119-120" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 119 - 120
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="121"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="122-133" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 122 - 133
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>We'll move two things here: the two lines that read and decode the request
body and the <code>$form-&gt;submit()</code> line:</p>
<p><div class="code-block-wrapper" data-code-block-guid="8ac1472c14">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-133" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            133 lines <span class="meta-divider"></span> <span title="src/AppBundle/Controller/Api/ProgrammerController.php">src/AppBundle/Controller/Api/ProgrammerController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-116" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 116
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="117"></td>
            <td class="blob-code">    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">processForm</span><span class="hljs-params">(Request $request, FormInterface $form)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="118"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="119"></td>
            <td class="blob-code">        $data = json_decode($request-&gt;getContent(), <span class="hljs-keyword">true</span>);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="120"></td>
            <td class="blob-code">        $form-&gt;submit($data);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="121"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="122-133" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 122 - 133
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>If this looks small to you, it is! But centralizing the <code>json_decode()</code> means
we'll be able to handle invalid JSON in one spot, really easily in the next
episode.</p>
<p>In <code>updateAction()</code>, call <code>$this-&gt;processForm()</code> passing it the <code>$request</code>
and the <code>$form</code>. Celebrate by removing the <code>json_decode</code> lines. Do the same
thing up in <code>newAction</code>:</p>
<p><div class="code-block-wrapper" data-code-block-guid="8928a1e494">
    <div class="meta">
        <div class="actions">
            <span class="fa fa-clipboard js-activate-clipboard" data-toggle="tooltip" title="Copy Code" data-placement="top"></span>
        </div>
        <div class="info">
                        <span class="js-expand-all" data-range="1-133" data-toggle="tooltip" title="Show All Lines" data-placement="top">
                <i class="fa fa-expand js-icon-load-more"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </span>
            
            133 lines <span class="meta-divider"></span> <span title="src/AppBundle/Controller/Api/ProgrammerController.php">src/AppBundle/Controller/Api/ProgrammerController.php</span>
        </div>
    </div>
    <table class="hljs code-block-table">
        <tbody class="js-tr-container">
                <tr>
                    <td class="line-number line-number-expandable" data-range="1-20" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 1 - 20
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="21"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">newAction</span><span class="hljs-params">(Request $request)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="22"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="23"></td>
            <td class="blob-code">        $programmer = <span class="hljs-keyword">new</span> Programmer();</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="24"></td>
            <td class="blob-code">        $form = <span class="hljs-keyword">$this</span>-&gt;createForm(<span class="hljs-keyword">new</span> ProgrammerType(), $programmer);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="25"></td>
            <td class="blob-code">        <span class="hljs-keyword">$this</span>-&gt;processForm($request, $form);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="26-41" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 26 - 41
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="42"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="43-90" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 43 - 90
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="91"></td>
            <td class="blob-code">    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updateAction</span><span class="hljs-params">($nickname, Request $request)</span></td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="92"></td>
            <td class="blob-code">    </span>{</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="93-103" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 93 - 103
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="104"></td>
            <td class="blob-code">        $form = <span class="hljs-keyword">$this</span>-&gt;createForm(<span class="hljs-keyword">new</span> ProgrammerType(), $programmer);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="105"></td>
            <td class="blob-code">        <span class="hljs-keyword">$this</span>-&gt;processForm($request, $form);</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="106-114" data-last="0">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 106 - 114
                            </td>
            </tr>
    <tr>
                    <td class="line-number line-number-displayed" data-line-number-displayed="115"></td>
            <td class="blob-code">    }</td>
            </tr>
    <tr>
                    <td class="line-number line-number-expandable" data-range="116-133" data-last="1">
                <i class="fa fa-arrows-v js-icon-load-more" data-toggle="tooltip" title="Show Lines" data-placement="left"></i>
                <i class="fa fa-spinner fa-spin js-icon-loading"></i>
            </td>
            <td class="gap-line">
                                                    ... lines 116 - 133
                            </td>
            </tr>

        </tbody>
    </table>
</div>
</p>
<p>Yay! We're just a little cleaner. To really congratulate ourselves, try the whole test suite:</p>
<pre><code class="language-bash"><div class="line">phpunit -c app</div></code></pre>
<p>Wow!</p>

    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_put-programmer';var disqus_url = 'https://knpuniversity.com/screencast/symfony-rest/put-programmer';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="readonly-fields#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/symfony-rest/put-programmer" addthis:title="Symfony RESTful API: Course 1">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"symfony-rest","courseIsOwned":false,"chapter":"PUT is for Updating","chapterNumber":14,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Symfony RESTful API: Course 1';
        Core.courseId = 58
        Core.courseIsOwned = false;
        Core.courseSlug = 'symfony-rest';
                    Core.chapterTitle = 'PUT is for Updating';
            Core.chapterNumber = 14;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'put-programmer';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

</body>
</html>
