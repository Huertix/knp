<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Symfony: Keep it Simple with @Route and Templates > Symfony Best Practices | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: true,
            courseChapterId: 5200
        };

            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="I want to show you some of my favorite parts of the new
Symfony best practices. The aim is to keep our applications
as simple as possible by avoiding unnecessary files and extra
directories. It might be shocking at first, but I think
you&#039;ll like it :).
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Symfony: Keep it Simple with @Route and Templates">
<meta property="og:description" content="I want to show you some of my favorite parts of the new
Symfony best practices. The aim is to keep our applications
as simple as possible by avoiding unnecessary files and extra
directories">
<meta property="og:url" content="http://knpuniversity.com/screencast/symfony-best-practices/route-annotation-templates">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/symfony-best-practices:0c44e6ade1ed8bad0afb2297e43aaf670e799b41/best-practices.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="route-annotation-templates#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        1.
                            Symfony: Keep it Simple with @Ro...
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="resume">Symfony Best Practices</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


                                <p class="one-tut-warning">
                      <i class="fa fa-lightbulb-o"></i> This course has only one video
                  </p>
              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="route-annotation-templates" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Symfony: Keep it Simple with @Route and Templates
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 8:42</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <div class="dropdown download-buy-buttons">
              <button class="btn btn-success dropdown-toggle" type="button" id="downloadDropdown" data-toggle="dropdown" aria-expanded="true">
                  <span><i class="fa fa-download"></i></span>
                  <span class="hidden-xs">Download</span>
                  <span class="caret"></span>
              </button>
              <ul class="list-unstyled dropdown-menu pull-right" role="menu" aria-labelledby="downloadDropdown">
                  
                  <li><a href="../get/symfony-best-practices/code/0c44e6ade1ed8bad0afb2297e43aaf670e799b41" class="js-analytics-download" data-download-type="code"><i class="fa fa-code"></i> Course Code</a></li>

                                        <li><a href="http://knpuniversity.com/screencast/symfony-best-practices/route-annotation-templates/download/video" class="js-analytics-download" data-download-type="video"><i class="fa fa-video-camera"></i> This Video</a></li>
                                        <li><a href="../get/symfony-best-practices/script/0c44e6ade1ed8bad0afb2297e43aaf670e799b41" class="js-analytics-download" data-download-type="script"><i class="fa fa-book"></i> Course Script</a></li>              </ul>
          </div>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Symfony: Keep it Simple with @Route and Templates</h1>
                
                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="resume"><em>Symfony Best Practices Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                        <div class="hidden alert alert-danger js-video-not-supported" style="margin-bottom: 10px;">
        <h4>Video not working?</h4>
        It looks like your browser may not support the H264 codec.
        If you're using Linux+Firefox, try a different browser or try
        installing the
        <code>gstreamer0.10-ffmpeg</code>
        <code>gstreamer0.10-plugins-good</code> packages.
        <br/><br/>
        Thanks! This saves us
        from needing to use Flash or encode videos in multiple formats. And that
        let's us get back to making more videos :). But as always, please feel
        free to <a href="../../contact">message us</a>.
    </div>

    <video id="js-video-player" class="video-js vjs-default-skin vjs-big-play-centered "
            controls preload="auto" width="auto" height="auto"
            poster="http://i.vimeocdn.com/video/536926090_960x600.jpg">
        <source src="http://player.vimeo.com/external/140212859.hd.mp4?s=7145c005efee1db1618e25f0d55280cb&amp;profile_id=113&amp;oauth2_token_id=308801954" type="video/mp4" data-res="HD" data-default="true" />
        <source src="http://player.vimeo.com/external/140212859.sd.mp4?s=4fec86c32240136571bf414d15868212&amp;profile_id=112&amp;oauth2_token_id=308801954" type="video/mp4" data-res="SD" />
        <p class="vjs-no-js">
            To view this video please enable JavaScript, and consider upgrading to a web browser that
            <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
        </p>
    </video>


                            <div class="end-show js-post-play-wrapper" style="display: none;">
                                <p class="end-show-header">You're Killing it!</p>

                                <div class="text-center overlay-btn">
                                    <!-- This is filled in via JS -->
                                    <a href="route-annotation-templates#" class="btn btn-lg btn-warning js-next-item-anchor"></a>
                                    <div class="js-all-finished-holder" style="display: none; color: #fff;">
                                        Another Tutorial down!<br/><br/>
                                                                                    <a href="../tag/symfony" class="btn btn-lg btn-success">Back to the <i>Symfony 3</i> Track</a>
                                                                            </div>
                                </div>

                                <p class="end-show-link js-video-repeat"><a class="knp-color-white link-no-underline" href="route-annotation-templates#">
                                    <i class="fa fa-repeat"></i> Watch again
                                </a></p>
                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="resume">
            Finish Course <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="route-annotation-templates#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="route-annotation-templates#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script script-content">
                                                                                        <a href="https://github.com/knpuniversity/symfony-best-practices/edit/master/knpu/route-annotation-templates.rst" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    
  <div class="section" id="symfony-keep-it-simple-with-route-and-templates">
<h1>Symfony: Keep it Simple with &#64;Route and Templates<a class="headerlink" href="route-annotation-templates#symfony-keep-it-simple-with-route-and-templates" title="Permalink to this headline">¶</a></h1>
<p>Hey Symfony world. So you probably saw that Symfony released these best practices
and I&#8217;ll admit I was partially responsible for these. But apart from that,
I&#8217;m actually really really excited about them because they&#8217;re going to allow
us reduce the complexity that we have in our application.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">The best practices are aimed at <em>your</em> non-shared application code. If
you <em>are</em> building something that you need to share internally or to
the world, you&#8217;ll want to do a little more work. See <a class="reference external" href="http://symfony.com/doc/current/cookbook/bundles/best_practices.html">Best Practices for Reusable Bundles</a></p>
</div>
<div class="section" id="complexity-versus-simplicity-versus-easy">
<h2>Complexity Versus Simplicity Versus Easy<a class="headerlink" href="route-annotation-templates#complexity-versus-simplicity-versus-easy" title="Permalink to this headline">¶</a></h2>
<p>Last week at Symfony Live, I spent my entire presentation actually talking about
complexity and how we can reduce it in our applications. The opposite of complexity
is simplicity which means &#8220;easily understood&#8221;. Simplicity is already something
that we already really want in our own code. We want to come back to our code
in 6 months and say &#8220;this make sense to me&#8221; - not &#8220;what was I thinking here?
I don&#8217;t remember, I need to dive in and figure out what I was thinking&#8221;.</p>
<p>I wanted to show a few of my favorite best practices that are going to reduce
complexity. In particular a few things that are going to give us all less
directories, less files and will make our projects a lot smaller and easier
to navigate.</p>
</div>
<div class="section" id="our-project">
<h2>Our Project<a class="headerlink" href="route-annotation-templates#our-project" title="Permalink to this headline">¶</a></h2>
<p>I&#8217;m starting with a fresh Symfony 2.5 project because all of the changes
we&#8217;re going to talk about are things that can be done in any version of
Symfony. The project has an <tt class="docutils literal"><span class="pre">AppBundle</span></tt> in it. Now notice the interesting
thing here is that we don&#8217;t have a vendor namespace:</p>
<div class="highlight-text"><div class="highlight"><pre>src/
    AppBundle/
        AppBundle.php
        DataFixtures/
        Entity/
</pre></div>
</div>
<p>That&#8217;s normally the <tt class="docutils literal"><span class="pre">src/MyCompany/AppBundle</span></tt>. This just isn&#8217;t necessary
in your own projects. You&#8217;re not going to collide with anybody else&#8217;s namespaces
because all reusable third-party bundles <em>do</em> have a vendor namespace. So
don&#8217;t put one in yours, it just makes things longer.</p>
<p>Other than that, we have a really simple <tt class="docutils literal"><span class="pre">Post</span></tt> entity:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Entity/Post.php</span>
<span class="c1">// ...</span>

<span class="sd">/**</span>
<span class="sd"> * @ORM\Entity</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">Post</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @ORM\Column(name=&quot;id&quot;, type=&quot;integer&quot;)</span>
<span class="sd">     * @ORM\Id</span>
<span class="sd">     * @ORM\GeneratedValue(strategy=&quot;AUTO&quot;)</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$id</span><span class="p">;</span>

    <span class="sd">/**</span>
<span class="sd">     * @ORM\Column(name=&quot;title&quot;, type=&quot;string&quot;, length=255)</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$title</span><span class="p">;</span>

    <span class="sd">/**</span>
<span class="sd">     * @ORM\Column(name=&quot;contents&quot;, type=&quot;text&quot;)</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$contents</span><span class="p">;</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>I&#8217;ve added some data fixtures using Alice and Faker. I&#8217;ll talk about that another
time, but that&#8217;s a really great way to do your fixtures. And the only other
changes is in <tt class="docutils literal"><span class="pre">app/config/routing.yml</span></tt>. I already have a line that import
annotations from my <tt class="docutils literal"><span class="pre">Controller/</span></tt> directory&#8221;</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># app/config/routing.yml</span>
<span class="l-Scalar-Plain">app_bundle_annotations</span><span class="p-Indicator">:</span>
    <span class="l-Scalar-Plain">resource</span><span class="p-Indicator">:</span> <span class="s">&quot;@AppBundle/Controller&quot;</span>
    <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">annotation</span>
</pre></div>
</div>
<p>This is likely a change that you&#8217;ll see out of the box in Symfony 2.6.</p>
<p>I don&#8217;t have that directory yet, so let&#8217;s go ahead and create it otherwise
Symfony will throw an error at us:</p>
<blockquote>
<div>mkdir src/AppBundle/Controller</div></blockquote>
<p>I&#8217;ve already initialize the database and loaded my fixtures. I have my build-in
web server already running so let&#8217;s go and try it out:</p>
<div class="highlight-bash"><div class="highlight"><pre>composer install
php app/console doctrine:database:create
php app/console doctrine:schema:create
php app/console doctrine:fixtures:load
php app/console server:run
</pre></div>
</div>
<div class="highlight-text"><div class="highlight"><pre>http://localhost:8000
</pre></div>
</div>
<p>And there is our beautiful 404 page, because of course we don&#8217;t have a homepage
yet.</p>
</div>
<div class="section" id="creating-the-simplest-page-ever">
<h2>Creating the Simplest Page Ever<a class="headerlink" href="route-annotation-templates#creating-the-simplest-page-ever" title="Permalink to this headline">¶</a></h2>
<p>So let&#8217;s go ahead and create a page. The first page I want to create is something
that lists all posts. I&#8217;m using PHPStorm with the awesome Symfony2 plugin
so I have that nice Symfony2 controller option there. But if you don&#8217;t, just
create the controller by hand:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Controller/PostController.php</span>
<span class="k">namespace</span> <span class="nx">AppBundle\Controller</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Bundle\FrameworkBundle\Controller\Controller</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">PostController</span> <span class="k">extends</span> <span class="nx">Controller</span>
<span class="p">{</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="the-route-annotation">
<h2>The <tt class="docutils literal"><span class="pre">&#64;Route</span></tt> Annotation<a class="headerlink" href="route-annotation-templates#the-route-annotation" title="Permalink to this headline">¶</a></h2>
<p>So instead of having an extra routing.yml file, we&#8217;re just going to use the
<tt class="docutils literal"><span class="pre">&#64;Route</span></tt> annotation and give it a path. Of course we need to remove the
<tt class="docutils literal"><span class="pre">$name</span></tt> argument since we don&#8217;t have that in our route anymore and I&#8217;ll
give it an inspirational die statement so we can make sure things are working:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Controller/PostController.php</span>
<span class="c1">// ...</span>

<span class="sd">/**</span>
<span class="sd"> * @Route(&quot;/posts&quot;)</span>
<span class="sd"> */</span>
<span class="k">public</span> <span class="k">function</span> <span class="nf">indexAction</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">die</span><span class="p">(</span><span class="s1">&#39;it works!&#39;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Now, as many of you know, every time you have an annotation, you need to
have a <tt class="docutils literal"><span class="pre">use</span></tt> statement for it. So I&#8217;ll let PHPStorm help me here and auto-complete
that <tt class="docutils literal"><span class="pre">use</span></tt> statement. But you can also just go Google for SensioFrameworkExtraBundle,
which is what gives us the <tt class="docutils literal"><span class="pre">&#64;Route</span></tt> annotation. Scroll down a little bit
and you&#8217;ll see all of the <tt class="docutils literal"><span class="pre">use</span></tt> statements you&#8217;ll need if you use this
library:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Controller/PostController.php</span>
<span class="k">namespace</span> <span class="nx">AppBundle\Controller</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Bundle\FrameworkBundle\Controller\Controller</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Sensio\Bundle\FrameworkExtraBundle\Configuration\Route</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">PostController</span> <span class="k">extends</span> <span class="nx">Controller</span>
<span class="p">{</span>
    <span class="c1">// indexAction lives here ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>So we have the <tt class="docutils literal"><span class="pre">&#64;Route</span></tt> annotation, we have our control method, so lets
try going to <tt class="docutils literal"><span class="pre">/post</span></tt> and it works!</p>
<div class="highlight-text"><div class="highlight"><pre>http://localhost:8000/posts
</pre></div>
</div>
<p>So no surprises there: the <tt class="docutils literal"><span class="pre">&#64;Route</span></tt> annotation is all we need.</p>
</div>
<div class="section" id="simple-template-organization">
<h2>Simple Template Organization<a class="headerlink" href="route-annotation-templates#simple-template-organization" title="Permalink to this headline">¶</a></h2>
<p>So let&#8217;s finish this page. It should be fairly straightforward: we&#8217;re going
to use Doctrine to query for all the posts and then pass them into a template:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="sd">/**</span>
<span class="sd"> * @Route(&quot;/posts&quot;)</span>
<span class="sd"> */</span>
<span class="k">public</span> <span class="k">function</span> <span class="nf">indexAction</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$posts</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDoctrine</span><span class="p">()</span>
        <span class="o">-&gt;</span><span class="na">getRepository</span><span class="p">(</span><span class="s1">&#39;AppBundle:Post&#39;</span><span class="p">)</span>
        <span class="o">-&gt;</span><span class="na">findAll</span><span class="p">();</span>

    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;Post/index.html.twig&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">&#39;posts&#39;</span> <span class="o">=&gt;</span> <span class="nv">$posts</span><span class="p">,</span>
    <span class="p">));</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Now, notice that my template name does <em>not</em> have any colons in it. Normally
we have this <tt class="docutils literal"><span class="pre">AppBundle:Post:index.html.twig</span></tt> thing. One of my favorite
new best practices is to store your templates in the <tt class="docutils literal"><span class="pre">app/Resources/views</span></tt>
directory. And when you do this, you don&#8217;t need any colons: you can just
say <tt class="docutils literal"><span class="pre">Post/index.html.twig</span></tt> and it&#8217;s going to look for that in the <tt class="docutils literal"><span class="pre">app/Resources/views</span></tt>
directory.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">I&#8217;m using an upper-case <tt class="docutils literal"><span class="pre">Post</span></tt>, but the best-practices say to use a
lowercase <tt class="docutils literal"><span class="pre">post</span></tt>. I actually like the lowercase better, but choose
whatever you want.</p>
</div>
<p>I&#8217;ll create a template and of course make it extend <tt class="docutils literal"><span class="pre">base.html.twig</span></tt>. And
for the same reason here we don&#8217;t need the <tt class="docutils literal"><span class="pre">::</span></tt> before. We can just say
<tt class="docutils literal"><span class="pre">base.html.twig</span></tt> and it&#8217;s going to look in the <tt class="docutils literal"><span class="pre">app/Resources/views</span></tt>
directory:</p>
<div class="highlight-html+jinja"><div class="highlight"><pre><span class="c">{# app/Resources/views/Post/index.html.twig #}</span>
<span class="cp">{%</span> <span class="k">extends</span> <span class="s1">&#39;base.html.twig&#39;</span> <span class="cp">%}</span>

<span class="cp">{%</span> <span class="k">block</span> <span class="nv">body</span> <span class="cp">%}</span>
<span class="nt">&lt;h1&gt;</span>POSTS!<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;ul&gt;</span>
    <span class="cp">{%</span> <span class="k">for</span> <span class="nv">post</span> <span class="k">in</span> <span class="nv">posts</span> <span class="cp">%}</span>
        <span class="nt">&lt;li&gt;</span>
            <span class="cp">{{</span> <span class="nv">post.title</span> <span class="cp">}}</span>
        <span class="nt">&lt;/li&gt;</span>
    <span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>
<span class="nt">&lt;/ul&gt;</span>
<span class="cp">{%</span> <span class="k">endblock</span> <span class="cp">%}</span>
</pre></div>
</div>
<p>Now this may seem like a small detail, but there&#8217;s 2 massive advantages to
this. One, nobody liked or understood the colon syntax, especially beginners.
I hated teaching it: every time I told them the <tt class="docutils literal"><span class="pre">AppBundle:Post:index.html.twig</span></tt>
thing, it didn&#8217;t make sense to anybody. The second thing is that we no longer
have our templates spread out across our project or our bundles. So if you
have a frontend developer working with you, they can easily find those templates
because they&#8217;re all sitting in one directory. A lot of times complexity
is about perceived complexity: the more files and directories you have, the
harder things are going to luck.</p>
<p>And no surprises, when we refresh, we have a working page. So one thing I
want to highlight is that we only touched two files: our controller and our
template.</p>
</div>
<div class="section" id="creating-the-show-page">
<h2>Creating the Show Page<a class="headerlink" href="route-annotation-templates#creating-the-show-page" title="Permalink to this headline">¶</a></h2>
<p>So now I want to create a page that is going to show just one blog post,
and it&#8217;s going to be even easier. Just like before, we&#8217;ll start with <tt class="docutils literal"><span class="pre">&#64;Route</span></tt>.
The only difference here is that we&#8217;ll have the <tt class="docutils literal"><span class="pre">{id}</span></tt> wildcard. And as
you already know we&#8217;re going to map that to an <tt class="docutils literal"><span class="pre">$id</span></tt> argument in our controller.
And because I love <tt class="docutils literal"><span class="pre">die</span></tt> statements, we&#8217;ll try that just to test it out:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Controller/PostController.php</span>
<span class="c1">// ...</span>

<span class="sd">/**</span>
<span class="sd"> * @Route(&quot;/posts/{id}&quot;)</span>
<span class="sd"> */</span>
<span class="k">public</span> <span class="k">function</span> <span class="nf">showAction</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">die</span><span class="p">(</span><span class="s1">&#39;Mr Testers&#39;</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Add an id on the end of the URL and there&#8217;s our <tt class="docutils literal"><span class="pre">die</span></tt> statement:</p>
<div class="highlight-text"><div class="highlight"><pre>http://localhost:8000/posts/5
</pre></div>
</div>
</div>
<div class="section" id="the-in-famous-paramconverter-trick">
<h2>The (In)Famous ParamConverter Trick<a class="headerlink" href="route-annotation-templates#the-in-famous-paramconverter-trick" title="Permalink to this headline">¶</a></h2>
<p>So now I want to show you one controversial trick. Normally if we have <tt class="docutils literal"><span class="pre">{id}</span></tt>
in the URL, then we have a <tt class="docutils literal"><span class="pre">$id</span></tt> argument. But you can also <em>change</em> that
argument if you type-hint it with <tt class="docutils literal"><span class="pre">Post</span></tt>, which is our entity. Then Doctrine
is going to automatically query for that <tt class="docutils literal"><span class="pre">Post</span></tt> based on the <tt class="docutils literal"><span class="pre">{id}</span></tt>
in the URL. And if it doesn&#8217;t find one, it&#8217;s going to throw a 404 page:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/AppBundle/Controller/PostController.php</span>
<span class="c1">// ...</span>

<span class="sd">/**</span>
<span class="sd"> * @Route(&quot;/posts/{id}&quot;)</span>
<span class="sd"> */</span>
<span class="k">public</span> <span class="k">function</span> <span class="nf">showAction</span><span class="p">(</span><span class="nx">Post</span> <span class="nv">$post</span><span class="p">)</span>
<span class="p">{</span>
    <span class="nb">var_dump</span><span class="p">(</span><span class="nv">$post</span><span class="p">);</span><span class="k">die</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>And in this case, you can see it works perfectly. This comes from the <a class="reference external" href="http://symfony.com/doc/current/bundles/SensioFrameworkExtraBundle/annotations/converters.html">ParamConverter</a>
of the SensioFrameworkExtraBundle and the only gotcha is that the name of
your wildcard - so <tt class="docutils literal"><span class="pre">{id}</span></tt> for us - needs to match up with the property.
So we have an <tt class="docutils literal"><span class="pre">{id}</span></tt> wildcard and we have an <tt class="docutils literal"><span class="pre">id</span></tt> property. If we change
that to be <tt class="docutils literal"><span class="pre">{postId}</span></tt>, it&#8217;s not going to work because it doesn&#8217;t match
our property name. Yes there <em>are</em> ways to configure the <tt class="docutils literal"><span class="pre">ParamConverter</span></tt>
to figure this all out. But right now the configuration is actually really
ugly, so I use this when it&#8217;s easy and if it&#8217;s not easy I just query myself.
It&#8217;s not a big deal.</p>
<p>Let&#8217;s finish this up. We&#8217;ll render a template. Notice the controller is
basically only one line, which is nice. And then we&#8217;ll create a template
just to make sure that things are actually working. Print out the title,
print out the contents and refresh to see some nice Latin on the screen:</p>
<div class="highlight-html+jinja"><div class="highlight"><pre><span class="c">{# app/Resources/views/Post/show.html.twig #}</span>
<span class="cp">{%</span> <span class="k">extends</span> <span class="s1">&#39;base.html.twig&#39;</span> <span class="cp">%}</span>

<span class="cp">{%</span> <span class="k">block</span> <span class="nv">body</span> <span class="cp">%}</span>
<span class="nt">&lt;h1&gt;</span><span class="cp">{{</span> <span class="nv">post.title</span> <span class="cp">}}</span><span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;div&gt;</span>
    <span class="cp">{{</span> <span class="nv">post.contents</span> <span class="cp">}}</span>
<span class="nt">&lt;/div&gt;</span>
<span class="cp">{%</span> <span class="k">endblock</span> <span class="cp">%}</span>
</pre></div>
</div>
</div>
<div class="section" id="route-names-and-requirements">
<h2>Route Names and Requirements<a class="headerlink" href="route-annotation-templates#route-names-and-requirements" title="Permalink to this headline">¶</a></h2>
<p>The other common thing that routes need are names. And actually right now,
our routes <em>do</em> have a name. If we go over to <tt class="docutils literal"><span class="pre">router:debug</span></tt>, we&#8217;re going
to see that Symfony has given an auto-generated names to each of our routes,
which is fine, but I don&#8217;t exactly trust that:</p>
<div class="highlight-bash"><div class="highlight"><pre>php app/console router:debug
</pre></div>
</div>
<p>So the minute I actually need to link to one of these pages, I&#8217;m going to
pass a <tt class="docutils literal"><span class="pre">name</span></tt> option to the <tt class="docutils literal"><span class="pre">&#64;Route</span></tt> annotation to give it a specific name:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="sd">/**</span>
<span class="sd"> * @Route(&quot;/posts/{id}&quot;, name=&quot;post_show&quot;)</span>
<span class="sd"> */</span>
<span class="k">public</span> <span class="k">function</span> <span class="nf">showAction</span><span class="p">(</span><span class="nx">Post</span> <span class="nv">$post</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Once we&#8217;ve done that, linking to it is just like anything else: we got to
Twig, we use the <tt class="docutils literal"><span class="pre">path()</span></tt> function, and everything is going to work perfectly:</p>
<div class="highlight-html+jinja"><div class="highlight"><pre><span class="c">{# app/Resources/views/Post/index.html.twig #}</span>
<span class="c">{# ... #}</span>

<span class="cp">{%</span> <span class="k">for</span> <span class="nv">post</span> <span class="k">in</span> <span class="nv">posts</span> <span class="cp">%}</span>
    <span class="nt">&lt;li&gt;</span>
        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="nv">path</span><span class="o">(</span><span class="s1">&#39;post_show&#39;</span><span class="o">,</span> <span class="o">{</span> <span class="s1">&#39;id&#39;</span><span class="o">:</span> <span class="nv">post.id</span> <span class="o">})</span> <span class="cp">}}</span><span class="s">&quot;</span><span class="nt">&gt;</span>
            <span class="cp">{{</span> <span class="nv">post.title</span> <span class="cp">}}</span>
        <span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/li&gt;</span>
<span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>
</pre></div>
</div>
<p>Beyond the path and the <tt class="docutils literal"><span class="pre">name</span></tt> of the route, the only other common thing
for routes is to add requirements. If you Google for <tt class="docutils literal"><span class="pre">&#64;Route</span></tt> Symfony
annotation, you&#8217;ll find the documentation page that shows you how to add
those. It&#8217;s just another option on the <tt class="docutils literal"><span class="pre">&#64;Route</span></tt> annotation:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="sd">/**</span>
<span class="sd"> * @Route(&quot;/posts/{id}&quot;, name=&quot;post_show&quot;, requirements={&quot;id&quot;=&quot;\d+&quot;})</span>
<span class="sd"> */</span>
<span class="k">public</span> <span class="k">function</span> <span class="nf">showAction</span><span class="p">(</span><span class="nx">Post</span> <span class="nv">$post</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>And since this is all we really do with routes, it doesn&#8217;t really get any messier
than this.</p>
</div>
<div class="section" id="keep-it-simple-pass-along-feedback">
<h2>Keep it Simple, Pass Along Feedback<a class="headerlink" href="route-annotation-templates#keep-it-simple-pass-along-feedback" title="Permalink to this headline">¶</a></h2>
<p>And that&#8217;s really it. With the <tt class="docutils literal"><span class="pre">&#64;Route</span></tt> annotation and putting all of your
templates in the same directory, your project already starts to get a lot
smaller. So keep things simple, try this out, and let me know what you think.</p>
<p>Seeya next time :).</p>
</div>
</div>


    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2747484541" id="dsq-comment-2747484541">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2747484541">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-24</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2747484541" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2747484541" class="dsq-comment-text">
	                                <p>Hey Sudhir!</p><p>Awesome! Congratulations :).</p><p>I'm not too sure about the PHP templating - I've never used it before. But, we do show both PHP and Twig version in our templating docs on <a href="http://disq.us/url?url=http%3A%2F%2FSymfony.com%3A1nPIBVkNl1gNvkH16pXZTfuWGH0&amp;cuid=1175718" rel="nofollow noopener">Symfony.com</a>: <a href="http://disq.us/url?url=http%3A%2F%2Fsymfony.com%2Fdoc%2Fcurrent%2Fbook%2Ftemplating.html%3Ab1lPtE7B6T5uXf4xv-UbaqXJnQs&amp;cuid=1175718" rel="nofollow noopener">http://symfony.com/doc/current...</a>. Just look at the PHP tag of any of the code blocks and compare with the Twig tab. I don't know if something is missing from your code-block above, but in your base.html.php, the code doesn't look right at all - it's missing the </p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2742289846" id="dsq-comment-2742289846">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/sudhir600/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/8230/5376/avatar92.jpg?1481801737">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2742289846">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-21</span>
	                            <span class="dsq-commenter-name">Sudhir</span>
	                        </div>

	                        <div id="dsq-comment-message-2742289846" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2742289846" class="dsq-comment-text">
	                                <p>hi <a data-dsq-mention="weaverryan:disqus" href="https://disqus.com/by/weaverryan/" rel="nofollow noopener">weaverryan</a></p><p>Thanks you for your all help. you really did a lot for me.  <br>I got success with FOSUserBundle (i will put GitHub link shortly for others users)</p><p>Here i have another question. <br>i wanted to use PHP template instead of twig. <br>i did all setting such as  <br></p><pre><i>in config.yml</i><br>templating:<br>        engines: ['php']<br></pre><p><br>i make a base.html.php<br>here is the code<br></p><pre><code><br><br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"/&gt;<br>    &lt;title&gt;output('title', 'Hello Application') ?&gt;&lt;/title&gt;<br>    output('css') ?&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>output('_content');<br>?&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code><br></pre><p></p><p>Now my main index.php page  inside default have logical data which will override base.html.php.</p><p>Here is the code-:<br><a href="https://disq.us/url?url=https%3A%2F%2Fs19.postimg.org%2F66j5lg5jn%2Fimage.png%3AYRj2NJRkIMHHKU5Jz8US_HncaFs&amp;cuid=1175718" rel="nofollow noopener"><br>&lt;img src="https://s19.postimg.org/66j5lg5jn/image.png" border="0" alt="" target="_new"/&gt;<br></a></p><p>The problem is coming here in <b> $view['slots']-&gt;start('_content') </b> <br>i want the every like which is written in block of _content should be appear on base page (as symfony documents says)<br>unfortunately its not rendering. i am getting blank body.</p><p>what is the correct way to override Body section. (i am assuming that any alternate of <b>{% block body %}</b></p><p>Thank you.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2419863620" id="dsq-comment-2419863620">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2419863620">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-12-21</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2419863620" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2419863620" class="dsq-comment-text">
	                                <p>Hey Daniel!</p><p>In earlier Symfony days, we recommended that you create 1 bundle for every feature. Many tutorials (including on this site) still reflect this. But we realized that this can add extra over-organization that's not necessary: usually your bundles are all coupled together anyways. So, having multiple bundles isn't bad: especially if you really do have some big sections of your code that you'd like to logically organize (e.g. admin, frontend), but I almost always just have that one AppBundle. If you *are* building some piece that will be re-used among multiple Symfony projects, that's actually the perfect time to isolate things into a bundle.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2416030304" id="dsq-comment-2416030304">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_MhgCpixYyr/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2416030304">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-12-18</span>
	                            <span class="dsq-commenter-name">daniel</span>
	                        </div>

	                        <div id="dsq-comment-message-2416030304" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2416030304" class="dsq-comment-text">
	                                <p>Hi, so you are saying that is best to have all the stuff under appBundle? even for a more complex app cms, with user auth, admin, different sections... i saw other tutorials where do you have myfolderapp/bundle1...bundle2...</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2059844680" id="dsq-comment-2059844680">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_0VsYkLh30m/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/13529/3976/avatar92.jpg?1471957155">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2059844680">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-06-03</span>
	                            <span class="dsq-commenter-name">Steve</span>
	                        </div>

	                        <div id="dsq-comment-message-2059844680" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2059844680" class="dsq-comment-text">
	                                <p>Great idea Mike I will try this, thanks</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2059093886" id="dsq-comment-2059093886">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2059093886">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-06-03</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2059093886" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2059093886" class="dsq-comment-text">
	                                <p>If you're going to use Assetic (still a fine tool), I think this is great! The big point is: don't overcomplicate. But since you have Assetic, and Assetic is plenty good at moving files around, putting them here works nice. Plus, you still have all of your files together :). This makes even more sense if you're using SASS or LESS, because it means that you won't have to expose your public files (I keep my assets out of web/ for that reason - they're processed through SASS).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2059043410" id="dsq-comment-2059043410">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/michaelsypes/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/15345/9813/avatar92.jpg?1480968856">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2059043410">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-06-02</span>
	                            <span class="dsq-commenter-name">Michael Sypes</span>
	                        </div>

	                        <div id="dsq-comment-message-2059043410" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2059043410" class="dsq-comment-text">
	                                <p>This may be a dumb idea, but I did experiment with something like what you describe, and having my base template read thusly:</p><p>{% stylesheets "%kernel.root_dir%/Resources/public/css/*"  filter='cssrewrite' %}<br>    &lt;link rel="stylesheet" href="{{ asset_url }}"/&gt;<br>{%  endstylesheets %}</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2037422141" id="dsq-comment-2037422141">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2037422141">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-21</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2037422141" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2037422141" class="dsq-comment-text">
	                                <p>Hmm, having some pre-reqs for any setup done before the screencast starts is indeed a good idea. I'll think about getting that added. Thanks!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2037354872" id="dsq-comment-2037354872">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="route-annotation-templates">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2037354872">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-21</span>
	                            <span class="dsq-commenter-name">Mike</span>
	                        </div>

	                        <div id="dsq-comment-message-2037354872" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2037354872" class="dsq-comment-text">
	                                <p>Thanks, that worked for me. It should be nice when you add this as note as sort of a preparation (pre requirements). Thanks!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2037269799" id="dsq-comment-2037269799">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2037269799">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-21</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2037269799" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2037269799" class="dsq-comment-text">
	                                <p>Nice work! And the issue you hit, by the way, was taken care of in Symfony 2.6 (this project is still built on 2.5).</p><p>There are fixtures in this project (<a href="http://disq.us/url?url=http%3A%2F%2Fknpuniversity.com%2Fscreencast%2Falice-fixtures%29%3AkLHX3_m5QxMHY3Z05KZkrC9e3qQ&amp;cuid=1175718" rel="nofollow noopener">http://knpuniversity.com/scree...</a> and you should be able to load them with:</p><p>php app/console doctrine:fixtures:load</p><p>And don't forget to create your database/schema first :)</p><p>php app/console doctrine:database:create<br>php app/console doctrine:schema:create</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2037237746" id="dsq-comment-2037237746">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="route-annotation-templates">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2037237746">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-21</span>
	                            <span class="dsq-commenter-name">Mike</span>
	                        </div>

	                        <div id="dsq-comment-message-2037237746" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2037237746" class="dsq-comment-text">
	                                <p>composer install gives:</p><p>------</p><p>localhost:symfony-best-practices-start mikew$ composer install</p><p>Loading composer repositories with package information</p><p>Installing dependencies (including require-dev) from lock file</p><p>Your requirements could not be resolved to an installable set of packages.</p><p>  Problem 1</p><p>    - Installation request for symfony/icu v1.2.2 -&gt; satisfiable by symfony/icu[v1.2.2].</p><p>    - symfony/icu v1.2.2 requires ext-intl * -&gt; the requested PHP extension intl is missing from your system.</p><p>  Problem 2</p><p>    - symfony/icu v1.2.2 requires ext-intl * -&gt; the requested PHP extension intl is missing from your system.</p><p>    - symfony/symfony v2.5.5 requires symfony/icu ~1.0 -&gt; satisfiable by symfony/icu[v1.2.2].</p><p>    - Installation request for symfony/symfony v2.5.5 -&gt; satisfiable by symfony/symfony[v2.5.5].</p><p>------</p><p>I solved this by doing a 'composer update'</p><p>I think this does the job. However, what I am missing (I think) is a sql script for the mysql database.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2035626706" id="dsq-comment-2035626706">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2035626706">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-20</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2035626706" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2035626706" class="dsq-comment-text">
	                                <p>Hey Mike!</p><p>Good news - easy fix :) - though I don't know what *caused* your issue exactly. That `bootstrap.php.cache` file is a little "bootstrap" file that's built after you run composer install. If you downloaded Symfony using the new installer, this should all be taken care of for you, but no worries either way. Here's the fix:</p><p>1) Download Composer (if you don't already have it)<br>2) Run `composer install` (or `php composer.phar install` if you have a .phar version).</p><p>Then just try running the server again. Ping me if you have any other issues!</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2035286152" id="dsq-comment-2035286152">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="route-annotation-templates">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2035286152">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-05-20</span>
	                            <span class="dsq-commenter-name">Mike</span>
	                        </div>

	                        <div id="dsq-comment-message-2035286152" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2035286152" class="dsq-comment-text">
	                                <p>When I download the code and try to run (2.6) it using 'php app/console server:run', the I get:</p><p>Warning: require_once(/Users/mike/development/environment/symfony-best-practices/start/app/bootstrap.php.cache): failed to open stream: No such file or directory in /Users/mike/development/environment/symfony-best-practices/start/app/console on line 10</p><p>Fatal error: require_once(): Failed opening required '/Users/mike/development/environment/symfony-best-practices/start/app/bootstrap.php.cache' (include_path='.:') in /Users/mike/development/environment/symfony-best-practices/start/app/console on line 10</p><p>localhost:start mike$ php app/console router:debug</p><p>Warning: require_once(/Users/mike/development/environment/symfony-best-practices/start/app/bootstrap.php.cache): failed to open stream: No such file or directory in /Users/mike/development/environment/symfony-best-practices/start/app/console on line 10</p><p>Fatal error: require_once(): Failed opening required '/Users/mike/development/environment/symfony-best-practices/start/app/bootstrap.php.cache' (include_path='.:') in /Users/mike/development/environment/symfony-best-practices/start/app/console on line 10</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1912962713" id="dsq-comment-1912962713">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/kirillsmelov/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1912962713">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-03-18</span>
	                            <span class="dsq-commenter-name">Kirill Smelov</span>
	                        </div>

	                        <div id="dsq-comment-message-1912962713" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1912962713" class="dsq-comment-text">
	                                <p>Always welcome. If i find out reason of first bag, first of all i share it here, so stay tuned!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1912960196" id="dsq-comment-1912960196">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1912960196">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-03-18</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1912960196" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1912960196" class="dsq-comment-text">
	                                <p>Hey again!</p><p>1) If you ever have a chance to look into this (or try it in a MySQL project to see if it behaves differently), I'd love to know :).</p><p>2) Ah, great news! I think that's a cool feature, and I hadn't thought about using it before. Glad you shared!</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1912950751" id="dsq-comment-1912950751">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/kirillsmelov/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1912950751">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-03-18</span>
	                            <span class="dsq-commenter-name">Kirill Smelov</span>
	                        </div>

	                        <div id="dsq-comment-message-1912950751" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1912950751" class="dsq-comment-text">
	                                <p>Thanks for fast reply =)<br>1) In my current project i use Postgres, honestly, i dont know, if reason of this bug hides in database. About requirements - i have been using yml for configuration, but in annotations example, for what i say, will be like this:<br> * @Route("/blog/{page}" requirements={<br> *     "page": "\d+"<br> * })</p><p>2) Setting default value of entity in param to null prevents system exception. I have been using it all the time =)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1912940502" id="dsq-comment-1912940502">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1912940502">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-03-18</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1912940502" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1912940502" class="dsq-comment-text">
	                                <p>Hi Kirill!</p><p>Thanks for adding some details :). Replies!</p><p>1) I'm not aware of this - I often use the type-hinting trick (but I rarely/never actually add the @ParamConverter annotations) and I haven't seen this. Perhaps you have something special in your project? Or perhaps a different database backend (I usually use MySQL)? It could actually be a bug based on something that's slightly different in your project. I'd be interested to hear!</p><p>2) You're right about this, but that's also the purpose of it. But are you saying that you *do* actually set a default value (e.g. Post $post = null) currently so that you can process it in the controller? Or are you saying that you *wish* you could do this? I'm actually not familiar if giving it a default value prevents the exception. If it doesn't, I think that's actually an interesting idea.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1912885215" id="dsq-comment-1912885215">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/kirillsmelov/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1912885215">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-03-17</span>
	                            <span class="dsq-commenter-name">Kirill Smelov</span>
	                        </div>

	                        <div id="dsq-comment-message-1912885215" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1912885215" class="dsq-comment-text">
	                                <p>Hi Ryan! First of all - really good article and video for begginers in Symfony2, but i want to clear situation about Type Hinting in action parameters. Yes, this is great way to remove some routine code from your method, but there is few hidden troubles in my opinion:</p><p>1) If you provide as parameter non-integer value, it throw some exception. not 404 as we want(i belive so). So, we need to use requirements for our id paramter in route configuration like \d+</p><p>2) If you provide non-existing id, it will throw an error and dont let us to process it anyway because of program even will not enter in our method. In this siituation i'd like to set default value of param entity to null and check this for null value in controller first of all. That allow me to process "Not-found case" in way, that i want.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1880743532" id="dsq-comment-1880743532">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1880743532">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-02-28</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-1880743532" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1880743532" class="dsq-comment-text">
	                                <p>Thanks for clarify it! Looks like with cache it will be really useful</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1878794214" id="dsq-comment-1878794214">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1878794214">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-02-27</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1878794214" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1878794214" class="dsq-comment-text">
	                                <p>Hey Bocharsky!</p><p>Ah, I somehow missed this! Cool question :). Here are a few points</p><p>1) I typically use render() when what I'm doing will result in a "chunk" of HTML. So, I'd use a Twig filter to get me a simple value, but render() to get me a "chunk" of HTML. That's simply because render() allows you to render another Twig template, so it's convenient in that way.</p><p>2) BUT, the big warning with render() is that the sub-requests are expensive from a performance standpoint. But of course, that's in part by design: render() calls are cacheable. So, if the action I'm doing is heavy, then I lean towards using render() and caching it (instead of a Twig extension). But if what I'm doing is uncacheable or I would need many render()'s, then I might try to use Twig extensions. I want to maximize my cacheable render() calls (i.e. render_esi()) and minimize my uncacheable render() calls.</p><p>3) You mentioned the issue wit the "requests" in sub-requests, and you're absolutely right of course :). But, there is a really cool way around this. For example, suppose you need the value of a query parameter - ?search=XX - in a sub-request controller. To accomplish this, pass in the value:</p><p></p><pre><code><br>{{ render(controller('AcmeArticleBundle:Article:searchform', {<br>    'search': app.request.query.get('search')<br>})) }}<br></code></pre><p></p><p>With this, you can now have a `$search` argument to your controller. ALSO, if you cached this render() call, it would have a different cached version for each value of "search". In other words, when you pass variables like this, they become part of the cache key for the rendered fragment.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1876667622" id="dsq-comment-1876667622">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="route-annotation-templates">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1876667622">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-02-26</span>
	                            <span class="dsq-commenter-name">Guest</span>
	                        </div>

	                        <div id="dsq-comment-message-1876667622" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1876667622" class="dsq-comment-text">
	                                <p>Hey Ryan! Can you speak something about it? :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1823460368" id="dsq-comment-1823460368">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1823460368">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-29</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-1823460368" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1823460368" class="dsq-comment-text">
	                                <p>Hi Ryan! Can you talk a bit about best practices with <a href="http://disq.us/url?url=http%3A%2F%2Fsymfony.com%2Fdoc%2Fcurrent%2Fbook%2Ftemplating.html%23embedding-controllers%3ATcFMfhwwMrnt7YP4gFTht-JvJtU&amp;cuid=1175718" rel="nofollow noopener">Embedding Controllers</a> like <code>{{ render(controller('AcmeArticleBundle:Article:recentArticles')) }}</code>, for example. Does it a normally to use them or their usage should be avoid and better to use services in conjunction with twig extensions (functions)?</p><p>P.S. A few months ago I had some problems with Embedding Controllers when use request object in it (As I understood, there is a sub-request, not a master request) so I switched to a services with twig functions and don't use it anymore.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1793531470" id="dsq-comment-1793531470">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_0VsYkLh30m/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/13529/3976/avatar92.jpg?1471957155">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1793531470">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-15</span>
	                            <span class="dsq-commenter-name">Steve</span>
	                        </div>

	                        <div id="dsq-comment-message-1793531470" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1793531470" class="dsq-comment-text">
	                                <p>Thats great thanks Ryan.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1792594782" id="dsq-comment-1792594782">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1792594782">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-14</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1792594782" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1792594782" class="dsq-comment-text">
	                                <p>Hey Steve!</p><p>If you've sym-linked app/Resources to, say, web/app, then use *that* directory in your path. For example, say you have your app/Resources/public/css/app.css, and this means you have a symlink'ed path of web/app/css/app.css. Use that path::</p><p>{% stylesheets 'app/css/app.css' ... %}</p><p>This is actually a little better, because there are problems using the "@" syntax with Assetic when you try to use relative links to images in your CSS (e.g. background: url('../images/...').</p><p>I hope that helps!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1791031324" id="dsq-comment-1791031324">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_0VsYkLh30m/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/13529/3976/avatar92.jpg?1471957155">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1791031324">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-13</span>
	                            <span class="dsq-commenter-name">Steve</span>
	                        </div>

	                        <div id="dsq-comment-message-1791031324" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1791031324" class="dsq-comment-text">
	                                <p>Thanks for the quick reply and what you say makes perfect sense especially as we're talking about simplicity.</p><p>However I'm using assetic to manage my css etc. In my base.html.twig file I have the following</p><p>{% block stylesheets %}</p><p>			{% stylesheets</p><p>				'@AppBundle/Resources/public/css/app.css'</p><p>				output='css/compiled/all.css' %}</p><p>				&lt;link rel="stylesheet" href="{{ asset_url }}"/&gt;</p><p>			{% endstylesheets %}</p><p>		{% endblock %}</p><p>How would I change the "@AppBundle/Resources" so that all assets live in the app/Resources folder or the web root as suggested but still use assetic?</p><p>Cheers</p><p>Steve</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1790661455" id="dsq-comment-1790661455">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1790661455">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-13</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-1790661455" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1790661455" class="dsq-comment-text">
	                                <p>As Martin Fowler said: "There are only two hard things in Computer Science: cache invalidation and *naming* things." :) I hope JMSDiExtraBundle will be with more convenience syntax eventually )</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1790609570" id="dsq-comment-1790609570">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1790609570">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-13</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1790609570" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1790609570" class="dsq-comment-text">
	                                <p>Yea, I *really* like how the phonecat tutorial is setup - I went through it and had the same impressions. I'll use that as some inspiration :).</p><p>And for me, you hit the point perfectly with these changes: *less files*. For me, that's why the idea behind JMSDIExtraBundle is so interesting - it removes an extra file. I *have* certainly gotten feedback from people that use this and love it. In a perfect world, we'd have it, but simplify its syntax a bit.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1790606670" id="dsq-comment-1790606670">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1790606670">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-13</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1790606670" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1790606670" class="dsq-comment-text">
	                                <p>Hi Steve!</p><p>Cool question :). Since css/js really have nothing to do with your Symfony app, I recommend storing them in the web/ directory directly, in whatever organize you want (e.g. web/css, web/js, web/assets/css, etc). It's nice and simple and very easy for frontend people to understand :).</p><p>If you *do* want to do something like app/Resources/public, you can certainly do that - just manually create a symbolic link from it to web/app (or something like that) and commit that symlink to your repository. Alternatively, you can use a system like Gulp to "build" your assets and put them into the web directory. I think we'll have a screencast on that soon.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1790417010" id="dsq-comment-1790417010">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_0VsYkLh30m/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/13529/3976/avatar92.jpg?1471957155">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1790417010">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-13</span>
	                            <span class="dsq-commenter-name">Steve</span>
	                        </div>

	                        <div id="dsq-comment-message-1790417010" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1790417010" class="dsq-comment-text">
	                                <p>Hi.</p><p>As the use of a single bundle (AppBundle) is aiming at simplifying applications and making projects easier for frontend devs, is there a way to have assets (css &amp; js) stored in the /app/Resources/public folder rather than the src/AppBundle/Resources/public folder.</p><p>If this is possible then how is it done?</p><p>Thanks</p><p>Steve</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1788684739" id="dsq-comment-1788684739">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1788684739">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-12</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-1788684739" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1788684739" class="dsq-comment-text">
	                                <p>Now I understand, thanks ) I also enjoy the way like Angular phonecat tutorial provided ( <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fangular%2Fangular-phonecat%3AbUKn7hW1fe6rRvNORWlwRfYN8Ys&amp;cuid=1175718" rel="nofollow noopener">https://github.com/angular/ang...</a> ). Every step tagged with Git, and I can easy checkout project code between different steps, it's more convenient as for me, but maybe more complex for update.</p><p>What about JMSDiExtraBundle, I didn't use it yet, only look narrowly. He seems to me a bit complicated at first glance, maybe with good IDE's autocomplete or good practice it will be fine. Now I use an yaml configuration for my services (I strongly don't like xml, need to write a lot of code and less readability). But service with yaml/xml config - it's already 2 files, not one like with annotation.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1788486589" id="dsq-comment-1788486589">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1788486589">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-12</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1788486589" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1788486589" class="dsq-comment-text">
	                                <p>Hey bocharsky25!</p><p>I'll answer both of your questions at once :).</p><p>About JMSDiExtraBundle, I'm not sure about it - in fact maybe you can share you experience. I've only tried it a few small times, but the syntax seemed very verbose. Specifically, the syntax needed for constructor injection, which is what I normally use: <a href="http://disq.us/url?url=http%3A%2F%2Fjmsyst.com%2Fbundles%2FJMSDiExtraBundle%2Fmaster%2Fusage%23constructor-setter-injection%3AiVEyb8OuZLlAvakcqWCfyVMOKuA&amp;cuid=1175718" rel="nofollow noopener">http://jmsyst.com/bundles/JMSD...</a>. I wish I could basically say something like</p><p>/**<br> * @DI\Inject("em", id="doctrine.orm.entity_manager")<br> */</p><p>So for me, it's been something I like, but feels to clunky. What is your experience?</p><p>About GitHub - it *is* updated... but not exactly as you'd expect. If you use the download button on this page, you'll get the start and finish version of this project (though at this time, that's only available if you buy the course). What you see on GitHub is the starting version of the project only. We use an internal system that builds the "steps" of the tutorial based on the diff files in the _tuts directory. That helps me keep track and update all the individual steps in a tutorial.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1783297404" id="dsq-comment-1783297404">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1783297404">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-09</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-1783297404" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1783297404" class="dsq-comment-text">
	                                <p>Also why did you don't commit latest changes to GitHub? There isn't PostController with actions and templates.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1778139974" id="dsq-comment-1778139974">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1778139974">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-08</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-1778139974" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1778139974" class="dsq-comment-text">
	                                <p>I agree, using the @Route annotation is considerably reduces the complexity of app, especially for beginners, but I wonder what do you think about JMSDiExtraBundle for service declaration with dependency injection via annotation?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_route-annotation-templates';var disqus_url = 'https://knpuniversity.com/screencast/symfony-best-practices/route-annotation-templates';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="resume">
            Finish Course <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/symfony-best-practices/route-annotation-templates" addthis:title="Symfony Best Practices">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"symfony-best-practices","courseIsOwned":true,"chapter":"Symfony: Keep it Simple with @Route and Templates","chapterNumber":1,"chapterIsFree":true}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Symfony Best Practices';
        Core.courseId = 50
        Core.courseIsOwned = true;
        Core.courseSlug = 'symfony-best-practices';
                    Core.chapterTitle = 'Symfony: Keep it Simple with @Route and Templates';
            Core.chapterNumber = 1;
            Core.chapterIsFree = true;
            Core.chapterSlug = 'route-annotation-templates';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":310,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
