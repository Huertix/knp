<!DOCTYPE html>
<html lang="en">
<head prefix="og: http://ogp.me/ns#">
            <script src="https://cdn.optimizely.com/js/421270022.js"></script>
    
                    <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
        <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HUlBbGwAHVlFSDgM="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t){try{c.console&&console.log(t)}catch(e){}}var o,i=t("ee"),a=t(12),c={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(c.console=!0,o.indexOf("dev")!==-1&&(c.dev=!0),o.indexOf("nr_dev")!==-1&&(c.nrDev=!0))}catch(s){}c.nrDev&&i.on("internal-error",function(t){r(t.stack)}),c.dev&&i.on("fn-err",function(t,e,n){r(n.stack)}),c.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(c,function(t,e){return t}).join(", ")))},{}],2:[function(t,e,n){function r(t,e,n,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,e,n)])}catch(c){try{i("ierr",[c,(new Date).getTime(),!0])}catch(s){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function o(t){i("err",[t,(new Date).getTime()])}var i=t("handle"),a=t(13),c=t("ee"),s=t("loader"),f=window.onerror,u=!1,d=0;s.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(5),t(4),"addEventListener"in window&&t(3),s.xhrWrappable&&t(6),u=!0)}c.on("fn-start",function(t,e,n){u&&(d+=1)}),c.on("fn-err",function(t,e,n){u&&(this.thrown=!0,o(n))}),c.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),c.on("internal-error",function(t){i("ierr",[t,(new Date).getTime(),!0])})},{}],3:[function(t,e,n){function r(t){for(var e=t;e&&!e.hasOwnProperty(u);)e=Object.getPrototypeOf(e);e&&o(e)}function o(t){c.inPlace(t,[u,d],"-",i)}function i(t,e){return t[1]}var a=t("ee").get("events"),c=t(14)(a,!0),s=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";e.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,e){var n=t[1],r=s(n,"nr@wrapped",function(){function t(){if("function"==typeof n.handleEvent)return n.handleEvent.apply(n,arguments)}var e={object:t,"function":n}[typeof n];return e?c(e,"fn-",null,e.name||"anonymous"):n});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],4:[function(t,e,n){var r=t("ee").get("raf"),o=t(14)(r),i="equestAnimationFrame";e.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],5:[function(t,e,n){function r(t,e,n){t[0]=a(t[0],"fn-",null,n)}function o(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,n)}var i=t("ee").get("timer"),a=t(14)(i),c="setTimeout",s="setInterval",f="clearTimeout",u="-start",d="-";e.exports=i,a.inPlace(window,[c,"setImmediate"],c+d),a.inPlace(window,[s],s+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(s+u,r),i.on(c+u,o)},{}],6:[function(t,e,n){function r(t,e){d.inPlace(e,["onreadystatechange"],"fn-",c)}function o(){var t=this,e=u.context(t);t.readyState>3&&!e.resolved&&(e.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,v,"fn-",c)}function i(t){y.push(t),h&&(w=-w,b.data=w)}function a(){for(var t=0;t<y.length;t++)r([],y[t]);y.length&&(y=[])}function c(t,e){return e}function s(t,e){for(var n in t)e[n]=t[n];return e}t(3);var f=t("ee"),u=f.get("xhr"),d=t(14)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",v=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],y=[];e.exports=u;var g=window.XMLHttpRequest=function(t){var e=new p(t);try{u.emit("new-xhr",[e],e),e.addEventListener(m,o,!1)}catch(n){try{u.emit("internal-error",[n])}catch(r){}}return e};if(s(p,g),g.prototype=p.prototype,d.inPlace(g.prototype,["open","send"],"-xhr-",c),u.on("send-xhr-start",function(t,e){r(t,e),i(e)}),u.on("open-xhr-start",r),h){var w=1,b=document.createTextNode(w);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],7:[function(t,e,n){function r(t){var e=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!e.aborted){if(n.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=o(t,this.lastSize);if(i&&(n.rxSize=i),this.sameOrigin){var a=t.getResponseHeader("X-NewRelic-App-Data");a&&(e.cat=a.split(", ").pop())}}else e.status=0;n.cbTime=this.cbTime,f.emit("xhr-done",[t],t),c("xhr",[e,n,this.startTime])}}}function o(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var r="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return h(r)}function i(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var a=t("loader");if(a.xhrWrappable){var c=t("handle"),s=t(8),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(11),h=t(10),m=window.XMLHttpRequest;a.features.xhr=!0,t(6),f.on("new-xhr",function(t){var e=this;e.totalCbs=0,e.called=0,e.cbTime=0,e.end=r,e.ended=!1,e.xhrGuids={},e.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){e.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,e){var n=this.metrics,r=t[0],o=this;if(n&&r){var i=h(r);i&&(n.txSize=i)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof e.onload))&&o.end(e)}catch(n){try{f.emit("internal-error",[n])}catch(r){}}};for(var a=0;a<d;a++)e.addEventListener(u[a],this.listener,!1)}),f.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),f.on("xhr-load-added",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,e){var n=""+l(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],e)}),f.on("removeEventListener-end",function(t,e){e instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],e)}),f.on("fn-start",function(t,e,n){e instanceof m&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),f.on("fn-end",function(t,e){this.xhrCbStart&&f.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{}],8:[function(t,e,n){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],9:[function(t,e,n){function r(){}function o(t,e,n){return function(){return i(t,[(new Date).getTime()].concat(c(arguments)),e?null:this,n),e?void 0:this}}var i=t("handle"),a=t(12),c=t(13),s=t("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var u=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],d="api-",l=d+"ixn-";a(u,function(t,e){f[e]=o(d+e,!0,"api")}),f.addPageAction=o(d+"addPageAction",!0),f.setCurrentRouteName=o(d+"routeName",!0),e.exports=newrelic,f.interaction=function(){return(new r).get()};var p=r.prototype={createTracer:function(t,e){var n={},r=this,o="function"==typeof e;return i(l+"tracer",[Date.now(),t,n],r),function(){if(s.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return e.apply(this,arguments)}finally{s.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,e){p[e]=o(l+e)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,(new Date).getTime()])}},{}],10:[function(t,e,n){e.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(e){return}}}},{}],11:[function(t,e,n){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),e.exports=r},{}],12:[function(t,e,n){function r(t,e){var n=[],r="",i=0;for(r in t)o.call(t,r)&&(n[i]=e(r,t[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],13:[function(t,e,n){function r(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(o<0?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=r},{}],14:[function(t,e,n){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(13),a="nr@original",c=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t,e){function n(t,e,n,o){function nrWrapper(){var r,a,c,s;try{a=this,r=i(arguments),c="function"==typeof n?n(r,a):n||{}}catch(f){l([f,"",[r,a,o],c])}u(e+"start",[r,a,o],c);try{return s=t.apply(a,r)}catch(d){throw u(e+"err",[r,a,d],c),d}finally{u(e+"end",[r,a,s],c)}}return r(t)?t:(e||(e=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,e,o,i){o||(o="");var a,c,s,f="-"===o.charAt(0);for(s=0;s<e.length;s++)c=e[s],a=t[c],r(a)||(t[c]=n(a,f?c+o:o,i,c))}function u(n,r,o){if(!s||e){var i=s;s=!0;try{t.emit(n,r,o)}catch(a){l([a,n,r,o])}s=i}}function d(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){l([r])}for(var o in t)c.call(t,o)&&(e[o]=t[o]);return e}function l(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=o),n.inPlace=f,n.flag=a,n}},{}],ee:[function(t,e,n){function r(){}function o(t){function e(t){return t&&t instanceof r?t:t?s(t,c,i):i()}function n(n,r,o){if(!l.aborted){t&&t(n,r,o);for(var i=e(o),a=h(n),c=a.length,s=0;s<c;s++)a[s].apply(i,r);var f=u[g[n]];return f&&f.push([w,n,r,i]),i}}function p(t,e){y[t]=h(t).concat(e)}function h(t){return y[t]||[]}function m(t){return d[t]=d[t]||o(n)}function v(t,e){f(t,function(t,n){e=e||"feature",g[n]=e,e in u||(u[e]=[])})}var y={},g={},w={on:p,emit:n,get:m,listeners:h,context:e,buffer:v,abort:a,aborted:!1};return w}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var c="nr@context",s=t("gos"),f=t(12),u={},d={},l=e.exports=o();l.backlog=u},{}],gos:[function(t,e,n){function r(t,e,n){if(o.call(t,e))return t[e];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[e]=r,r}var o=Object.prototype.hasOwnProperty;e.exports=r},{}],handle:[function(t,e,n){function r(t,e,n,r){o.buffer([t],r),o.emit(t,e,n)}var o=t("ee").get("handle");e.exports=r,r.ee=o},{}],id:[function(t,e,n){function r(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");e.exports=r},{}],loader:[function(t,e,n){function r(){if(!b++){var t=w.info=NREUM.info,e=d.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&e))return f.abort();s(y,function(e,n){t[e]||(t[e]=n)}),c("mark",["onload",a()],null,"api");var n=d.createElement("script");n.src="https://"+t.agent,e.parentNode.insertBefore(n,e)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var c=t("handle"),s=t(12),f=t("ee"),u=window,d=u.document,l="addEventListener",p="attachEvent",h=u.XMLHttpRequest,m=h&&h.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:h,REQ:u.Request,EV:u.Event,PR:u.Promise,MO:u.MutationObserver},t(9);var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},g=h&&m&&m[l]&&!/CriOS/.test(navigator.userAgent),w=e.exports={offset:a(),origin:v,features:{},xhrWrappable:g};d[l]?(d[l]("DOMContentLoaded",i,!1),u[l]("load",r,!1)):(d[p]("onreadystatechange",o),u[p]("onload",r)),c("mark",["firstbyte",a()],null,"api");var b=0},{}]},{},["loader",2,7]);</script>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Databases and Doctrine > Starting in Symfony2: Course 1 (2.4+) | KnpUniversity</title>

                    <link href="../../builds/main-db6835bf19d99bcc09032789f3bd39e4.css" rel="stylesheet">

        <link href='https://fonts.googleapis.com/css?family=Rokkitt' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
        <link href='https://fonts.googleapis.com/css?family=Cedarville+Cursive' rel='stylesheet' type='text/css'>
    

    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/tomorrow-night.min.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/styles/tomorrow-night.min.css">


        <link rel="stylesheet" href="../../builds/code_block_styles-2d783e385d9dbb1ef88d9053d1b8d675.css">



    <link href="../../builds/video-6b5fa6dfb768239b226d39d08bd4867e.css" rel="stylesheet">

                        <script src="../../bundles/fosjsrouting/js/router.js"></script>

        <script src="../../builds/main-1dfa89b76a105f9c2d98.js"></script>
        <script src="../../js/routing?callback=fos.Router.setData"></script>
            

    <script>
        // video settings
        window.video = {
            isCourseChapterPaid: false,
            courseChapterId: 32808
        };

                window.video.nextDetails = {
            'type': 'video',
            'title': 'Up Next: Inserting\x20and\x20Querying\x20Data <i class="fa fa-play"></i>',
            'url': '/screencast/symfony2-ep1/doctrine2#play'
        };
            </script>

    <script src="../../builds/video-1dfa89b76a105f9c2d98.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function() {
            var hashValue = window.location.hash.substr(1);
            if (hashValue.substr(0, 7) == 'comment') {
                // this is a #comment link - open up the comment tab!
                $('.nav-tabs a[href="#tab-comment"]').click();
            }
        });
    </script>

    <link rel="alternate" type="application/rss+xml" title="Blog feed with technical articles around PHP and screencast and tutorial updates from KnpUniversity.com" href="http://feeds.feedburner.com/knpuniversity" />

    <meta name="description" content="Get your first Symfony2 project off on the right foot, with the right
tools, best practices and tips. If you&#039;re serious about getting into
Symfony2, this course is for you!

In this screencast, we start building a real events application from
the ground-up, touching on and discussing the most fundamental parts
of the application. Specifically, we&#039;ll cover:

* Installation, Git and Setup
* Composer
* Routing
* Controllers
* Introduction to the service container
* Twig
* Doctrine
* Server setup
* Code generation
* Fixtures &amp; external libraries
* And other tips and tricks
">

    <meta property="og:site_name" content="KnpUniversity - PHP and Symfony Video Tutorial Screencasts">
    <meta name="twitter:site" content="@KnpUniversity"><link rel="shortcut icon" href="../../assets/images/favicon.ico">
    <link rel="icon" type="image/png" href="../../assets/images/favicon.png">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->    <meta property="og:title" content="Databases and Doctrine">
<meta property="og:description" content="Get your first Symfony2 project off on the right foot, with the right
tools, best practices and tips. If you&amp;#039;re serious about getting into
Symfony2, this course is for you!

In this screencast, we start building a real events application from
the ground-up, touching on and discussing the most fundamental parts
of the application">
<meta property="og:url" content="http://knpuniversity.com/screencast/symfony2-ep1/doctrine">
    <meta property="og:image" content="http://knpuniversity.com/imagine/course_video_poster_large/uploads/screencast/symfony2-ep1:9659228bfe6fa46e5425d8ea42b44a8cc0b39b1d/sf2-ep1.png">

<meta name="twitter:card" content="summary">


                            
    </head>
<body data-user-id="" >
<nav class="navbar navbar-inverse nav-margin navbar-learning-layout">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle toggle-button collapsed" data-toggle="collapse" data-target="#js-navbar" aria-expanded="false" aria-controls="js-navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../../logout" class="navbar-brand">
                <span class="knp-color-blue">Knp</span>
                <span class="knp-color-white">University</span>
            </a>
        </div>
        <form class="navbar-form navbar-left navbar-form-border" role="search" method="GET" action="http://knpuniversity.com/search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search Tutorials" value="" name="q">

                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
        <div id="js-navbar" class="collapse-fix collapse navbar-right navbar-collapse">
            

<ul class="nav navbar-nav nav-narrowerOnSmall">
            <li><a href="../../checkout/subscription/team_yearly/5" title="Cart"><i class="fa fa-shopping-cart"></i></a></li>
        <li class="dropdown"><a href="doctrine#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tutorials <i class="fa fa-angle-down"></i></a>
        <ul class="dropdown-menu">
          <li><a href="../../tracks.1">Tracks</a></li>
          <li><a href="../../courses/all">All Courses</a></li>
        </ul>
    </li>
            <li><a href="../../pricing.1">Pricing</a></li>
        <li><a href="../../training">Training</a></li>
                <li class="visible-xs"><a href="../../logout">My Profile</a></li>
        <li class="visible-xs"><a href="../../logout">Sign Out</a></li>

            <li><a href="../../login.1">Log In</a></li>
        <li class="btn btn-sm btn-warning signup-btn"><a class="signup" href="../../signup/index.html">Sign Up</a></li>
    </ul>

        </div>
    </div>
</nav>


    




<div class="table-contents-container">
  <div class="container expandList" id="js-chapter-list">
      <button class="table-contents-container-button js-expand-list" data-target="js-chapter-list" title="Chapter List">
          <i class="fa fa-bars"></i>
                        7.
                            Databases and Doctrine
                </button>
      <div class="expandList-body">
          <div class="expandList-bodyInner">
              <h3 class="expandList-header">
                  <a class="course-title-expand" href="http://knpuniversity.com/screencast/symfony2-ep1">Starting in Symfony2: Course 1 (2.4+)</a>
              </h3>

                                <div class="watched-tut-progress-container watched-tut-progress-container-overview">
        <div class="watched-tut-progress-overview" style="width: 0%; margin-right: 100%;" title="0% complete"><span class="profile-progress-title">0%</span></div>
    </div>


              
              <div class="expand-chapter-list">
                      
    
    <!-- Table of contents -->
    <div class="chapter-list">
        <ul class="list-unstyled">
            
                
                                <li class="title chapter-list-item ">
            <a href="intro" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                1.
                        Welcome to Symfony!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:51</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="installation" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                2.
                        Downloading &amp; Configuration
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 10:02</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="bundles" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                3.
                        Bundles of Joy!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:19</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="routing" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                4.
                        Routing: The URLs of the World
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:44</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="controller" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                5.
                        Controllers: Get to work!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 7:34</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="twig" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                6.
                        Twig
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:27</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item chapter-list-item-active">
            <a href="doctrine" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                7.
                        Databases and Doctrine
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:08</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="doctrine2" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                8.
                        Inserting and Querying Data
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 6:57</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="vhost" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                9.
                        Virtual Host Setup Extravaganza
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:17</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="generators" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                10.
                        Code Generation FTW!
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 5:25</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="assets" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                11.
                        Less Ugly with CSS and JavaScript
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 3:47</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="links-dates" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                12.
                        Friendly Links and Dates in Twig
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:25</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="composer" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                13.
                        Adding Outside Bundles with Composer
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:36</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="fixtures" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                14.
                        Fixtures: For some dumb data
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:54</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="autoloading" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                15.
                        Autoloading: Where did require/include go?
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 2:21</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="controller-shortcuts" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                16.
                        Do Less Work in the Controller
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 4:23</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


            
                
                                <li class="title chapter-list-item ">
            <a href="mind-tricks" class="">
                <div class="row">
                    <div class="col-xs-9">
                                                17.
                        Twig Mind Tricks
                                            </div>

                                    <div class="col-xs-3 text-right">
                        <span> 1:55</span>
                    </div>
                                </div>
            </a>
            <div class="row">
                <div class="col-xs-12">
                                    </div>
            </div>
        </li>


                    </ul>
    </div>

    
              </div>
          </div>
      </div>
  </div>
  <div>
                <a href="../../pricing/symfony2-ep1" class="btn btn-success pull-right-md download-buy-buttons">Buy <span class="hidden-xs">Access to Course</span></a>
              </div>
</div>


        <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-9 col-lg-10">
                <h1 class="account-header account-header-low-margin-top">Databases and Doctrine</h1>
                    <div style="margin-bottom: 10px;">
        <span class="label label-success">UPGRADE!</span>
        <a href="../symfony/resume">Check out the newest version of this tutorial</a>
    </div>

                                    <p class="hidden-xs">
                        Course:
                        <a class="knp-color-black" href="http://knpuniversity.com/screencast/symfony2-ep1"><em>Starting in Symfony2: Course 1 (2.4+) Tutorial</em></a>                    </p>
                            </div>
        </div>

                <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="full-block-container">
                    <div class="frame-padding">
                        <div id="player">
                                                                                <div>
                                                                <div class="row">
                                    <div class="end-show">
                                        <div class="xs-col-12">
                                            <p class="end-show-header">Keep learning!</p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link"><a href="../../pricing.1" class="btn btn-success btn-md">Start your All Access Pass</a></p>
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="end-show-link text-center"><a href="../buy/collections" class="knp-color-white">Buy just this tutorial for $12.00</a></p>
                                        </div>
                                    </div>
                                </div>
                                                            </div>
                                                </div>
                    </div>
                </div>
            </div>
        </div>
         
        <div class="row">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                <div class="pull-right">
                                    <a class="btn btn-success"
           href="doctrine2#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                </div>

                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a data-toggle="tab" href="doctrine#tab-script">Script</a></li>
                    <li><a data-toggle="tab" href="doctrine#tab-comment">
                        <i class="fa fa-comment-o"></i>
                                                    
                                                                                                (25+)
                                                                                        Conversation
                                            </a></li>
                </ul>

                <div class="tab-content">
                    <div class="tab-pane active" id="tab-script">
                        <div class="js-script-content-wrapper top-margin-script script-content">
                                                                                        <a href="https://github.com/knpuniversity/symfony2-series/edit/master/knpu/episode1/doctrine.rst" target="_blank" class="btn btn-default btn-circle pull-right js-tooltip" title="Edit on GitHub"><span class="fa fa-pencil"></span></a>
                                                                    
  <div class="section" id="databases-and-doctrine">
<h1>Databases and Doctrine<a class="headerlink" href="doctrine#databases-and-doctrine" title="Permalink to this headline">¶</a></h1>
<p>Symfony doesn&#8217;t care about your database or the code you use to talk to it.
Seriously. It&#8217;s not trying to be rude, but other libraries already solve
this problem. So if you want to make a <cite>:phpclass:PDO</cite> connection and run
raw SQL queries, that&#8217;s great! When we create services in <a class="reference external" href="../symfony2-ep3/services">Episode 3</a>, you&#8217;ll
learn some life-saving strategies to organize something like this.</p>
<p>But most people that use Symfony use a third-party library called Doctrine.
It has its own <a class="reference external" href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/index.html">website and documentation</a>, though <a class="reference external" href="http://symfony.com/doc/current/book/doctrine.html">Symfony&#8217;s Doctrine documentation</a>
is a lot friendlier.</p>
<p>In a nutshell, Doctrine maps rows and columns in your database to objects
and properties in PHP. Imagine we have an <tt class="docutils literal"><span class="pre">Event</span></tt> object with <tt class="docutils literal"><span class="pre">name</span></tt>
and <tt class="docutils literal"><span class="pre">location</span></tt> properties. If we tell Doctrine to save this object, it
inserts a row into a table and puts the data on <tt class="docutils literal"><span class="pre">name</span></tt> and <tt class="docutils literal"><span class="pre">location</span></tt>
columns. And when we query for the event, it puts the column data back onto
the properties of an Event object.</p>
<p>The big confusing mind-switch is to stop thinking about tables and start thinking
about PHP classes.</p>
<div class="section" id="creating-the-event-entity-class">
<h2>Creating the Event Entity Class<a class="headerlink" href="doctrine#creating-the-event-entity-class" title="Permalink to this headline">¶</a></h2>
<p>In fact, let&#8217;s create the <tt class="docutils literal"><span class="pre">Event</span></tt> class we were talking about. The console
can even make this for us with the <tt class="docutils literal"><span class="pre">doctrine:generate:entity</span></tt> command:</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>php app/console doctrine:generate:entity
</pre></div>
</div>
<p>Like other commands, this one is self-aware and will start asking you questions.
In step 1, enter <tt class="docutils literal"><span class="pre">EventBundle:Event</span></tt>. This is another top-secret shortcut
name and it means you want the <tt class="docutils literal"><span class="pre">Event</span></tt> class to live inside the <tt class="docutils literal"><span class="pre">EventBundle</span></tt>.</p>
<p>Now, choose annotation as the configuration format and move on to field
creation. Add the following fields:</p>
<ul class="simple">
<li><tt class="docutils literal"><span class="pre">name</span></tt> as a string field;</li>
<li><tt class="docutils literal"><span class="pre">time</span></tt> as a datetime field;</li>
<li><tt class="docutils literal"><span class="pre">location</span></tt> as a string field;</li>
<li>and <tt class="docutils literal"><span class="pre">details</span></tt> as a text field.</li>
</ul>
<p>These types here are configuration that tell Doctrine how each property should
be stored in the database.</p>
<p>If you messed anything up, panic! Or just exit with <tt class="docutils literal"><span class="pre">ctrl+c</span></tt> try the command
again. Nothing happens until it finishes.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">All of the Doctrine data types are explained in their documentation:
<a class="reference external" href="http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/basic-mapping.html#doctrine-mapping-types">Doctrine Mapping Types</a>.</p>
</div>
<p>Say &#8220;yes&#8221; for the repository class and confirm generation. A repository is
a cool guy we&#8217;ll use later to store custom queries.</p>
<div class="section" id="what-just-happened">
<h3>What just Happened?<a class="headerlink" href="doctrine#what-just-happened" title="Permalink to this headline">¶</a></h3>
<p>Ok! So what did that do? Actually, it just created 2 new classes in an <tt class="docutils literal"><span class="pre">Entity</span></tt>
directory in our bundle. And that&#8217;s it.</p>
<p>Check out the new <tt class="docutils literal"><span class="pre">Event</span></tt> class:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/Yoda/EventBundle/Entity/Event.php</span>
<span class="k">namespace</span> <span class="nx">Yoda\EventBundle\Entity</span><span class="p">;</span>

<span class="sd">/**</span>
<span class="sd"> * @ORM\Table()</span>
<span class="sd"> * @ORM\Entity(repositoryClass=&quot;Yoda\EventBundle\Entity\EventRepository&quot;)</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">Event</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @ORM\Column(name=&quot;id&quot;, type=&quot;integer&quot;)</span>
<span class="sd">     * @ORM\Id</span>
<span class="sd">     * @ORM\GeneratedValue(strategy=&quot;AUTO&quot;)</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$id</span><span class="p">;</span>

    <span class="sd">/**</span>
<span class="sd">     * @ORM\Column(name=&quot;name&quot;, type=&quot;string&quot;, length=255)</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$name</span><span class="p">;</span>

    <span class="c1">// ...</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">getName</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">setName</span><span class="p">(</span><span class="nv">$name</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">name</span> <span class="o">=</span> <span class="nv">$name</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
<p>For Doctrine, the word &#8220;entity&#8221; means a normal PHP class that we will save
to the database. So, whenever I say &#8220;entity&#8221;, just scream: &#8220;that&#8217;s just
a normal PHP class!&#8221;. Your co-workers will love you!</p>
<p>If you ignore the PHP comments, you&#8217;ll see that this is a plain old PHP class.
It doesn&#8217;t do anything: it just stores data on its private properties. Getter
and setter methods - like <tt class="docutils literal"><span class="pre">getName()</span></tt> and <tt class="docutils literal"><span class="pre">setName()</span></tt> - were generated
so we can play with an event&#8217;s data. It&#8217;s underwhelming, almost disappointing,
and that&#8217;s what makes Doctrine so interesting.</p>
<p>Now, check out the PHP comments above the class. These comments are called
&#8220;annotations&#8221;, and they&#8217;re actually read and parsed by Doctrine. So when
you hear &#8220;annotations&#8221;, shout &#8220;PHP comments that are read like configuration!&#8221;.</p>
<p>These tell Doctrine <em>how</em> it should save an <tt class="docutils literal"><span class="pre">Event</span></tt> object to the database.
Right now, they will save to an <tt class="docutils literal"><span class="pre">event</span></tt> table and each property will be
a column in that table. I usually like to prefix all of my table names, so
let&#8217;s do that by adding a name option to the <tt class="docutils literal"><span class="pre">Table</span></tt> annotation:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="sd">/**</span>
<span class="sd"> * @ORM\Table(name=&quot;yoda_event&quot;)</span>
<span class="sd"> * @ORM\Entity(repositoryClass=&quot;Yoda\EventBundle\Entity\EventRepository&quot;)</span>
<span class="sd"> */</span>
<span class="k">class</span> <span class="nc">Event</span>
<span class="p">{</span>
    <span class="c1">// ...</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="creating-the-play-script">
<h2>Creating the &#8220;play&#8221; Script<a class="headerlink" href="doctrine#creating-the-play-script" title="Permalink to this headline">¶</a></h2>
<p>We&#8217;re ready to insert data, but first I want to show you a debugging trick.
First, copy the <tt class="docutils literal"><span class="pre">web/app_dev.php</span></tt> file to the root of the project and
rename it to <tt class="docutils literal"><span class="pre">play.php</span></tt>:</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>cp web/app_dev.php play.php
</pre></div>
</div>
<p>Open it up and remove the IP protection stuff at the top and update the require
paths since we moved things around:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// play.php</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Request</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Debug\Debug</span><span class="p">;</span>
<span class="nb">umask</span><span class="p">(</span><span class="mo">0000</span><span class="p">);</span>

<span class="nv">$loader</span> <span class="o">=</span> <span class="k">require_once</span> <span class="nx">__DIR__</span><span class="o">.</span><span class="s1">&#39;/app/bootstrap.php.cache&#39;</span><span class="p">;</span>
<span class="nx">Debug</span><span class="o">::</span><span class="na">enable</span><span class="p">();</span>

<span class="k">require_once</span> <span class="nx">__DIR__</span><span class="o">.</span><span class="s1">&#39;/app/AppKernel.php&#39;</span><span class="p">;</span>
<span class="c1">// ...</span>
</pre></div>
</div>
<p>This script boots Symfony, processes the request, and spits out the page.
But I have evil plans to transform it into a debugging monster where we can
write random code and execute it from the command line to see what happens.</p>
<p>Replace the last three lines with <tt class="docutils literal"><span class="pre">$kernel-&gt;boot()</span></tt>:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// ...</span>
<span class="k">require_once</span> <span class="nx">__DIR__</span><span class="o">.</span><span class="s1">&#39;/app/AppKernel.php&#39;</span><span class="p">;</span>

<span class="nv">$kernel</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">AppKernel</span><span class="p">(</span><span class="s1">&#39;dev&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
<span class="nv">$kernel</span><span class="o">-&gt;</span><span class="na">loadClassCache</span><span class="p">();</span>
<span class="nv">$request</span> <span class="o">=</span> <span class="nx">Request</span><span class="o">::</span><span class="na">createFromGlobals</span><span class="p">();</span>
<span class="nv">$kernel</span><span class="o">-&gt;</span><span class="na">boot</span><span class="p">();</span>
</pre></div>
</div>
<p>Remember the service container from earlier? We have access to it here. To
make it as flexible as possible, I&#8217;ll add a few lines that help fake a real
request. This is a little jedi mind trick so don&#8217;t worry about what these
do right now:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// play.php</span>
<span class="k">use</span> <span class="nx">Symfony\Component\HttpFoundation\Request</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Component\Debug\Debug</span><span class="p">;</span>
<span class="nb">umask</span><span class="p">(</span><span class="mo">0000</span><span class="p">);</span>

<span class="nv">$loader</span> <span class="o">=</span> <span class="k">require_once</span> <span class="nx">__DIR__</span><span class="o">.</span><span class="s1">&#39;/app/bootstrap.php.cache&#39;</span><span class="p">;</span>
<span class="nx">Debug</span><span class="o">::</span><span class="na">enable</span><span class="p">();</span>

<span class="k">require_once</span> <span class="nx">__DIR__</span><span class="o">.</span><span class="s1">&#39;/app/AppKernel.php&#39;</span><span class="p">;</span>

<span class="nv">$kernel</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">AppKernel</span><span class="p">(</span><span class="s1">&#39;dev&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
<span class="nv">$kernel</span><span class="o">-&gt;</span><span class="na">loadClassCache</span><span class="p">();</span>
<span class="nv">$request</span> <span class="o">=</span> <span class="nx">Request</span><span class="o">::</span><span class="na">createFromGlobals</span><span class="p">();</span>
<span class="nv">$kernel</span><span class="o">-&gt;</span><span class="na">boot</span><span class="p">();</span>

<span class="nv">$container</span> <span class="o">=</span> <span class="nv">$kernel</span><span class="o">-&gt;</span><span class="na">getContainer</span><span class="p">();</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">enterScope</span><span class="p">(</span><span class="s1">&#39;request&#39;</span><span class="p">);</span>
<span class="nv">$container</span><span class="o">-&gt;</span><span class="na">set</span><span class="p">(</span><span class="s1">&#39;request&#39;</span><span class="p">,</span> <span class="nv">$request</span><span class="p">);</span>

<span class="c1">// all our setup is done!!!!!!</span>
</pre></div>
</div>
<p>Our evil creation is alive! So let&#8217;s play around. How could we render a template
here? Why, just by grabbing the <tt class="docutils literal"><span class="pre">templating</span></tt> service and using its <tt class="docutils literal"><span class="pre">render()</span></tt>
method:</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// ...</span>
<span class="c1">// all our setup is done!!!!!!</span>
<span class="nv">$templating</span> <span class="o">=</span> <span class="nv">$container</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;templating&#39;</span><span class="p">);</span>

<span class="k">echo</span> <span class="nv">$templating</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span>
    <span class="s1">&#39;EventBundle:Default:index.html.twig&#39;</span><span class="p">,</span>
    <span class="k">array</span><span class="p">(</span>
        <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Yoda&#39;</span><span class="p">,</span>
        <span class="s1">&#39;count&#39;</span> <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">,</span>
    <span class="p">)</span>
<span class="p">);</span>
</pre></div>
</div>
<p>Execute the play script from the command line.</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>php play.php
</pre></div>
</div>
<p>When I run it, the template is rendered and printed out. How cool is that?
This is perfect for whenever we need to quickly test out some code.</p>
</div>
</div>


    
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-comment">
                        <h3>Leave a comment!</h3>
                                                        <div id="disqus_thread">
                <style type="text/css">
            #dsq-comments {padding: 10px 0 0}
            .dsq-comment {position: relative;clear: both;margin: 0 0 1.5em;}
            .dsq-avatar {left: 0;position: absolute;}
            .dsq-avatar img {border: 0 none;border-radius: 3px;height: 36px;width: 36px;}
            .dsq-comment-body {padding: 0 0 0 46px;}
            .dsq-comment-header {border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 3px;font-size: 13px;line-height: 14px;margin: 0 0 1em;max-height: 36px;overflow: hidden;padding: 10px;position: relative;text-overflow: ellipsis;white-space: nowrap;}
            .dsq-comment-message {word-wrap: break-word;}
            .dsq-comment-message {line-height: 1.5em;margin: 0 0 1em;}
            .dsq-comment-text {display: inline;}
            .dsq-comment-date {float: right;font-size: 90%;margin: 0 12px 0 0;}
        </style>

	    <div id="dsq-content">
	        <ul id="dsq-comments">
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3006592326" id="dsq-comment-3006592326">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3006592326">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-17</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-3006592326" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3006592326" class="dsq-comment-text">
	                                <p>Just to follow on up on what Victor is suggesting: basically, your computer/application is behaving VERY strangely. It seems that when PHP talks to MySQL, it "freezes". That was proven when it also froze while running the doctrine:database:create command. Neither of us have seen anything like this before, nor can we find anything on Google about it! You seem to have stumbled over something very odd!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3006269535" id="dsq-comment-3006269535">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3006269535">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-17</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-3006269535" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3006269535" class="dsq-comment-text">
	                                <p>Hey Pete,</p><p>I have a few more instructions for you, perhaps something could help us:</p><p>1. Could you show us content of your current app/config/parameters.yml file? (please, note, the parameters.yml  not parameters.yml.dist)?</p><p>2. I suppose you installed PHP first, then MySQL. Since MySQL is working on your machine, could you reinstall php? Maybe brew will fix some missing configuration in this case. Try this command: <code>brew reinstall homebrew/php/php70 --force</code> (for me it's php70, but use your version of PHP you have already installed) and look closely to the output. Probably you'll get some suggestion from brew.</p><p>3. Could you try to use "database_host: localhost" instead of 127.0.0.1 in app/config/parameters.yml? But right after this change manually remove app/cache/dev and app/cache/prod folders first and only then try to run console command which is freeze for you before. If nothing happen - I think better revert it to the 127.0.0.1 IP then.</p><p>4. What about to specify explicitly the environment for running command? Please run the same command in dev env: <code>php app/console doctrine:database:create --env=dev</code> . Probably you should see some errors in the output instead of freeze. Then try the same command in prod: <code>php app/console doctrine:database:create --env=prod</code> . Is there any difference?</p><p>5. And the last, could you check another project? Probably you have something corrupted in the current one. I'd recommend you to download a clear Symfony SE app. Here's a few instruction how to install it: <a href="http://disq.us/url?url=http%3A%2F%2Fsymfony.com%2Fdownload%3AmaPh6_K8kv8iE2saDYlt5ny5ecc&amp;cuid=1175718" rel="nofollow noopener">http://symfony.com/download</a> . First, install the Symfony Installer. Then, execute this command: <code>symfony new my_project</code>. And then from my_project folder run the server at first: <code>php bin/console server:run</code>. Is it work? Do you see the "Welcome" message when you open localhost:8000 ? If server works - that's very good! Then try to execute <code>php bin/console doctrine:database:create</code>? Is it still freeze too?</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3005599750" id="dsq-comment-3005599750">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/petegarvin/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3005599750">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-16</span>
	                            <span class="dsq-commenter-name">Pete Garvin</span>
	                        </div>

	                        <div id="dsq-comment-message-3005599750" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3005599750" class="dsq-comment-text">
	                                <p>Thanks Ryan. So I've done all of that. Good news is it looks like sql is working... bad news is the problem hasn't gone.</p><p>Output from 1):</p><p>petergarvin (master) PHPtodo $ mysql -u root</p><p>Welcome to the MySQL monitor.  Commands end with ; or \g.</p><p>Your MySQL connection id is 2</p><p>Server version: 5.7.16 Homebrew</p><p>Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</p><p>Oracle is a registered trademark of Oracle Corporation and/or its</p><p>affiliates. Other names may be trademarks of their respective</p><p>owners.</p><p>Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</p><p>mysql&gt;</p><p>Output from 2):</p><p>petergarvin (master) PHPtodo $ php app/console doctrine:database:create</p><p>Command just didn't do anything - prompt never re-appeared. Nothing else happened.</p><p>from 3) Yep I am pressing return (i know the output doesn't always look like it). Tried the -vvv command and same thing happened:</p><p>petergarvin (master) PHPtodo $ php app/console doctrine:generate:entity -vvv</p><p>  Welcome to the Doctrine2 entity generator</p><p>This command helps you generate Doctrine2 entities.</p><p>First, you need to give the entity name you want to generate.</p><p>You must use the shortcut notation like AcmeBlogBundle:Post.</p><p>The Entity shortcut name: EventBundle:Task</p><p>Again, just sits there - nothing happening</p><p>Also I should say - in all instances where it 'freezes' or nothing happens, I use ctrl+C to quit out and get the prompt back. Feels like that suggests I'm 'in' something?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3004872589" id="dsq-comment-3004872589">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3004872589">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-16</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-3004872589" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3004872589" class="dsq-comment-text">
	                                <p>Yo Pete!</p><p>Ok, 2 things!</p><p>1) Let's make sure MySQL is running. Try running this from the terminal:</p><p></p><pre><code><br>mysql -u root<br></code></pre><p></p><p>If this connects to the MySQL terminal, you are in business :). If not, try the <code>brew services start mysql</code> command.</p><p>2) To make sure that PHP can see MySQL, try running this command:</p><p></p><pre><code><br>php app/console doctrine:database:create<br></code></pre><p></p><p>Does that create a database (or at least say "Database already exists")?</p><p>3) About the generator task - I just want to make sure: after you type <code>EventBundle:Task</code>, are you pressing enter? I'm positive you are, *just* double-checking! When you try this task again, try running with in "very verbose" mode, so:</p><p></p><pre><code><br>php app/console doctrine:generate:entity -vvv<br></code></pre><p></p><p>This may give you more log output on the screen before it "freezes".</p><p>Let us know what you find out!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3004866466" id="dsq-comment-3004866466">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3004866466">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-16</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-3004866466" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3004866466" class="dsq-comment-text">
	                                <p>Hey Pete!</p><p>Ah, I understand! So, the version of Symfony that you *probably* want is Symfony 3 (current stable is Symfony 3.1). But, it's a bit more interesting that that. You see, Symfony's latest stable release is 3.1, and in a few weeks, the stable 3.2 will be released. However, the latest long-term support (LTS) release is still 2.8. The next LTS Will be Symfony 3.4, released at the end of Nov 2017. Typically, if you're starting a new project, you will just want the latest release (3.1). But sometimes, if you have a big enterprise project that you know you won't be able to upgrade any time soon, then you will choose the LTS release. The difference is that the LTS is supported for longer. You can even see information about when releases are supported on this page: <a href="http://disq.us/url?url=http%3A%2F%2Fsymfony.com%2Froadmap%3AT-SALtbxHVRFLAQjW0spHf8D2cU&amp;cuid=1175718" rel="nofollow noopener">http://symfony.com/roadmap</a>. So, for example, if you started a Symfony 2.8 project, you will receive bug fixes until Nov 2018 (then you will need to upgrade to the new LTS, 3.4 at that time). But, if you started a Symfony 3.1 project, you will receive bug fixes until only Jan 2017 (for 3.2, it will be July 2017). This means that to stay on a supported version, you'll need to upgrade Symfony a bit more frequently. That's less of a big deal than it sounds like: upgrading "minor" versions (e.g. 3.1 to 3.2, or 3.2 to 3.3) is very easy because Symfony protects against backwards-compatibility breaks.</p><p>SO, the choice is your's :). But, I would still probably recommend going through the Symfony 3 tutorial, even if you'll use Symfony 2.8 (or better, go through both tutorials eventually). Not much changed between Symfony 2 and 3, but the newer tutorials are updated for current best-practices, etc. The only thing that you'll need to "translate" from the Symfony 3 tutorials back to a Symfony 2 project is a slight directory structure change, e.g. app/console in Symfony2 was renamed to bin/console. We talk about these changes here: <a href="https://disq.us/url?url=https%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fsymfony3-upgrade%2Fnew-dir-structure%3AZfgdLQRPI1-rS8FLfNpKw_efDtM&amp;cuid=1175718" rel="nofollow noopener">https://knpuniversity.com/scre...</a></p><p>Let me know if this helps!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3004800247" id="dsq-comment-3004800247">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/petegarvin/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3004800247">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-16</span>
	                            <span class="dsq-commenter-name">Pete Garvin</span>
	                        </div>

	                        <div id="dsq-comment-message-3004800247" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3004800247" class="dsq-comment-text">
	                                <p>Ryan, I think the company I am interested in uses the latest stable version of Symphony - am I right in thinking that is v2.8? If so I'm guessing the Symphony 3 tutorial isn't what I want?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3004798149" id="dsq-comment-3004798149">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/petegarvin/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3004798149">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-16</span>
	                            <span class="dsq-commenter-name">Pete Garvin</span>
	                        </div>

	                        <div id="dsq-comment-message-3004798149" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3004798149" class="dsq-comment-text">
	                                <p>OK thanks Victor... seems like iv pinched forward again - managed to manually start the sql server as you suggested. also got the info on it (below). Same issue though when I got to create an entity. Ryan maybe I used the wrong word when I said freeze, everything still works fine and is responsive, just that it never gets any further than the below. Just sits there.</p><p>petergarvin (master) PHPtodo $ brew info mysql</p><p>mysql: stable 5.7.16 (bottled)</p><p>Open source relational database management system</p><p><a href="https://disq.us/url?url=https%3A%2F%2Fdev.mysql.com%2Fdoc%2Frefman%2F5.7%2Fen%2F%3AdTgkrt-_vYWTs-01TicFuiajQAM&amp;cuid=1175718" rel="nofollow noopener">https://dev.mysql.com/doc/refm...</a></p><p>Conflicts with: mariadb, mariadb-connector-c, mysql-cluster, mysql-connector-c, percona-server</p><p>/usr/local/Cellar/mysql/5.7.16 (13,511 files, 439M) *</p><p>  Poured from bottle on 2016-11-14 at 08:37:37</p><p>From: <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2FHomebrew%2Fhomebrew-core%2Fblob%2Fmaster%2FFormula%2Fmysql.rb%3Adem12OD-ydf7L34l3pClE3PJv50&amp;cuid=1175718" rel="nofollow noopener">https://github.com/Homebrew/ho...</a></p><p>==&gt; Dependencies</p><p>Build: cmake ✘</p><p>Required: openssl ✔</p><p>==&gt; Requirements</p><p>Required: macOS &gt;= 10.7 ✔</p><p>==&gt; Options</p><p>--with-archive-storage-engine</p><p>	Compile with the ARCHIVE storage engine enabled</p><p>--with-blackhole-storage-engine</p><p>	Compile with the BLACKHOLE storage engine enabled</p><p>--with-debug</p><p>	Build with debug support</p><p>--with-embedded</p><p>	Build the embedded server</p><p>--with-local-infile</p><p>	Build with local infile loading support</p><p>--with-test</p><p>	Build with unit tests</p><p>==&gt; Caveats</p><p>We've installed your MySQL database without a root password. To secure it run:</p><p>    mysql_secure_installation</p><p>To connect run:</p><p>    mysql -uroot</p><p>To have launchd start mysql now and restart at login:</p><p>  brew services start mysql</p><p>Or, if you don't want/need a background service you can just run:</p><p>  mysql.server start</p><p>petergarvin (master) PHPtodo $ mysql.server start</p><p>Starting MySQL</p><p>. SUCCESS!</p><p>petergarvin (master) PHPtodo $ php app/console doctrine:generate:entity</p><p>  Welcome to the Doctrine2 entity generator</p><p>This command helps you generate Doctrine2 entities.</p><p>First, you need to give the entity name you want to generate.</p><p>You must use the shortcut notation like AcmeBlogBundle:Post.</p><p>The Entity shortcut name: EventBundle:Task</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3003227236" id="dsq-comment-3003227236">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3003227236">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-15</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-3003227236" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3003227236" class="dsq-comment-text">
	                                <p>I'll also add that the "freezing" you're getting is VERY odd - I don't understand why that would be happening, and it's very possible that your database is setup just fine (or, it's possible that it could be a MySQL connection error... though I would expect that to have an error, not freeze).</p><p>By the way - the tutorial you're going through is a bit outdated! But there is a newer version you can find here, which might be a bit more useful! <a href="http://disq.us/url?url=http%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fsymfony%3A5vN-K7VPjgNlIR_TTuujnCbElGo&amp;cuid=1175718" rel="nofollow noopener">http://knpuniversity.com/scree...</a></p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3002968250" id="dsq-comment-3002968250">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3002968250">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-15</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-3002968250" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3002968250" class="dsq-comment-text">
	                                <p>Oh, I see... OK, I'm on Mac too, so I can tell you a bit about my workflow: I installed with brew package manager "mysql" and "php70" packages - it will be enough for local development for this course, and actually for most our courses too. Also I additionally installed a few php extensions with brew for Symfony project: php70-intl, php70-xdebug, php70-opcache. Then brew manager should do other work for you.</p><p>When you install a package with brew - look closely to the output, it could has some additional instructions. You can see more information about installed package with "brew info %package%", e.g. "brew info mysql" show you information about mysql server, and at the end of the output you could see that you can start MySQL server with "mysql.server start" command.</p><p>So I think you need to start it manually at first, and then try to connect to the DB manually with such tool as MySQL Workbench or better SequelPro which I like more: <a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fsequelpro%2Fsequelpro%3A_8wOcxwS_CjKKJANCYp4DLl8SwI&amp;cuid=1175718" rel="nofollow noopener">https://github.com/sequelpro/s...</a> . It's a free MySQL database management tool for Mac OS X. If you could connect to your MySQL server (create DB, tables, etc.). And if it works fine - try to connect to the DB from your Symfony application using the same credentials which you used in SequelPro. Let me know if you have any issues with this workflow.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3002912347" id="dsq-comment-3002912347">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/petegarvin/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3002912347">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-15</span>
	                            <span class="dsq-commenter-name">Pete Garvin</span>
	                        </div>

	                        <div id="dsq-comment-message-3002912347" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3002912347" class="dsq-comment-text">
	                                <p>Hi Victor thanks for your message, nope I'm on OS X! Currently I'm just using a local server - could that be the issue? Don't think so as this tutorial uses local and seems to run fine. Iv never sent any data to the DB (MySQL freshly installed). Any thoughts on why it's just hanging at the generate entity nickname command?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3002159046" id="dsq-comment-3002159046">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3002159046">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-14</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-3002159046" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3002159046" class="dsq-comment-text">
	                                <p>Yo Pete!</p><p>Yea, it can be a lot :). Here's what you should do:</p><p>Run <code>php -v</code> from the command line. We want the version to be 5.6.XX, probably 5.6.27, but the last number doesn't really matter. If it is, yay! Your new PHP is being used. If it is still 5.5.36... then your old PHP from OSX is still being used. If you still have the old version, then do the following:</p><p>A) In your terminal, edit your <code>~/.profile</code> file. I use vim, so I say <code>vim ~/.profile</code>. If you don't have this file, you can just create it</p><p>B) Anywhere inside, add this:</p><p></p><pre><code><br>export PATH="$(brew --prefix homebrew/php/php56)/bin:$PATH"<br></code></pre><p></p><p>Then open a new tab, and try <code>php -v</code> again, it should use the correct, new version :).</p><p>Don't worry about the other stuff. Basically, PHP is an executable... but we just need to make sure that your terminal sees the *new* php executable, not the old one. Also, after you do all this, if you're using the built-in PHP web server like we do in this tutorial (using app/console server:run or bin/console server:run depending on your Symfony version), then stop that (ctrl+C), open a new tab, and restart it (so that it uses the new PHP).</p><p>Let me know if this works!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3002079932" id="dsq-comment-3002079932">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/bocharsky25/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/11445/2822/avatar92.jpg?1482506193">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3002079932">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-14</span>
	                            <span class="dsq-commenter-name">Victor Bocharsky</span>
	                        </div>

	                        <div id="dsq-comment-message-3002079932" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3002079932" class="dsq-comment-text">
	                                <p>Hey Pete,</p><p>I suppose you're on Windows, right? Unfortunately, weird things could occur on Windows... :( What PHP server do you use? Could you restart it and repeat? Also could content to the DB in your Symfony application (I mean not in console but fetch any existent data from DB in code, i.e. get any entity from DB)? Does it work for you?</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3001395424" id="dsq-comment-3001395424">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/petegarvin/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3001395424">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-14</span>
	                            <span class="dsq-commenter-name">Pete Garvin</span>
	                        </div>

	                        <div id="dsq-comment-message-3001395424" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3001395424" class="dsq-comment-text">
	                                <p>Also, if I quit the server while the entity generator is hanging, I get the following:</p><p>$ php app/console doctrine:generate:entity</p><p>  Welcome to the Doctrine2 entity generator</p><p>This command helps you generate Doctrine2 entities.</p><p>First, you need to give the entity name you want to generate.</p><p>You must use the shortcut notation like AcmeBlogBundle:Post.</p><p>The Entity shortcut name: EventBundle:Event</p><p>  [Doctrine\DBAL\Exception\DriverException]</p><p>  An exception occured in driver: SQLSTATE[HY000] [2006] MySQL server has gon</p><p>  e away</p><p>  [Doctrine\DBAL\Driver\PDOException]</p><p>  SQLSTATE[HY000] [2006] MySQL server has gone away</p><p>  [PDOException]</p><p>  SQLSTATE[HY000] [2006] MySQL server has gone away</p><p>  [Symfony\Component\Debug\Exception\ContextErrorException]</p><p>  Warning: PDO::__construct(): MySQL server has gone away</p><p>doctrine:generate:entity [--entity ENTITY] [--fields FIELDS] [--format FORMAT] [-h|--help] [-q|--quiet] [-v|vv|vvv|--verbose] [-V|--version] [--ansi] [--no-ansi] [-n|--no-interaction] [-e|--env ENV] [--no-debug] [--] &lt;command&gt;</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="3001382062" id="dsq-comment-3001382062">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/petegarvin/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-3001382062">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-14</span>
	                            <span class="dsq-commenter-name">Pete Garvin</span>
	                        </div>

	                        <div id="dsq-comment-message-3001382062" class="dsq-comment-message">
	                            <div id="dsq-comment-text-3001382062" class="dsq-comment-text">
	                                <p>Ryan i went ahead and installed mysql, which seemed to go fine (!)</p><p>However, now when going through the below part of the tutorial, I get no connection error, but the terminal just does nothing (left up to 10 mins):</p><p>$ php app/console doctrine:generate:entity</p><p>  Welcome to the Doctrine2 entity generator</p><p>This command helps you generate Doctrine2 entities.</p><p>First, you need to give the entity name you want to generate.</p><p>You must use the shortcut notation like AcmeBlogBundle:Post.</p><p>The Entity shortcut name: EventBundle:Event</p><p>After that, nothing moves. If I do CTRL+C, my PHP web server shows:</p><p>[Mon Nov 14 12:30:14 2016] 127.0.0.1:55835 Invalid request (Unexpected EOF)</p><p>Any ideas?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2999969685" id="dsq-comment-2999969685">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/petegarvin/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2999969685">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-13</span>
	                            <span class="dsq-commenter-name">Pete Garvin</span>
	                        </div>

	                        <div id="dsq-comment-message-2999969685" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2999969685" class="dsq-comment-text">
	                                <p>OK great thanks - making some progress! So after the first install - this was the message:</p><p>The php.ini file can be found in:</p><p>    /usr/local/etc/php/5.6/php.ini</p><p>✩✩✩✩ Extensions ✩✩✩✩</p><p>If you are having issues with custom extension compiling, ensure that</p><p>you are using the brew version, by placing /usr/local/bin before /usr/sbin in your PATH:</p><p>      PATH="/usr/local/bin:$PATH"</p><p>PHP56 Extensions will always be compiled against this PHP. Please install them</p><p>using --without-homebrew-php to enable compiling against system PHP.</p><p>✩✩✩✩ PHP CLI ✩✩✩✩</p><p>If you wish to swap the PHP you use on the command line, you should add the following to ~/.bashrc,</p><p>~/.zshrc, ~/.profile or your shell's equivalent configuration file:</p><p>      export PATH="$(brew --prefix homebrew/php/php56)/bin:$PATH"</p><p>✩✩✩✩ FPM ✩✩✩✩</p><p>To launch php-fpm on startup:</p><p>    mkdir -p ~/Library/LaunchAgents</p><p>    cp /usr/local/opt/php56/homebrew.mxcl.php56.plist ~/Library/LaunchAgents/</p><p>    launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.php56.plist</p><p>The control script is located at /usr/local/opt/php56/sbin/php56-fpm</p><p>OS X 10.8 and newer come with php-fpm pre-installed, to ensure you are using the brew version you need to make sure /usr/local/sbin is before /usr/sbin in your PATH:</p><p>  PATH="/usr/local/sbin:$PATH"</p><p>You may also need to edit the plist to use the correct "UserName".</p><p>Please note that the plist was called 'homebrew-php.josegonzalez.php56.plist' in old versions</p><p>of this formula.</p><p>With the release of macOS Sierra the Apache module is now not built by default. If you want to build it on your system</p><p>you have to install php with the --with-apache option. See  brew options php56  for more details.</p><p>To have launchd start homebrew/php/php56 now and restart at login:</p><p>  brew services start homebrew/php/php56</p><p>To be honest, I'm not sure I follow it. Which bits do I need to do - not even sure i know where to find these directories if I'm honest</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2999356055" id="dsq-comment-2999356055">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2999356055">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-13</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2999356055" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2999356055" class="dsq-comment-text">
	                                <p>Yo Pete!</p><p>This is absolutely enough! You're likely using the PHP that comes standard with OSX. Here's what I'd recommend to give you the best experience, and to be like "most" OSX users:</p><p>1) Install Homebrew<br>2) Use Homebrew to install php, e.g. <code>brew install homebrew/php/php56</code></p><p>The advantage is that you can easily install php extensions and other libraries with Brew. For example, I would also install these things:</p><p></p><pre><code><br>brew install homebrew/php/php56-apcu homebrew/php/php56-intl homebrew/php/php56-mcrypt homebrew/php/php56-opcache homebrew/php/php56-xdebug <br></code></pre><p></p><p>And of course, we'll want to install MySQL!</p><p></p><pre><code><br>brew install mysql<br></code></pre><p></p><p>This should at least get you started! Let me know if you have any questions! After you install the first package (php56), read the details it tells you - it may give you a command or two to run so that your terminal knows to use your *new* php, and not the built-int PHP in OSX.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2998578711" id="dsq-comment-2998578711">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/petegarvin/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2998578711">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-12</span>
	                            <span class="dsq-commenter-name">Pete Garvin</span>
	                        </div>

	                        <div id="dsq-comment-message-2998578711" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2998578711" class="dsq-comment-text">
	                                <p>Hey Ryan,</p><p>I don't know how I installed php, but I know I have PHP 5.5.36 (cli)<br>My Operating system is OS X El Capitan Version 10.11.6</p><p>Is that enough info?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2994862961" id="dsq-comment-2994862961">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2994862961">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-10</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2994862961" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2994862961" class="dsq-comment-text">
	                                <p>Hey Pete!</p><p>No worries :). You're right, we don't mention it. What operating system do you have, and how did you install PHP? The best answer for how to install varies based on operating system, and downloading it directly from the MySQL site (oddly enough) isn't the easiest solution on most systems.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2993648671" id="dsq-comment-2993648671">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/petegarvin/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2993648671">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-09</span>
	                            <span class="dsq-commenter-name">Pete Garvin</span>
	                        </div>

	                        <div id="dsq-comment-message-2993648671" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2993648671" class="dsq-comment-text">
	                                <p>thanks for coming back to me Ryan... embarassingly no, I haven't installed mysql... although to be fair the course never mentioned to do so! Guessing I just need the first download link from this page? <a href="http://disq.us/url?url=http%3A%2F%2Fdev.mysql.com%2Fdownloads%2Fmysql%2F%3AXTxPNlEWanVCq2QDOyCT2rQGftk&amp;cuid=1175718" rel="nofollow noopener">http://dev.mysql.com/downloads...</a></p><p>To add - I just got it working with your new Gist :D Thanks for that - but as you say, may be a good idea to get mySql up and running properly</p><p></p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2993643148" id="dsq-comment-2993643148">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2993643148">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-09</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2993643148" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2993643148" class="dsq-comment-text">
	                                <p>Yo Pete!</p><p>Ah, just saw this after my reply (<a href="https://disq.us/url?url=https%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fsymfony2-ep1%2Fdoctrine%23comment-2993639740%29%3AINDkZ37eZOYyQjMkM0FxvY0hp4Q&amp;cuid=1175718" rel="nofollow noopener">https://knpuniversity.com/scre...</a>. If you tried SQLite and still got connection refused, then I think there's still something not quite right with your SQLite configuration (i.e. Doctrine is still trying to talk to MySQL for some reason). And probably, it was because I had a bug in my gist! I just updated it - <a href="https://disq.us/url?url=https%3A%2F%2Fgist.github.com%2Fweaverryan%2Fbc71c280140dacd494db%3AcyuH25vVWBZ4FnKisejIfOHEDsk&amp;cuid=1175718" rel="nofollow noopener">https://gist.github.com/weaver...</a> - the driver was incorrect.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2993639740" id="dsq-comment-2993639740">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2993639740">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-09</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2993639740" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2993639740" class="dsq-comment-text">
	                                <p>Hey Pete!</p><p>Welcome to Symfony :). So, you're correct that there's a problem talking to your MySQL database. Basically, "Connection Refused" means "I literally cannot find / connect to your database". Since you set host to localhost (which is correct, unless you have your database server running on a different server, which you likely don't for local dev!), I think that your MySQL database just simply isn't running. Did you install MySQL? What happens if you run this from the command line <code>mysql -u root</code>?</p><p>Another alternative is to run your app using SQLite instead of MySQL, which you can do with some simpler configuration changes (I can help you out if you're interested). But, you probably want to get MySQL up, running and connected.</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2993621158" id="dsq-comment-2993621158">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/petegarvin/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2993621158">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-09</span>
	                            <span class="dsq-commenter-name">Pete Garvin</span>
	                        </div>

	                        <div id="dsq-comment-message-2993621158" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2993621158" class="dsq-comment-text">
	                                <p>I also tried using the Sqlite technique from here that someone recommended: <a href="https://disq.us/url?url=https%3A%2F%2Fgist.github.com%2Fweaverryan%2Fbc71c280140dacd494db%3AcyuH25vVWBZ4FnKisejIfOHEDsk&amp;cuid=1175718" rel="nofollow noopener">https://gist.github.com/weaver...</a></p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2993615100" id="dsq-comment-2993615100">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/petegarvin/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2993615100">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-11-09</span>
	                            <span class="dsq-commenter-name">Pete Garvin</span>
	                        </div>

	                        <div id="dsq-comment-message-2993615100" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2993615100" class="dsq-comment-text">
	                                <p>Hey everyone... very new to Symphony and pulling my hair out for the last few hours. I've been following the tutorials along thus far, and have got to the bit where we are using the doctrine entity generator... then I get the below when I try to name the entity:</p><p>```</p><p>$ php app/console doctrine:generate:entity</p><p>Welcome to the Doctrine2 entity generator</p><p>This command helps you generate Doctrine2 entities.</p><p>First, you need to give the entity name you want to generate.</p><p>You must use the shortcut notation like AcmeBlogBundle:Post.</p><p>The Entity shortcut name: EventBundle:Event</p><p>[Doctrine\DBAL\Exception\ConnectionException]</p><p>An exception occured in driver: SQLSTATE[HY000] [2002] Connection refused</p><p>[Doctrine\DBAL\Driver\PDOException]</p><p>SQLSTATE[HY000] [2002] Connection refused</p><p>[PDOException]</p><p>SQLSTATE[HY000] [2002] Connection refused</p><p>doctrine:generate:entity [--entity ENTITY] [--fields FIELDS] [--format FORMAT] [-h|--help] [-q|--quiet] [-v|vv|vvv|--verbose] [-V|--version] [--ansi] [--no-ansi] [-n|--no-interaction] [-s|--shell] [--process-isolation] [-e|--env ENV] [--no-debug] [--] &lt;command&gt;</p><p>```</p><p>I have had a look through forums and tried changing host to 'localhost' and changing the port number from null to 3306. Neither helped and I have reset these changes. Please help!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2904873298" id="dsq-comment-2904873298">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2904873298">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-09-19</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2904873298" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2904873298" class="dsq-comment-text">
	                                <p>That's what we do on the newer tutorials, except for the beginner PHP or OO tutorials. But, I'm happy that this was a surprise - that's the point!</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2904866052" id="dsq-comment-2904866052">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/maksymminenko/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/9741/646/avatar92.jpg?1473824449">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2904866052">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-09-19</span>
	                            <span class="dsq-commenter-name">Maksym Minenko</span>
	                        </div>

	                        <div id="dsq-comment-message-2904866052" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2904866052" class="dsq-comment-text">
	                                <p>Wow, what a surprise... And I'm definitely not sure it's the right way. I believe the best tutorials are recorded by the authors themselves.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2904842702" id="dsq-comment-2904842702">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2904842702">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-09-19</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2904842702" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2904842702" class="dsq-comment-text">
	                                <p>Ah yes, voiced by Leanna, written by me :)</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2904834470" id="dsq-comment-2904834470">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/maksymminenko/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/9741/646/avatar92.jpg?1473824449">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2904834470">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-09-19</span>
	                            <span class="dsq-commenter-name">Maksym Minenko</span>
	                        </div>

	                        <div id="dsq-comment-message-2904834470" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2904834470" class="dsq-comment-text">
	                                <p>Well, ok, but the chapters I commented on were by Leanna...</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2904819509" id="dsq-comment-2904819509">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2904819509">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-09-19</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2904819509" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2904819509" class="dsq-comment-text">
	                                <p>Hey Maksym!</p><p>Hmm, sorry you're disappointed! If I do something different than the "norm", it's usually to show something in the easier, more "pure" way first, and then later we build on the complexity (instead if building the "normal", but more complex thing first). It's definitely not my intention to be extra fancy - quite the opposite!</p><p>And there's a bit of history to this: I work on the Symfony core, and during much of Symfony2, sometimes we (the community) made things too hard. At times, I'll make things simpler in the tutorials because of this. Fortunately, over time, that's changed - a lot of easy-win simplifications have been adopted in Symfony 3 (really, many were adopted towards the end of Symfony2), and now I go "off-script" quite a bit less.</p><p>Anyways, I hope that gives you a bit of background! And if you have any questions about why I did something, or if you find anything specifically confusing, just ask and we'll be happy to have a conversation about that!</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2904702594" id="dsq-comment-2904702594">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/maksymminenko/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/9741/646/avatar92.jpg?1473824449">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2904702594">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-09-19</span>
	                            <span class="dsq-commenter-name">Maksym Minenko</span>
	                        </div>

	                        <div id="dsq-comment-message-2904702594" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2904702594" class="dsq-comment-text">
	                                <p>Quite disappointing actually, frankly speaking... :( "Let's change that, we don't need this, let's create play.php"...<br>Come on! The framework is quite overwhelming as it is, so go with the default flow first, explain everything and only then (possibly) try to introduce some "tricks".<br>I hope your Symfony 3 tutorials are better.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2877462484" id="dsq-comment-2877462484">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2877462484">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-09-05</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2877462484" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2877462484" class="dsq-comment-text">
	                                <p>Woohoooo! Now keep rocking!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2874538316" id="dsq-comment-2874538316">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_gQPoYRRcKl/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2874538316">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-09-03</span>
	                            <span class="dsq-commenter-name">Max</span>
	                        </div>

	                        <div id="dsq-comment-message-2874538316" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2874538316" class="dsq-comment-text">
	                                <p>Hey Ryan!</p><p>It worked using the /app/autoload.php require statement!  Awesome! :D Thank you so much for your quick and detailed reply!</p><p>Cheers!<br>Max</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2873200963" id="dsq-comment-2873200963">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2873200963">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-09-02</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2873200963" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2873200963" class="dsq-comment-text">
	                                <p>Hi Max!</p><p>Awesome - so glad you're finding the tutorials useful! :D</p><p>Now, about your error. It's interesting... the class you mentioned DOES exist in Symfony 2.8 (<a href="https://disq.us/url?url=https%3A%2F%2Fgithub.com%2Fsymfony%2Fsymfony%2Fblob%2F2.8%2Fsrc%2FSymfony%2FComponent%2FDebug%2FDebug.php%29%3AYZCPgo78D1tsBjwTt3VIwyufIww&amp;cuid=1175718" rel="nofollow noopener">https://github.com/symfony/sym...</a>. So, the problem is related to autoloading somehow. Which file are you requiring on top - app/autoload.php or app/bootstrap.php.cache? There's a subtle difference between the two starting in Symfony 2.8 (we tweaked some directory structure things in Symfony). If in doubt, copy the web/app_dev.php file from *your* project as your starting point for the play.php file (instead of making your copy look exactly like mine).</p><p>If you're still having trouble, just post your full play.php file - and also, post the "autoload" section of your composer.json - and we'll work it out :).</p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2872150804" id="dsq-comment-2872150804">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/disqus_gQPoYRRcKl/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2872150804">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-09-02</span>
	                            <span class="dsq-commenter-name">Max</span>
	                        </div>

	                        <div id="dsq-comment-message-2872150804" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2872150804" class="dsq-comment-text">
	                                <p>Hey there!<br>First of all thank you so much for these amazing tutorials! :) I really fell in love with them!</p><p>running the play.php with symfony 2.8 I get the following:</p><p>PHP Fatal error:  Class 'Symfony\Component\Debug\Debug' not found in /Users/maxschons/Sites/knpuniversity2/play.php on line 9<br>PHP Stack trace:<br>PHP   1. {main}() /Users/maxschons/Sites/knpuniversity2/play.php:0</p><p>Fatal error: Class 'Symfony\Component\Debug\Debug' not found in /Users/maxschons/Sites/knpuniversity2/play.php on line 9</p><p>Call Stack:<br>    0.0016     229856   1. {main}() /Users/maxschons/Sites/knpuniversity2/play.php:0</p><p>Any idea? Thx!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2730596240" id="dsq-comment-2730596240">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/JLChafardet/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/239/4757/avatar92.jpg?1465781626">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2730596240">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-14</span>
	                            <span class="dsq-commenter-name">JLChafardet</span>
	                        </div>

	                        <div id="dsq-comment-message-2730596240" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2730596240" class="dsq-comment-text">
	                                <p>Yeah, i guessed as much, it makes sense, keeping things organized allow for better understanding and easier scalability.<br>cheers mate! thanks for taking the time to answer :D</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2730568059" id="dsq-comment-2730568059">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2730568059">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-14</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2730568059" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2730568059" class="dsq-comment-text">
	                                <p>Hey <a data-dsq-mention="jlchafardet:disqus" href="https://disq.us/url?url=https%3A%2F%2Fdisqus.com%2Fby%2FJLChafardet%2F%3AjZxNog94UizvqXQUCl-KMKR2elA&amp;cuid=1175718" rel="nofollow noopener">JLChafardet</a>! Welcome - late, but still here ;).</p><p>About the "Repository" directory itself, I like this because the only other alternative that people use is to put their *Repository classes into the Entity directory (and then it's a mixture of entities and repositories). But, no deeper meaning :). If you're asking why I like organizing things into repository classes in general, it's because I *love* having 100% of my database queries in 1 spot - it makes future database changes and re-using query logic really easy.</p><p>Anyways - I hope I hit on your question. Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2728869602" id="dsq-comment-2728869602">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/JLChafardet/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/239/4757/avatar92.jpg?1465781626">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2728869602">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2016-06-13</span>
	                            <span class="dsq-commenter-name">JLChafardet</span>
	                        </div>

	                        <div id="dsq-comment-message-2728869602" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2728869602" class="dsq-comment-text">
	                                <p>yo <a data-dsq-mention="weaverryan:disqus" href="https://disqus.com/by/weaverryan/" rel="nofollow noopener">weaverryan</a> thanks for the effort of the screencast, im a tad late but hey! im here! lol.</p><p>I have a question for you, regarding the Repository directory, in regards to structure, etc, why do you like it so? any specific reasons other than just "organization" of your code? or its there a deeper meaning to it?</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2243074970" id="dsq-comment-2243074970">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/justicesommer/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2243074970">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-09-08</span>
	                            <span class="dsq-commenter-name">Justice Sommer</span>
	                        </div>

	                        <div id="dsq-comment-message-2243074970" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2243074970" class="dsq-comment-text">
	                                <p>I was running MySQL via XAMPP.  I manually added a DB named "symfony".  then ran the command via the command line again.  That seems to have fixed it.</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2243052343" id="dsq-comment-2243052343">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2243052343">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-09-08</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-2243052343" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2243052343" class="dsq-comment-text">
	                                <p>Hey Justice!</p><p>Your database doesn't exist yet - so don't forget to have Symfony create it for you :). This is explained in the next chapter: <a href="https://disq.us/url?url=https%3A%2F%2Fknpuniversity.com%2Fscreencast%2Fsymfony2-ep1%2Fdoctrine2%23we-can-haz-database%3AhhcuHoSzS4o2QwoWJ58xzoYTIl4&amp;cuid=1175718" rel="nofollow noopener">https://knpuniversity.com/scre...</a></p><p>Cheers!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2243025574" id="dsq-comment-2243025574">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/justicesommer/">
	                            	                                <img alt="" src="http://a.disquscdn.com/1479321018/images/noavatar92.png">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2243025574">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-09-08</span>
	                            <span class="dsq-commenter-name">Justice Sommer</span>
	                        </div>

	                        <div id="dsq-comment-message-2243025574" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2243025574" class="dsq-comment-text">
	                                <p>after entering the Entity shortcut name I get...</p><p>  [Doctrine\DBAL\Exception\ConnectionException]<br>  An exception occured in driver: SQLSTATE[HY000] [1049] Unknown database 'symfony'</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="2173843009" id="dsq-comment-2173843009">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/shairyarbaig/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/10592/9062/avatar92.jpg?1469787361">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-2173843009">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-08-04</span>
	                            <span class="dsq-commenter-name">Shairyar Baig</span>
	                        </div>

	                        <div id="dsq-comment-message-2173843009" class="dsq-comment-message">
	                            <div id="dsq-comment-text-2173843009" class="dsq-comment-text">
	                                <p>Very helpful tutorial</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1824068418" id="dsq-comment-1824068418">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/MolloKhan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/9429/4645/avatar92.jpg?1475260109">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1824068418">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-29</span>
	                            <span class="dsq-commenter-name">Diego Aguiar</span>
	                        </div>

	                        <div id="dsq-comment-message-1824068418" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1824068418" class="dsq-comment-text">
	                                <p>I did what you said and it worked!</p><p>I just added a "generateId" method to my repository and made my listener to call it on PrePersist event</p><p>Thanks for your time :D</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1822817108" id="dsq-comment-1822817108">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/weaverryan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/32/6480/avatar92.jpg?1482356913">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1822817108">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-29</span>
	                            <span class="dsq-commenter-name">weaverryan</span>
	                        </div>

	                        <div id="dsq-comment-message-1822817108" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1822817108" class="dsq-comment-text">
	                                <p>Hmm, you know, I'm not sure :). But I would try it! Remove the `$id` (the normal one that Doctrine adds), then add a property for your varchar one that exists, and give it @ORM\Column and @ORM\Id, but don't give it @ORM\GeneratedValue. I think in theory that should work. Doctrine needs (I believe) someething to be the @ORM\Id of the entity, but really, it doesn't care if it's an integer or auto-increment. Not having auto-increment causes other problems of course: specifically you need to manually set this before saving.</p><p>Let me know how it goes!</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	                <li class="dsq-comment dsq-clearfix" data-dsq-comment-id="1821898807" id="dsq-comment-1821898807">
	                    <div class="dsq-avatar dsq-tt">
	                        <a href="https://disqus.com/by/MolloKhan/">
	                            	                                <img alt="" src="http://a.disquscdn.com/uploads/users/9429/4645/avatar92.jpg?1475260109">
	                            	                        </a>
	                    </div>
	                    <div class="dsq-comment-body" id="dsq-comment-body-1821898807">
	                        <div class="dsq-comment-header">
	                            <span class="dsq-comment-date">2015-01-28</span>
	                            <span class="dsq-commenter-name">Diego Aguiar</span>
	                        </div>

	                        <div id="dsq-comment-message-1821898807" class="dsq-comment-message">
	                            <div id="dsq-comment-text-1821898807" class="dsq-comment-text">
	                                <p>Hey there!</p><p>I have a question about entities id's column</p><p>I already have an users table in my project and it's ID is not an "AUTO_INCREMENT" id, it is a custom varchar ID</p><p>Is it possible to change the auto generated ID column of Doctrine to this one ?</p><p>Thanks for your time! :]</p>
	                            </div>
	                        </div>
	                    </div>
	                </li>
	            	        </ul>
	    </div>
            </div>

    <script type="text/javascript">
    var disqus_shortname = 'knpuniversity';
    var disqus_container_id = 'disqus_thread';var disqus_developer = 1;var disqus_identifier = 'course_video_doctrine';var disqus_url = 'https://knpuniversity.com/screencast/symfony2-ep1/doctrine';var disqus_config = function () {};

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

                                            </div>
                    <div class="pull-left-xs pull-right-md">
                                        <a class="btn btn-success"
           href="doctrine2#play">
            Next Chapter <i class="fa fa-caret-right"></i>
        </a>
    
                    </div>
                    <div class="pull-left addthis-module">
                        
    <div class="addthis_toolbox addthis_default_style js-analytics-addthis-wrapper addthis_32x32_style" addthis:url="http://knpuniversity.com/screencast/symfony2-ep1/doctrine" addthis:title="Starting in Symfony2: Course 1 (2.4+)">
        <a class="addthis_button_preferred_1"></a>
        <a class="addthis_button_preferred_2"></a>
        <a class="addthis_button_preferred_3"></a>
        <a class="addthis_button_preferred_4"></a>
        <a class="addthis_button_compact"></a>
        <a class="addthis_counter addthis_bubble_style"></a>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<footer class="footer footer-styling">
    <div class="container">
        <div class="row">
                        <div class="col-xs-7 col-sm-4">
                <div class="row">
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../courses/all">All Courses</a></li>
                                                            <li><a class="knp-color-black" href="../../pricing.1">Pricing</a></li>
                                                        <li><a class="knp-color-black" href="../../faq">FAQ</a></li>
                            <li><a class="knp-color-black" href="../../training">Training</a></li>
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <ul class="list-unstyled footer-link">
                            <li><a class="knp-color-black" href="../../about">About</a></li>
                            <li><a class="knp-color-black" href="../../blog">Blog</a></li>
                            <li><a class="knp-color-black" href="../../contact">Contact Us</a></li>
                            <li>
                                <a class="knp-color-black" href="../../terms">Terms</a>
                                <span class="knp-color-black">&amp;</span>
                                <a class="knp-color-black" href="../../privacy">Privacy</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="hidden-xs col-sm-4">
                <p class="disclaimer">Symfony is a registered trademark of Fabien Potencier in the United States and/or other countries.
                This product is not endorsed or sponsored by Fabien Potencier.
                </p>
            </div>
            <div class="col-xs-5 col-sm-4">
                <div class="social-icons">
                    <a class="btn btn-social-icon btn-twitter" href="https://twitter.com/KnpUniversity">
                        <i class="fa fa-twitter"></i>
                    </a>
                    <a class="btn btn-social-icon btn-facebook" href="https://www.facebook.com/KnpLabs/">
                        <i class="fa fa-facebook"></i>
                    </a>
                    <a class="btn btn-social-icon btn-github" href="https://github.com/knpuniversity">
                        <i class="fa fa-github"></i>
                    </a>
                </div>
            </div>
                    </div>
    </div>
</footer>

<!-- JS -->
            <script>
        Core.analyticsVideoStatsUrl = '/api/analytics/video/duration';
    </script>

            <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

        <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-7062980-20']);
        _gaq.push(['_trackPageview']);
    </script>
    <script>
    
    </script>
    
    <script type="text/javascript">
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();
    </script>
    
                <script type="text/javascript">
      (function() {
        var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
        uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/pOay2WLVabhXiEffbarO6Q.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
      })();

      UserVoice = window.UserVoice || [];
      UserVoice.push(['showTab', 'classic_widget', {
          tab_position: 'bottom-right',
          tab_label: 'Ideas or Feedback?',
          tab_color: '#005E8E'
      }]);
    </script>
        
            
        <script type="text/javascript">
    var _sf_async_config={uid:54262,domain:"knpuniversity.com",useCanonical:true};
    (function(){
      function loadChartbeat() {
        window._sf_endpt=(new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
      }
      var oldonload = window.onload;
      window.onload = (typeof window.onload != 'function') ?
         loadChartbeat : function() { oldonload(); loadChartbeat(); };
    })();
    </script>
    
            <script>
            (function(){
                var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
            })("woopra");

            woopra.config({
                domain: 'knpuniversity.com',
                download_tracking: true,
                outgoing_tracking: true
            });

                            woopra.identify({
                    userType: 'anonymous',
                    hasSubscription: 'no'
                });
                    </script>

        <script>
            woopra.track(
            'course_view_chapter',
            {"course":"symfony2-ep1","courseIsOwned":false,"chapter":"Databases and Doctrine","chapterNumber":7,"chapterIsFree":false}
        );
    </script>

        <script>
            woopra.track();
        </script>
     
        <script type="text/javascript">
    var _qevents = _qevents || [];

    (function() {
    var elem = document.createElement('script');
    elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
    elem.async = true;
    elem.type = "text/javascript";
    var scpt = document.getElementsByTagName('script')[0];
    scpt.parentNode.insertBefore(elem, scpt);
    })();

    _qevents.push({
    qacct:"p-8-SEHS37bhSQ0"
    });
    </script>

    <noscript>
    <div style="display:none;">
    <img src="http://pixel.quantserve.com/pixel/p-8-SEHS37bhSQ0.gif" border="0" height="1" width="1" alt="Quantcast"/>
    </div>
    </noscript>
    


    <script type="text/javascript" src="../../assets/vendor/jquery-sticky/jquery.sticky.js"></script>
    <script type="text/javascript" src="../../assets/vendor/zeroclipboard/dist/ZeroClipboard.min.js"></script>
    <script type="text/javascript" src="../../js/CodeBlocks.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/underscore.js"></script>
    <script type="text/javascript" src="../../bundles/knpuniversity/sphinx/js/doctools.js"></script>

    <script>
        Core.courseTitle = 'Starting in Symfony2: Course 1 (2.4+)';
        Core.courseId = 38
        Core.courseIsOwned = false;
        Core.courseSlug = 'symfony2-ep1';
                    Core.chapterTitle = 'Databases and Doctrine';
            Core.chapterNumber = 7;
            Core.chapterIsFree = false;
            Core.chapterSlug = 'doctrine';
        
                var DOCUMENTATION_OPTIONS = {
            URL_ROOT:    '../../',
            VERSION:     '1.0.0',
            COLLAPSE_INDEX: false,
            FILE_SUFFIX: '.html',
            HAS_SOURCE:  true
        };

        jQuery(document).ready(function() {
            // Stick left sidebar menu
            $('.js-sticker').sticky();

            var $scriptWrapper = $('.js-script-content-wrapper');
            var codeBlocks = new Core.CodeBlocks($scriptWrapper);

            var expandList = $('.js-expand-list');

            expandList.on('click', function(){
                var target = $(this).data('target');
                var $expandArea = $('#' + target);
                $expandArea.toggleClass('expanded');

                // http://stackoverflow.com/questions/2868582/click-outside-menu-to-close-in-jquery
                $(document).one('click', function closeExpandList (e){
                    if($expandArea.has(e.target).length === 0){
                        $expandArea.removeClass('expanded');
                    } else {
                        $(document).one('click', closeExpandList);
                    }
                });
            });
        });
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>



    <script type="text/javascript">
    var addthis_share = {
        templates: {
            twitter: '{{title}} - {{url}} | via @KnpUniversity'
        }
    }
</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=weaverryan"></script>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"b4d8035b34","applicationID":"3720092","transactionName":"MgEBMkZVXBFXBRENWwtLIgVAXV0MGQ0LFGsQCgoQUUZBC0IfOgdbEBYQA2tHWg1B","queueTime":0,"applicationTime":915,"atts":"HkYCRA5PTx8=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
